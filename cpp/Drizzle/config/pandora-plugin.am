
# always the current list, generated every build so keep this lean.
# pandora-plugin.list: datestamp preserved list
${srcdir}/config/pandora-plugin.list: .plugin.scan
.plugin.scan:
	@cd ${top_srcdir} && python config/pandora-plugin plugin-list

# Plugins affect configure; so to prevent configure running twice in a tarball
# build (once up front, once with the right list of plugins, we ship the
# generated list of plugins and the housekeeping material for that list so it
# is likewise not updated.
EXTRA_DIST += 	config/pandora-plugin.am 	config/pandora-plugin.ac 	config/pandora-plugin 	config/pandora-plugin.ini


# Seed the list of plugin LDADDS which plugins may extend.
PANDORA_DYNAMIC_LDADDS=

# plugin.stamp: graph dominator for creating all per pandora-plugin.ac/am
# files. This is invoked when the code to generate such files has altered.
${top_srcdir}/config/pandora-plugin.am: ${top_srcdir}/config/pandora-plugin.list ${top_srcdir}/config/pandora-plugin \
	./plugin/ascii/plugin.ini \
	./plugin/auth_all/plugin.ini \
	./plugin/auth_file/plugin.ini \
	./plugin/auth_http/plugin.ini \
	./plugin/auth_ldap/plugin.ini \
	./plugin/auth_pam/plugin.ini \
	./plugin/auth_test/plugin.ini \
	./plugin/benchmark/plugin.ini \
	./plugin/catalog/plugin.ini \
	./plugin/charlength/plugin.ini \
	./plugin/coercibility_function/plugin.ini \
	./plugin/collation_dictionary/plugin.ini \
	./plugin/compression/plugin.ini \
	./plugin/connection_id/plugin.ini \
	./plugin/console/plugin.ini \
	./plugin/crc32/plugin.ini \
	./plugin/debug/plugin.ini \
	./plugin/default_replicator/plugin.ini \
	./plugin/drizzle_protocol/plugin.ini \
	./plugin/errmsg_stderr/plugin.ini \
	./plugin/error_dictionary/plugin.ini \
	./plugin/filtered_replicator/plugin.ini \
	./plugin/function_dictionary/plugin.ini \
	./plugin/function_engine/plugin.ini \
	./plugin/gearman_udf/plugin.ini \
	./plugin/haildb/plugin.ini \
	./plugin/hello_events/plugin.ini \
	./plugin/hello_world/plugin.ini \
	./plugin/hex_functions/plugin.ini \
	./plugin/information_schema_dictionary/plugin.ini \
	./plugin/innobase/plugin.ini \
	./plugin/length/plugin.ini \
	./plugin/logging_gearman/plugin.ini \
	./plugin/logging_query/plugin.ini \
	./plugin/logging_stats/plugin.ini \
	./plugin/math_functions/plugin.ini \
	./plugin/md5/plugin.ini \
	./plugin/memcached_functions/plugin.ini \
	./plugin/memcached_query_cache/plugin.ini \
	./plugin/memcached_stats/plugin.ini \
	./plugin/memory/plugin.ini \
	./plugin/multi_thread/plugin.ini \
	./plugin/myisam/plugin.ini \
	./plugin/mysql_protocol/plugin.ini \
	./plugin/mysql_unix_socket_protocol/plugin.ini \
	./plugin/pbms/plugin.ini \
	./plugin/performance_dictionary/plugin.ini \
	./plugin/protocol_dictionary/plugin.ini \
	./plugin/rabbitmq/plugin.ini \
	./plugin/rand_function/plugin.ini \
	./plugin/regex_policy/plugin.ini \
	./plugin/registry_dictionary/plugin.ini \
	./plugin/replication_dictionary/plugin.ini \
	./plugin/reverse_function/plugin.ini \
	./plugin/rot13/plugin.ini \
	./plugin/schema_dictionary/plugin.ini \
	./plugin/schema_engine/plugin.ini \
	./plugin/session_dictionary/plugin.ini \
	./plugin/show_dictionary/plugin.ini \
	./plugin/show_schema_proto/plugin.ini \
	./plugin/shutdown_function/plugin.ini \
	./plugin/signal_handler/plugin.ini \
	./plugin/simple_user_policy/plugin.ini \
	./plugin/slave/plugin.ini \
	./plugin/sleep/plugin.ini \
	./plugin/status_dictionary/plugin.ini \
	./plugin/storage_engine_api_tester/plugin.ini \
	./plugin/string_functions/plugin.ini \
	./plugin/substr_functions/plugin.ini \
	./plugin/syslog/plugin.ini \
	./plugin/table_cache_dictionary/plugin.ini \
	./plugin/tableprototester/plugin.ini \
	./plugin/transaction_log/plugin.ini \
	./plugin/trigger_dictionary/plugin.ini \
	./plugin/user_locks/plugin.ini \
	./plugin/utility_dictionary/plugin.ini \
	./plugin/utility_functions/plugin.ini \
	./plugin/uuid_function/plugin.ini \
	./plugin/version/plugin.ini 
	cd ${top_srcdir} && python config/pandora-plugin write

EXTRA_DIST += plugin/ascii/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/ascii/plugin.ini:


plugin_ascii_dir=${top_srcdir}/plugin/ascii
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/ascii/plugin.ini  plugin/ascii/ascii.cc
if BUILD_ASCII_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libascii_plugin.la
  plugin_libascii_plugin_la_LIBADD=
  plugin_libascii_plugin_la_DEPENDENCIES=
  plugin_libascii_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libascii_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=ascii -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for ASCII' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libascii_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libascii_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libascii_plugin_la_SOURCES= plugin/ascii/ascii.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libascii_plugin.la
endif
EXTRA_DIST += plugin/ascii/plugin.ini
if BUILD_ASCII_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libascii_plugin.la
  plugin_libascii_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libascii_plugin_la_LIBADD=
  plugin_libascii_plugin_la_DEPENDENCIES=
  plugin_libascii_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=ascii -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for ASCII' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libascii_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libascii_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libascii_plugin_la_SOURCES= plugin/ascii/ascii.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_all/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_all/plugin.ini:


plugin_auth_all_dir=${top_srcdir}/plugin/auth_all
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_all/plugin.ini  plugin/auth_all/auth_all.cc
if BUILD_AUTH_ALL_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_all_plugin.la
  plugin_libauth_all_plugin_la_LIBADD=
  plugin_libauth_all_plugin_la_DEPENDENCIES=
  plugin_libauth_all_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_all_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_all -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Allow All Authentication' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_all_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_all_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_all_plugin_la_SOURCES= plugin/auth_all/auth_all.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_all_plugin.la
endif
EXTRA_DIST += plugin/auth_all/plugin.ini
if BUILD_AUTH_ALL_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_all_plugin.la
  plugin_libauth_all_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_all_plugin_la_LIBADD=
  plugin_libauth_all_plugin_la_DEPENDENCIES=
  plugin_libauth_all_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_all -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Allow All Authentication' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_all_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_all_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_all_plugin_la_SOURCES= plugin/auth_all/auth_all.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_file/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_file/plugin.ini:

EXTRA_DIST += plugin/auth_file/tests

plugin_auth_file_dir=${top_srcdir}/plugin/auth_file
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_file/plugin.ini  plugin/auth_file/auth_file.cc
if BUILD_AUTH_FILE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_file_plugin.la
  plugin_libauth_file_plugin_la_LIBADD=
  plugin_libauth_file_plugin_la_DEPENDENCIES=
  plugin_libauth_file_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_file_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_file -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='File-based Authentication' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_file_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_file_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_file_plugin_la_SOURCES= plugin/auth_file/auth_file.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_file_plugin.la
endif
EXTRA_DIST += plugin/auth_file/plugin.ini
if BUILD_AUTH_FILE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_file_plugin.la
  plugin_libauth_file_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_file_plugin_la_LIBADD=
  plugin_libauth_file_plugin_la_DEPENDENCIES=
  plugin_libauth_file_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_file -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='File-based Authentication' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_file_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_file_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_file_plugin_la_SOURCES= plugin/auth_file/auth_file.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_http/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_http/plugin.ini:


plugin_auth_http_dir=${top_srcdir}/plugin/auth_http
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_http/plugin.ini  plugin/auth_http/auth_http.cc
if BUILD_AUTH_HTTP_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_http_plugin.la
  plugin_libauth_http_plugin_la_LIBADD=
  plugin_libauth_http_plugin_la_DEPENDENCIES=
  plugin_libauth_http_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBCURL} $(GCOV_LIBS)
  plugin_libauth_http_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_http -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HTTP Authentication Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_http_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_http_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_http_plugin_la_SOURCES= plugin/auth_http/auth_http.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_http_plugin.la
endif
EXTRA_DIST += plugin/auth_http/plugin.ini
if BUILD_AUTH_HTTP_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_http_plugin.la
  plugin_libauth_http_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBCURL} $(GCOV_LIBS)
  plugin_libauth_http_plugin_la_LIBADD=
  plugin_libauth_http_plugin_la_DEPENDENCIES=
  plugin_libauth_http_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_http -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HTTP Authentication Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_http_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_http_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_http_plugin_la_SOURCES= plugin/auth_http/auth_http.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_ldap/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_ldap/plugin.ini:

EXTRA_DIST += plugin/auth_ldap/schema/README plugin/auth_ldap/schema/gentestusers.sh plugin/auth_ldap/schema/openldap/drizzle.ldif plugin/auth_ldap/schema/openldap/drizzle.schema plugin/auth_ldap/test_ldap.sh

plugin_auth_ldap_dir=${top_srcdir}/plugin/auth_ldap
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_ldap/plugin.ini  plugin/auth_ldap/auth_ldap.cc
if BUILD_AUTH_LDAP_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_ldap_plugin.la
  plugin_libauth_ldap_plugin_la_LIBADD=
  plugin_libauth_ldap_plugin_la_DEPENDENCIES=
  plugin_libauth_ldap_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBLDAP} $(GCOV_LIBS)
  plugin_libauth_ldap_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_ldap -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='LDAP Authentication' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_ldap_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_ldap_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_ldap_plugin_la_SOURCES= plugin/auth_ldap/auth_ldap.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_ldap_plugin.la
endif
EXTRA_DIST += plugin/auth_ldap/plugin.ini
if BUILD_AUTH_LDAP_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_ldap_plugin.la
  plugin_libauth_ldap_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBLDAP} $(GCOV_LIBS)
  plugin_libauth_ldap_plugin_la_LIBADD=
  plugin_libauth_ldap_plugin_la_DEPENDENCIES=
  plugin_libauth_ldap_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_ldap -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='LDAP Authentication' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_ldap_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_ldap_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_ldap_plugin_la_SOURCES= plugin/auth_ldap/auth_ldap.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_pam/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_pam/plugin.ini:

EXTRA_DIST += plugin/auth_pam/README

plugin_auth_pam_dir=${top_srcdir}/plugin/auth_pam
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_pam/plugin.ini  plugin/auth_pam/auth_pam.cc
if BUILD_AUTH_PAM_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_pam_plugin.la
  plugin_libauth_pam_plugin_la_LIBADD=
  plugin_libauth_pam_plugin_la_DEPENDENCIES=
  plugin_libauth_pam_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBPAM} $(GCOV_LIBS)
  plugin_libauth_pam_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_pam -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='PAM Authenication Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_pam_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_pam_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_pam_plugin_la_SOURCES= plugin/auth_pam/auth_pam.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_pam_plugin.la
endif
EXTRA_DIST += plugin/auth_pam/plugin.ini
if BUILD_AUTH_PAM_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_pam_plugin.la
  plugin_libauth_pam_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBPAM} $(GCOV_LIBS)
  plugin_libauth_pam_plugin_la_LIBADD=
  plugin_libauth_pam_plugin_la_DEPENDENCIES=
  plugin_libauth_pam_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_pam -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='PAM Authenication Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_pam_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_pam_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_pam_plugin_la_SOURCES= plugin/auth_pam/auth_pam.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/auth_test/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/auth_test/plugin.ini:

EXTRA_DIST += plugin/auth_test/tests

plugin_auth_test_dir=${top_srcdir}/plugin/auth_test
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/auth_test/plugin.ini  plugin/auth_test/auth_test.cc
if BUILD_AUTH_TEST_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libauth_test_plugin.la
  plugin_libauth_test_plugin_la_LIBADD=
  plugin_libauth_test_plugin_la_DEPENDENCIES=
  plugin_libauth_test_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_test_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=auth_test -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='Authentication Test' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_test_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_test_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_test_plugin_la_SOURCES= plugin/auth_test/auth_test.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libauth_test_plugin.la
endif
EXTRA_DIST += plugin/auth_test/plugin.ini
if BUILD_AUTH_TEST_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libauth_test_plugin.la
  plugin_libauth_test_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libauth_test_plugin_la_LIBADD=
  plugin_libauth_test_plugin_la_DEPENDENCIES=
  plugin_libauth_test_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=auth_test -DPANDORA_MODULE_AUTHOR='Eric Day <eday@oddments.org>' -DPANDORA_MODULE_TITLE='Authentication Test' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libauth_test_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libauth_test_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libauth_test_plugin_la_SOURCES= plugin/auth_test/auth_test.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/benchmark/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/benchmark/plugin.ini:


plugin_benchmark_dir=${top_srcdir}/plugin/benchmark
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/benchmark/plugin.ini  plugin/benchmark/benchmarkudf.cc
if BUILD_BENCHMARK_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libbenchmark_plugin.la
  plugin_libbenchmark_plugin_la_LIBADD=
  plugin_libbenchmark_plugin_la_DEPENDENCIES=
  plugin_libbenchmark_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libbenchmark_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=benchmark -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for Benchmark' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libbenchmark_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libbenchmark_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libbenchmark_plugin_la_SOURCES= plugin/benchmark/benchmarkudf.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libbenchmark_plugin.la
endif
EXTRA_DIST += plugin/benchmark/plugin.ini
if BUILD_BENCHMARK_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libbenchmark_plugin.la
  plugin_libbenchmark_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libbenchmark_plugin_la_LIBADD=
  plugin_libbenchmark_plugin_la_DEPENDENCIES=
  plugin_libbenchmark_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=benchmark -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for Benchmark' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libbenchmark_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libbenchmark_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libbenchmark_plugin_la_SOURCES= plugin/benchmark/benchmarkudf.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/catalog/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/catalog/plugin.ini:

noinst_HEADERS +=  plugin/catalog/functions/create.h plugin/catalog/functions/drop.h plugin/catalog/functions/lock.h plugin/catalog/functions/unlock.h plugin/catalog/engine.h plugin/catalog/filesystem.h plugin/catalog/module.h plugin/catalog/tables/catalog_cache.h plugin/catalog/tables/catalogs.h
EXTRA_DIST += plugin/catalog/tests

plugin_catalog_dir=${top_srcdir}/plugin/catalog
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/catalog/plugin.ini  plugin/catalog/engine.cc plugin/catalog/functions/create.cc plugin/catalog/functions/drop.cc plugin/catalog/functions/lock.cc plugin/catalog/functions/unlock.cc plugin/catalog/module.cc plugin/catalog/tables/catalog_cache.cc plugin/catalog/tables/catalogs.cc
if BUILD_CATALOG_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcatalog_plugin.la
  plugin_libcatalog_plugin_la_LIBADD=
  plugin_libcatalog_plugin_la_DEPENDENCIES=
  plugin_libcatalog_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcatalog_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=catalog -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Catalog related DDL functions.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcatalog_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcatalog_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcatalog_plugin_la_SOURCES= plugin/catalog/engine.cc plugin/catalog/functions/create.cc plugin/catalog/functions/drop.cc plugin/catalog/functions/lock.cc plugin/catalog/functions/unlock.cc plugin/catalog/module.cc plugin/catalog/tables/catalog_cache.cc plugin/catalog/tables/catalogs.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcatalog_plugin.la
endif
EXTRA_DIST += plugin/catalog/plugin.ini
if BUILD_CATALOG_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcatalog_plugin.la
  plugin_libcatalog_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcatalog_plugin_la_LIBADD=
  plugin_libcatalog_plugin_la_DEPENDENCIES=
  plugin_libcatalog_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=catalog -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Catalog related DDL functions.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcatalog_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcatalog_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcatalog_plugin_la_SOURCES= plugin/catalog/engine.cc plugin/catalog/functions/create.cc plugin/catalog/functions/drop.cc plugin/catalog/functions/lock.cc plugin/catalog/functions/unlock.cc plugin/catalog/module.cc plugin/catalog/tables/catalog_cache.cc plugin/catalog/tables/catalogs.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/charlength/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/charlength/plugin.ini:


plugin_charlength_dir=${top_srcdir}/plugin/charlength
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/charlength/plugin.ini  plugin/charlength/charlength.cc
if BUILD_CHARLENGTH_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcharlength_plugin.la
  plugin_libcharlength_plugin_la_LIBADD=
  plugin_libcharlength_plugin_la_DEPENDENCIES=
  plugin_libcharlength_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcharlength_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=charlength -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for CharLength' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcharlength_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcharlength_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcharlength_plugin_la_SOURCES= plugin/charlength/charlength.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcharlength_plugin.la
endif
EXTRA_DIST += plugin/charlength/plugin.ini
if BUILD_CHARLENGTH_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcharlength_plugin.la
  plugin_libcharlength_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcharlength_plugin_la_LIBADD=
  plugin_libcharlength_plugin_la_DEPENDENCIES=
  plugin_libcharlength_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=charlength -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for CharLength' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcharlength_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcharlength_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcharlength_plugin_la_SOURCES= plugin/charlength/charlength.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/coercibility_function/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/coercibility_function/plugin.ini:

EXTRA_DIST += plugin/coercibility_function/tests

plugin_coercibility_function_dir=${top_srcdir}/plugin/coercibility_function
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/coercibility_function/plugin.ini  plugin/coercibility_function/coercibility_function.cc
if BUILD_COERCIBILITY_FUNCTION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcoercibility_function_plugin.la
  plugin_libcoercibility_function_plugin_la_LIBADD=
  plugin_libcoercibility_function_plugin_la_DEPENDENCIES=
  plugin_libcoercibility_function_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcoercibility_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=coercibility_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='COERCIBILITY() Function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcoercibility_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcoercibility_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcoercibility_function_plugin_la_SOURCES= plugin/coercibility_function/coercibility_function.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcoercibility_function_plugin.la
endif
EXTRA_DIST += plugin/coercibility_function/plugin.ini
if BUILD_COERCIBILITY_FUNCTION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcoercibility_function_plugin.la
  plugin_libcoercibility_function_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcoercibility_function_plugin_la_LIBADD=
  plugin_libcoercibility_function_plugin_la_DEPENDENCIES=
  plugin_libcoercibility_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=coercibility_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='COERCIBILITY() Function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcoercibility_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcoercibility_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcoercibility_function_plugin_la_SOURCES= plugin/coercibility_function/coercibility_function.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/collation_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/collation_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/collation_dictionary/character_sets.h plugin/collation_dictionary/collations.h plugin/collation_dictionary/dictionary.h
EXTRA_DIST += plugin/collation_dictionary/tests

plugin_collation_dictionary_dir=${top_srcdir}/plugin/collation_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/collation_dictionary/plugin.ini  plugin/collation_dictionary/character_sets.cc plugin/collation_dictionary/collations.cc plugin/collation_dictionary/dictionary.cc
if BUILD_COLLATION_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcollation_dictionary_plugin.la
  plugin_libcollation_dictionary_plugin_la_LIBADD=
  plugin_libcollation_dictionary_plugin_la_DEPENDENCIES=
  plugin_libcollation_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcollation_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=collation_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Character And Collation Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcollation_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcollation_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcollation_dictionary_plugin_la_SOURCES= plugin/collation_dictionary/character_sets.cc plugin/collation_dictionary/collations.cc plugin/collation_dictionary/dictionary.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcollation_dictionary_plugin.la
endif
EXTRA_DIST += plugin/collation_dictionary/plugin.ini
if BUILD_COLLATION_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcollation_dictionary_plugin.la
  plugin_libcollation_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcollation_dictionary_plugin_la_LIBADD=
  plugin_libcollation_dictionary_plugin_la_DEPENDENCIES=
  plugin_libcollation_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=collation_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Character And Collation Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcollation_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcollation_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcollation_dictionary_plugin_la_SOURCES= plugin/collation_dictionary/character_sets.cc plugin/collation_dictionary/collations.cc plugin/collation_dictionary/dictionary.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/compression/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/compression/plugin.ini:

noinst_HEADERS +=  plugin/compression/compress.h plugin/compression/uncompress.h plugin/compression/uncompressed_length.h

plugin_compression_dir=${top_srcdir}/plugin/compression
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/compression/plugin.ini  plugin/compression/compress.cc plugin/compression/compressionudf.cc plugin/compression/uncompress.cc plugin/compression/uncompressed_length.cc
if BUILD_COMPRESSION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcompression_plugin.la
  plugin_libcompression_plugin_la_LIBADD=
  plugin_libcompression_plugin_la_DEPENDENCIES=
  plugin_libcompression_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcompression_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=compression -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='compression UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcompression_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcompression_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcompression_plugin_la_SOURCES= plugin/compression/compress.cc plugin/compression/compressionudf.cc plugin/compression/uncompress.cc plugin/compression/uncompressed_length.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcompression_plugin.la
endif
EXTRA_DIST += plugin/compression/plugin.ini
if BUILD_COMPRESSION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcompression_plugin.la
  plugin_libcompression_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcompression_plugin_la_LIBADD=
  plugin_libcompression_plugin_la_DEPENDENCIES=
  plugin_libcompression_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=compression -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='compression UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcompression_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcompression_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcompression_plugin_la_SOURCES= plugin/compression/compress.cc plugin/compression/compressionudf.cc plugin/compression/uncompress.cc plugin/compression/uncompressed_length.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/connection_id/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/connection_id/plugin.ini:


plugin_connection_id_dir=${top_srcdir}/plugin/connection_id
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/connection_id/plugin.ini  plugin/connection_id/connection_id.cc
if BUILD_CONNECTION_ID_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libconnection_id_plugin.la
  plugin_libconnection_id_plugin_la_LIBADD=
  plugin_libconnection_id_plugin_la_DEPENDENCIES=
  plugin_libconnection_id_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libconnection_id_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=connection_id -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Connection ID UDF' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libconnection_id_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libconnection_id_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libconnection_id_plugin_la_SOURCES= plugin/connection_id/connection_id.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libconnection_id_plugin.la
endif
EXTRA_DIST += plugin/connection_id/plugin.ini
if BUILD_CONNECTION_ID_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libconnection_id_plugin.la
  plugin_libconnection_id_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libconnection_id_plugin_la_LIBADD=
  plugin_libconnection_id_plugin_la_DEPENDENCIES=
  plugin_libconnection_id_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=connection_id -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Connection ID UDF' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libconnection_id_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libconnection_id_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libconnection_id_plugin_la_SOURCES= plugin/connection_id/connection_id.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/console/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/console/plugin.ini:


plugin_console_dir=${top_srcdir}/plugin/console
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/console/plugin.ini  plugin/console/console.cc
if BUILD_CONSOLE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libconsole_plugin.la
  plugin_libconsole_plugin_la_LIBADD=
  plugin_libconsole_plugin_la_DEPENDENCIES=
  plugin_libconsole_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libconsole_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=console -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Console Client' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libconsole_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libconsole_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libconsole_plugin_la_SOURCES= plugin/console/console.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libconsole_plugin.la
endif
EXTRA_DIST += plugin/console/plugin.ini
if BUILD_CONSOLE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libconsole_plugin.la
  plugin_libconsole_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libconsole_plugin_la_LIBADD=
  plugin_libconsole_plugin_la_DEPENDENCIES=
  plugin_libconsole_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=console -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Console Client' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libconsole_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libconsole_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libconsole_plugin_la_SOURCES= plugin/console/console.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/crc32/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/crc32/plugin.ini:

EXTRA_DIST += plugin/crc32/tests

plugin_crc32_dir=${top_srcdir}/plugin/crc32
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/crc32/plugin.ini  plugin/crc32/crc32udf.cc
if BUILD_CRC32_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libcrc32_plugin.la
  plugin_libcrc32_plugin_la_LIBADD=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libcrc32_plugin_la_DEPENDENCIES=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libcrc32_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcrc32_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=crc32 -DPANDORA_MODULE_AUTHOR='Stewart Smith' -DPANDORA_MODULE_TITLE='crc32 UDF' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcrc32_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcrc32_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcrc32_plugin_la_SOURCES= plugin/crc32/crc32udf.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libcrc32_plugin.la
endif
EXTRA_DIST += plugin/crc32/plugin.ini
if BUILD_CRC32_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libcrc32_plugin.la
  plugin_libcrc32_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libcrc32_plugin_la_LIBADD=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libcrc32_plugin_la_DEPENDENCIES=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libcrc32_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=crc32 -DPANDORA_MODULE_AUTHOR='Stewart Smith' -DPANDORA_MODULE_TITLE='crc32 UDF' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libcrc32_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libcrc32_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libcrc32_plugin_la_SOURCES= plugin/crc32/crc32udf.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/debug/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/debug/plugin.ini:

EXTRA_DIST += plugin/debug/tests

plugin_debug_dir=${top_srcdir}/plugin/debug
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/debug/plugin.ini  plugin/debug/module.cc
if BUILD_DEBUG_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libdebug_plugin.la
  plugin_libdebug_plugin_la_LIBADD=
  plugin_libdebug_plugin_la_DEPENDENCIES=
  plugin_libdebug_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdebug_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=debug -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Kernel debugger utilities.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdebug_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdebug_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdebug_plugin_la_SOURCES= plugin/debug/module.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libdebug_plugin.la
endif
EXTRA_DIST += plugin/debug/plugin.ini
if BUILD_DEBUG_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libdebug_plugin.la
  plugin_libdebug_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdebug_plugin_la_LIBADD=
  plugin_libdebug_plugin_la_DEPENDENCIES=
  plugin_libdebug_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=debug -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Kernel debugger utilities.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdebug_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdebug_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdebug_plugin_la_SOURCES= plugin/debug/module.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/default_replicator/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/default_replicator/plugin.ini:

EXTRA_DIST += plugin/default_replicator/AUTHORS
noinst_HEADERS +=  plugin/default_replicator/default_replicator.h

plugin_default_replicator_dir=${top_srcdir}/plugin/default_replicator
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/default_replicator/plugin.ini  plugin/default_replicator/default_replicator.cc
if BUILD_DEFAULT_REPLICATOR_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libdefault_replicator_plugin.la
  plugin_libdefault_replicator_plugin_la_LIBADD=
  plugin_libdefault_replicator_plugin_la_DEPENDENCIES=
  plugin_libdefault_replicator_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdefault_replicator_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=default_replicator -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Default Replicator' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdefault_replicator_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdefault_replicator_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdefault_replicator_plugin_la_SOURCES= plugin/default_replicator/default_replicator.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libdefault_replicator_plugin.la
endif
EXTRA_DIST += plugin/default_replicator/plugin.ini
if BUILD_DEFAULT_REPLICATOR_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libdefault_replicator_plugin.la
  plugin_libdefault_replicator_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdefault_replicator_plugin_la_LIBADD=
  plugin_libdefault_replicator_plugin_la_DEPENDENCIES=
  plugin_libdefault_replicator_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=default_replicator -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Default Replicator' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdefault_replicator_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdefault_replicator_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdefault_replicator_plugin_la_SOURCES= plugin/default_replicator/default_replicator.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/drizzle_protocol/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/drizzle_protocol/plugin.ini:

noinst_HEADERS +=  plugin/drizzle_protocol/drizzle_protocol.h

plugin_drizzle_protocol_dir=${top_srcdir}/plugin/drizzle_protocol
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/drizzle_protocol/plugin.ini  plugin/drizzle_protocol/drizzle_protocol.cc
if BUILD_DRIZZLE_PROTOCOL_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libdrizzle_protocol_plugin.la
  plugin_libdrizzle_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libdrizzle_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libdrizzle_protocol_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdrizzle_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=drizzle_protocol -DPANDORA_MODULE_AUTHOR='Brian Aker' -DPANDORA_MODULE_TITLE='Drizzle Protocol Module' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdrizzle_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdrizzle_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdrizzle_protocol_plugin_la_SOURCES= plugin/drizzle_protocol/drizzle_protocol.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libdrizzle_protocol_plugin.la
endif
EXTRA_DIST += plugin/drizzle_protocol/plugin.ini
if BUILD_DRIZZLE_PROTOCOL_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libdrizzle_protocol_plugin.la
  plugin_libdrizzle_protocol_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libdrizzle_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libdrizzle_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libdrizzle_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=drizzle_protocol -DPANDORA_MODULE_AUTHOR='Brian Aker' -DPANDORA_MODULE_TITLE='Drizzle Protocol Module' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libdrizzle_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libdrizzle_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libdrizzle_protocol_plugin_la_SOURCES= plugin/drizzle_protocol/drizzle_protocol.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/errmsg_stderr/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/errmsg_stderr/plugin.ini:

EXTRA_DIST += plugin/errmsg_stderr/tests

plugin_errmsg_stderr_dir=${top_srcdir}/plugin/errmsg_stderr
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/errmsg_stderr/plugin.ini  plugin/errmsg_stderr/errmsg_stderr.cc
if BUILD_ERRMSG_STDERR_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liberrmsg_stderr_plugin.la
  plugin_liberrmsg_stderr_plugin_la_LIBADD=
  plugin_liberrmsg_stderr_plugin_la_DEPENDENCIES=
  plugin_liberrmsg_stderr_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liberrmsg_stderr_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=errmsg_stderr -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Error Message Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liberrmsg_stderr_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liberrmsg_stderr_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liberrmsg_stderr_plugin_la_SOURCES= plugin/errmsg_stderr/errmsg_stderr.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liberrmsg_stderr_plugin.la
endif
EXTRA_DIST += plugin/errmsg_stderr/plugin.ini
if BUILD_ERRMSG_STDERR_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liberrmsg_stderr_plugin.la
  plugin_liberrmsg_stderr_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liberrmsg_stderr_plugin_la_LIBADD=
  plugin_liberrmsg_stderr_plugin_la_DEPENDENCIES=
  plugin_liberrmsg_stderr_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=errmsg_stderr -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Error Message Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liberrmsg_stderr_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liberrmsg_stderr_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liberrmsg_stderr_plugin_la_SOURCES= plugin/errmsg_stderr/errmsg_stderr.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/error_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/error_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/error_dictionary/errors.h
EXTRA_DIST += plugin/error_dictionary/tests

plugin_error_dictionary_dir=${top_srcdir}/plugin/error_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/error_dictionary/plugin.ini  plugin/error_dictionary/dictionary.cc plugin/error_dictionary/errors.cc
if BUILD_ERROR_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liberror_dictionary_plugin.la
  plugin_liberror_dictionary_plugin_la_LIBADD=
  plugin_liberror_dictionary_plugin_la_DEPENDENCIES=
  plugin_liberror_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liberror_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=error_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Error Code data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liberror_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liberror_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liberror_dictionary_plugin_la_SOURCES= plugin/error_dictionary/dictionary.cc plugin/error_dictionary/errors.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liberror_dictionary_plugin.la
endif
EXTRA_DIST += plugin/error_dictionary/plugin.ini
if BUILD_ERROR_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liberror_dictionary_plugin.la
  plugin_liberror_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liberror_dictionary_plugin_la_LIBADD=
  plugin_liberror_dictionary_plugin_la_DEPENDENCIES=
  plugin_liberror_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=error_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Error Code data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liberror_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liberror_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liberror_dictionary_plugin_la_SOURCES= plugin/error_dictionary/dictionary.cc plugin/error_dictionary/errors.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/filtered_replicator/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/filtered_replicator/plugin.ini:

noinst_HEADERS +=  plugin/filtered_replicator/filtered_replicator.h
EXTRA_DIST += plugin/filtered_replicator/tests
EXTRA_DIST += ${top_srcdir}/plugin/filtered_replicator/docs/*.rst

plugin_filtered_replicator_dir=${top_srcdir}/plugin/filtered_replicator
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/filtered_replicator/plugin.ini  plugin/filtered_replicator/filtered_replicator.cc
if BUILD_FILTERED_REPLICATOR_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libfiltered_replicator_plugin.la
  plugin_libfiltered_replicator_plugin_la_LIBADD=
  plugin_libfiltered_replicator_plugin_la_DEPENDENCIES=
  plugin_libfiltered_replicator_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfiltered_replicator_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=filtered_replicator -DPANDORA_MODULE_AUTHOR='Padraig O Sullivan' -DPANDORA_MODULE_TITLE='Filtered Replicator' -DPANDORA_MODULE_VERSION='0.2' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfiltered_replicator_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfiltered_replicator_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfiltered_replicator_plugin_la_SOURCES= plugin/filtered_replicator/filtered_replicator.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libfiltered_replicator_plugin.la
endif
EXTRA_DIST += plugin/filtered_replicator/plugin.ini
if BUILD_FILTERED_REPLICATOR_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libfiltered_replicator_plugin.la
  plugin_libfiltered_replicator_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfiltered_replicator_plugin_la_LIBADD=
  plugin_libfiltered_replicator_plugin_la_DEPENDENCIES=
  plugin_libfiltered_replicator_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=filtered_replicator -DPANDORA_MODULE_AUTHOR='Padraig O Sullivan' -DPANDORA_MODULE_TITLE='Filtered Replicator' -DPANDORA_MODULE_VERSION='0.2' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfiltered_replicator_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfiltered_replicator_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfiltered_replicator_plugin_la_SOURCES= plugin/filtered_replicator/filtered_replicator.cc
  check_PROGRAMS += 
endif

EXTRA_DIST+=${top_srcdir}/docs/plugins/filtered_replicator/*.rst

EXTRA_DIST += plugin/function_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/function_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/function_dictionary/dictionary.h plugin/function_dictionary/functions.h
EXTRA_DIST += plugin/function_dictionary/tests

plugin_function_dictionary_dir=${top_srcdir}/plugin/function_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/function_dictionary/plugin.ini  plugin/function_dictionary/dictionary.cc plugin/function_dictionary/functions.cc
if BUILD_FUNCTION_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libfunction_dictionary_plugin.la
  plugin_libfunction_dictionary_plugin_la_LIBADD=
  plugin_libfunction_dictionary_plugin_la_DEPENDENCIES=
  plugin_libfunction_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfunction_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=function_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Function data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfunction_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfunction_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfunction_dictionary_plugin_la_SOURCES= plugin/function_dictionary/dictionary.cc plugin/function_dictionary/functions.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libfunction_dictionary_plugin.la
endif
EXTRA_DIST += plugin/function_dictionary/plugin.ini
if BUILD_FUNCTION_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libfunction_dictionary_plugin.la
  plugin_libfunction_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfunction_dictionary_plugin_la_LIBADD=
  plugin_libfunction_dictionary_plugin_la_DEPENDENCIES=
  plugin_libfunction_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=function_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Function data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfunction_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfunction_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfunction_dictionary_plugin_la_SOURCES= plugin/function_dictionary/dictionary.cc plugin/function_dictionary/functions.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/function_engine/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/function_engine/plugin.ini:

noinst_HEADERS +=  plugin/function_engine/cursor.h plugin/function_engine/function.h

plugin_function_engine_dir=${top_srcdir}/plugin/function_engine
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/function_engine/plugin.ini  plugin/function_engine/cursor.cc plugin/function_engine/function.cc
if BUILD_FUNCTION_ENGINE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libfunction_engine_plugin.la
  plugin_libfunction_engine_plugin_la_LIBADD=
  plugin_libfunction_engine_plugin_la_DEPENDENCIES=
  plugin_libfunction_engine_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfunction_engine_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=function_engine -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Data Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfunction_engine_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfunction_engine_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfunction_engine_plugin_la_SOURCES= plugin/function_engine/cursor.cc plugin/function_engine/function.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libfunction_engine_plugin.la
endif
EXTRA_DIST += plugin/function_engine/plugin.ini
if BUILD_FUNCTION_ENGINE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libfunction_engine_plugin.la
  plugin_libfunction_engine_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libfunction_engine_plugin_la_LIBADD=
  plugin_libfunction_engine_plugin_la_DEPENDENCIES=
  plugin_libfunction_engine_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=function_engine -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Data Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libfunction_engine_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libfunction_engine_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libfunction_engine_plugin_la_SOURCES= plugin/function_engine/cursor.cc plugin/function_engine/function.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/gearman_udf/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/gearman_udf/plugin.ini:

noinst_HEADERS +=  plugin/gearman_udf/function_map.h plugin/gearman_udf/gman_servers_set.h plugin/gearman_udf/gman_do.h

plugin_gearman_udf_dir=${top_srcdir}/plugin/gearman_udf
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/gearman_udf/plugin.ini  plugin/gearman_udf/gearman_udf.cc plugin/gearman_udf/function_map.cc plugin/gearman_udf/gman_servers_set.cc plugin/gearman_udf/gman_do.cc
if BUILD_GEARMAN_UDF_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libgearman_udf_plugin.la
  plugin_libgearman_udf_plugin_la_LIBADD=
  plugin_libgearman_udf_plugin_la_DEPENDENCIES=
  plugin_libgearman_udf_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBGEARMAN} $(GCOV_LIBS)
  plugin_libgearman_udf_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=gearman_udf -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Gearman Client UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libgearman_udf_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libgearman_udf_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libgearman_udf_plugin_la_SOURCES= plugin/gearman_udf/gearman_udf.cc plugin/gearman_udf/function_map.cc plugin/gearman_udf/gman_servers_set.cc plugin/gearman_udf/gman_do.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libgearman_udf_plugin.la
endif
EXTRA_DIST += plugin/gearman_udf/plugin.ini
if BUILD_GEARMAN_UDF_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libgearman_udf_plugin.la
  plugin_libgearman_udf_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBGEARMAN} $(GCOV_LIBS)
  plugin_libgearman_udf_plugin_la_LIBADD=
  plugin_libgearman_udf_plugin_la_DEPENDENCIES=
  plugin_libgearman_udf_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=gearman_udf -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Gearman Client UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libgearman_udf_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libgearman_udf_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libgearman_udf_plugin_la_SOURCES= plugin/gearman_udf/gearman_udf.cc plugin/gearman_udf/function_map.cc plugin/gearman_udf/gman_servers_set.cc plugin/gearman_udf/gman_do.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/haildb/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/haildb/plugin.ini:

noinst_HEADERS +=  plugin/haildb/haildb_engine.h plugin/haildb/haildb_datadict_dump_func.h plugin/haildb/config_table_function.h plugin/haildb/status_table_function.h
EXTRA_DIST += plugin/haildb/tests
EXTRA_DIST += ${top_srcdir}/plugin/haildb/docs/*.rst

plugin_haildb_dir=${top_srcdir}/plugin/haildb
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/haildb/plugin.ini  plugin/haildb/haildb_engine.cc plugin/haildb/haildb_datadict_dump_func.cc plugin/haildb/config_table_function.cc plugin/haildb/status_table_function.cc plugin/haildb/datadict_table_message.cc
if BUILD_HAILDB_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libhaildb_plugin.la
  plugin_libhaildb_plugin_la_LIBADD=
  plugin_libhaildb_plugin_la_DEPENDENCIES=
  plugin_libhaildb_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBHAILDB} $(GCOV_LIBS)
  plugin_libhaildb_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=haildb -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HailDB storage engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhaildb_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhaildb_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhaildb_plugin_la_SOURCES= plugin/haildb/haildb_engine.cc plugin/haildb/haildb_datadict_dump_func.cc plugin/haildb/config_table_function.cc plugin/haildb/status_table_function.cc plugin/haildb/datadict_table_message.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libhaildb_plugin.la
endif
EXTRA_DIST += plugin/haildb/plugin.ini
if BUILD_HAILDB_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libhaildb_plugin.la
  plugin_libhaildb_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBHAILDB} $(GCOV_LIBS)
  plugin_libhaildb_plugin_la_LIBADD=
  plugin_libhaildb_plugin_la_DEPENDENCIES=
  plugin_libhaildb_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=haildb -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HailDB storage engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhaildb_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhaildb_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhaildb_plugin_la_SOURCES= plugin/haildb/haildb_engine.cc plugin/haildb/haildb_datadict_dump_func.cc plugin/haildb/config_table_function.cc plugin/haildb/status_table_function.cc plugin/haildb/datadict_table_message.cc
  check_PROGRAMS += 
endif

EXTRA_DIST+=${top_srcdir}/docs/plugins/haildb/*.rst

EXTRA_DIST += plugin/hello_events/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/hello_events/plugin.ini:

noinst_HEADERS +=  plugin/hello_events/hello_events.h
EXTRA_DIST += plugin/hello_events/tests

plugin_hello_events_dir=${top_srcdir}/plugin/hello_events
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/hello_events/plugin.ini  plugin/hello_events/hello_events.cc
if BUILD_HELLO_EVENTS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libhello_events_plugin.la
  plugin_libhello_events_plugin_la_LIBADD=
  plugin_libhello_events_plugin_la_DEPENDENCIES=
  plugin_libhello_events_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhello_events_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=hello_events -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='An example event observer Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhello_events_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhello_events_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhello_events_plugin_la_SOURCES= plugin/hello_events/hello_events.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libhello_events_plugin.la
endif
EXTRA_DIST += plugin/hello_events/plugin.ini
if BUILD_HELLO_EVENTS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libhello_events_plugin.la
  plugin_libhello_events_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhello_events_plugin_la_LIBADD=
  plugin_libhello_events_plugin_la_DEPENDENCIES=
  plugin_libhello_events_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=hello_events -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='An example event observer Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhello_events_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhello_events_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhello_events_plugin_la_SOURCES= plugin/hello_events/hello_events.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/hello_world/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/hello_world/plugin.ini:

EXTRA_DIST += plugin/hello_world/tests

plugin_hello_world_dir=${top_srcdir}/plugin/hello_world
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/hello_world/plugin.ini  plugin/hello_world/hello_world.cc
if BUILD_HELLO_WORLD_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libhello_world_plugin.la
  plugin_libhello_world_plugin_la_LIBADD=
  plugin_libhello_world_plugin_la_DEPENDENCIES=
  plugin_libhello_world_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhello_world_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=hello_world -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Example Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhello_world_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhello_world_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhello_world_plugin_la_SOURCES= plugin/hello_world/hello_world.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libhello_world_plugin.la
endif
EXTRA_DIST += plugin/hello_world/plugin.ini
if BUILD_HELLO_WORLD_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libhello_world_plugin.la
  plugin_libhello_world_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhello_world_plugin_la_LIBADD=
  plugin_libhello_world_plugin_la_DEPENDENCIES=
  plugin_libhello_world_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=hello_world -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Example Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhello_world_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhello_world_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhello_world_plugin_la_SOURCES= plugin/hello_world/hello_world.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/hex_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/hex_functions/plugin.ini:


plugin_hex_functions_dir=${top_srcdir}/plugin/hex_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/hex_functions/plugin.ini  plugin/hex_functions/hex_functions.cc
if BUILD_HEX_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libhex_functions_plugin.la
  plugin_libhex_functions_plugin_la_LIBADD=
  plugin_libhex_functions_plugin_la_DEPENDENCIES=
  plugin_libhex_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhex_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=hex_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HEX() and UNHEX() functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhex_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhex_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhex_functions_plugin_la_SOURCES= plugin/hex_functions/hex_functions.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libhex_functions_plugin.la
endif
EXTRA_DIST += plugin/hex_functions/plugin.ini
if BUILD_HEX_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libhex_functions_plugin.la
  plugin_libhex_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libhex_functions_plugin_la_LIBADD=
  plugin_libhex_functions_plugin_la_DEPENDENCIES=
  plugin_libhex_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=hex_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='HEX() and UNHEX() functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libhex_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libhex_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libhex_functions_plugin_la_SOURCES= plugin/hex_functions/hex_functions.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/information_schema_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/information_schema_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/information_schema_dictionary/check_constraints.h plugin/information_schema_dictionary/column_domain_usage.h plugin/information_schema_dictionary/column_privileges.h plugin/information_schema_dictionary/columns.h plugin/information_schema_dictionary/constraint_column_usage.h plugin/information_schema_dictionary/constraint_table_usage.h plugin/information_schema_dictionary/dictionary.h plugin/information_schema_dictionary/domain_constraints.h plugin/information_schema_dictionary/domains.h plugin/information_schema_dictionary/information_schema.h plugin/information_schema_dictionary/key_column_usage.h plugin/information_schema_dictionary/parameters.h plugin/information_schema_dictionary/referential_constraints.h plugin/information_schema_dictionary/routine_columns.h plugin/information_schema_dictionary/routines.h plugin/information_schema_dictionary/schemata.h plugin/information_schema_dictionary/table_constraints.h plugin/information_schema_dictionary/table_privileges.h plugin/information_schema_dictionary/tables.h plugin/information_schema_dictionary/view_column_usage.h plugin/information_schema_dictionary/view_table_usage.h plugin/information_schema_dictionary/views.h
EXTRA_DIST += plugin/information_schema_dictionary/tests

plugin_information_schema_dictionary_dir=${top_srcdir}/plugin/information_schema_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/information_schema_dictionary/plugin.ini  plugin/information_schema_dictionary/check_constraints.cc plugin/information_schema_dictionary/column_domain_usage.cc plugin/information_schema_dictionary/column_privileges.cc plugin/information_schema_dictionary/columns.cc plugin/information_schema_dictionary/constraint_column_usage.cc plugin/information_schema_dictionary/constraint_table_usage.cc plugin/information_schema_dictionary/dictionary.cc plugin/information_schema_dictionary/domain_constraints.cc plugin/information_schema_dictionary/domains.cc plugin/information_schema_dictionary/information_schema.cc plugin/information_schema_dictionary/key_column_usage.cc plugin/information_schema_dictionary/parameters.cc plugin/information_schema_dictionary/referential_constraints.cc plugin/information_schema_dictionary/routine_columns.cc plugin/information_schema_dictionary/routines.cc plugin/information_schema_dictionary/schemata.cc plugin/information_schema_dictionary/table_constraints.cc plugin/information_schema_dictionary/table_privileges.cc plugin/information_schema_dictionary/tables.cc plugin/information_schema_dictionary/view_column_usage.cc plugin/information_schema_dictionary/view_table_usage.cc plugin/information_schema_dictionary/views.cc
if BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libinformation_schema_dictionary_plugin.la
  plugin_libinformation_schema_dictionary_plugin_la_LIBADD=
  plugin_libinformation_schema_dictionary_plugin_la_DEPENDENCIES=
  plugin_libinformation_schema_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libinformation_schema_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=information_schema_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Information Schema Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libinformation_schema_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libinformation_schema_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libinformation_schema_dictionary_plugin_la_SOURCES= plugin/information_schema_dictionary/check_constraints.cc plugin/information_schema_dictionary/column_domain_usage.cc plugin/information_schema_dictionary/column_privileges.cc plugin/information_schema_dictionary/columns.cc plugin/information_schema_dictionary/constraint_column_usage.cc plugin/information_schema_dictionary/constraint_table_usage.cc plugin/information_schema_dictionary/dictionary.cc plugin/information_schema_dictionary/domain_constraints.cc plugin/information_schema_dictionary/domains.cc plugin/information_schema_dictionary/information_schema.cc plugin/information_schema_dictionary/key_column_usage.cc plugin/information_schema_dictionary/parameters.cc plugin/information_schema_dictionary/referential_constraints.cc plugin/information_schema_dictionary/routine_columns.cc plugin/information_schema_dictionary/routines.cc plugin/information_schema_dictionary/schemata.cc plugin/information_schema_dictionary/table_constraints.cc plugin/information_schema_dictionary/table_privileges.cc plugin/information_schema_dictionary/tables.cc plugin/information_schema_dictionary/view_column_usage.cc plugin/information_schema_dictionary/view_table_usage.cc plugin/information_schema_dictionary/views.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libinformation_schema_dictionary_plugin.la
endif
EXTRA_DIST += plugin/information_schema_dictionary/plugin.ini
if BUILD_INFORMATION_SCHEMA_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libinformation_schema_dictionary_plugin.la
  plugin_libinformation_schema_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libinformation_schema_dictionary_plugin_la_LIBADD=
  plugin_libinformation_schema_dictionary_plugin_la_DEPENDENCIES=
  plugin_libinformation_schema_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=information_schema_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Information Schema Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libinformation_schema_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libinformation_schema_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libinformation_schema_dictionary_plugin_la_SOURCES= plugin/information_schema_dictionary/check_constraints.cc plugin/information_schema_dictionary/column_domain_usage.cc plugin/information_schema_dictionary/column_privileges.cc plugin/information_schema_dictionary/columns.cc plugin/information_schema_dictionary/constraint_column_usage.cc plugin/information_schema_dictionary/constraint_table_usage.cc plugin/information_schema_dictionary/dictionary.cc plugin/information_schema_dictionary/domain_constraints.cc plugin/information_schema_dictionary/domains.cc plugin/information_schema_dictionary/information_schema.cc plugin/information_schema_dictionary/key_column_usage.cc plugin/information_schema_dictionary/parameters.cc plugin/information_schema_dictionary/referential_constraints.cc plugin/information_schema_dictionary/routine_columns.cc plugin/information_schema_dictionary/routines.cc plugin/information_schema_dictionary/schemata.cc plugin/information_schema_dictionary/table_constraints.cc plugin/information_schema_dictionary/table_privileges.cc plugin/information_schema_dictionary/tables.cc plugin/information_schema_dictionary/view_column_usage.cc plugin/information_schema_dictionary/view_table_usage.cc plugin/information_schema_dictionary/views.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/innobase/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/innobase/plugin.ini:

EXTRA_DIST += plugin/innobase/COPYING.Google plugin/innobase/COPYING.Percona plugin/innobase/ChangeLog plugin/innobase/Doxyfile plugin/innobase/README plugin/innobase/mysql-test/innodb_bug46676.result plugin/innobase/mysql-test/innodb_bug46676.test plugin/innobase/mysql-test/innodb-consistent-master.opt plugin/innobase/mysql-test/innodb-consistent.result plugin/innobase/mysql-test/innodb-consistent.test plugin/innobase/mysql-test/innodb_bug44369.result plugin/innobase/mysql-test/innodb_bug44369.test plugin/innobase/mysql-test/innodb_bug44571.result plugin/innobase/mysql-test/innodb_bug44571.test plugin/innobase/mysql-test/innodb_bug46000.result plugin/innobase/mysql-test/innodb_bug46000.test plugin/innobase/mysql-test/innodb_bug47167.result plugin/innobase/mysql-test/innodb_bug47167.test plugin/innobase/mysql-test/innodb_bug47777.result plugin/innobase/mysql-test/innodb_bug47777.test plugin/innobase/mysql-test/innodb_bug38231.result plugin/innobase/mysql-test/innodb_bug38231.test plugin/innobase/mysql-test/innodb_bug39438-master.opt plugin/innobase/mysql-test/innodb_bug39438.result plugin/innobase/mysql-test/innodb_bug39438.test
EXTRA_DIST += plugin/innobase/tests
EXTRA_DIST += ${top_srcdir}/plugin/innobase/docs/*.rst

plugin_innobase_dir=${top_srcdir}/plugin/innobase
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/innobase/plugin.ini  plugin/innobase/handler/data_dictionary.cc plugin/innobase/handler/ha_innodb.cc plugin/innobase/handler/handler0alter.cc plugin/innobase/handler/internal_dictionary.cc plugin/innobase/handler/replication_dictionary.cc plugin/innobase/handler/replication_log.cc
if BUILD_INNOBASE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libinnobase_plugin.la
  plugin_libinnobase_plugin_la_LIBADD=plugin/innobase/libinnobase.la
  plugin_libinnobase_plugin_la_DEPENDENCIES=plugin/innobase/libinnobase.la
  plugin_libinnobase_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libinnobase_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=innobase -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='InnoDB Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libinnobase_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${NO_SHADOW} -I$(top_srcdir)/plugin/innobase/include -DBUILD_DRIZZLE -DBUILDING_DRIZZLED
  plugin_libinnobase_plugin_la_CFLAGS=$(AM_CFLAGS) ${NO_SHADOW} -I$(top_srcdir)/plugin/innobase/include -DBUILD_DRIZZLE 
  plugin_libinnobase_plugin_la_SOURCES= plugin/innobase/handler/data_dictionary.cc plugin/innobase/handler/ha_innodb.cc plugin/innobase/handler/handler0alter.cc plugin/innobase/handler/internal_dictionary.cc plugin/innobase/handler/replication_dictionary.cc plugin/innobase/handler/replication_log.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libinnobase_plugin.la
endif
EXTRA_DIST += plugin/innobase/plugin.ini
if BUILD_INNOBASE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libinnobase_plugin.la
  plugin_libinnobase_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libinnobase_plugin_la_LIBADD=plugin/innobase/libinnobase.la
  plugin_libinnobase_plugin_la_DEPENDENCIES=plugin/innobase/libinnobase.la
  plugin_libinnobase_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=innobase -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='InnoDB Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libinnobase_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${NO_SHADOW} -I$(top_srcdir)/plugin/innobase/include -DBUILD_DRIZZLE -DBUILDING_DRIZZLED
  plugin_libinnobase_plugin_la_CFLAGS=$(AM_CFLAGS) ${NO_SHADOW} -I$(top_srcdir)/plugin/innobase/include -DBUILD_DRIZZLE 
  plugin_libinnobase_plugin_la_SOURCES= plugin/innobase/handler/data_dictionary.cc plugin/innobase/handler/ha_innodb.cc plugin/innobase/handler/handler0alter.cc plugin/innobase/handler/internal_dictionary.cc plugin/innobase/handler/replication_dictionary.cc plugin/innobase/handler/replication_log.cc
  check_PROGRAMS += 
endif
include plugin/innobase/plugin.am

EXTRA_DIST+=${top_srcdir}/docs/plugins/innobase/*.rst

EXTRA_DIST += plugin/length/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/length/plugin.ini:


plugin_length_dir=${top_srcdir}/plugin/length
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/length/plugin.ini  plugin/length/length.cc
if BUILD_LENGTH_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liblength_plugin.la
  plugin_liblength_plugin_la_LIBADD=
  plugin_liblength_plugin_la_DEPENDENCIES=
  plugin_liblength_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblength_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=length -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for Length' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblength_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblength_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblength_plugin_la_SOURCES= plugin/length/length.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liblength_plugin.la
endif
EXTRA_DIST += plugin/length/plugin.ini
if BUILD_LENGTH_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liblength_plugin.la
  plugin_liblength_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblength_plugin_la_LIBADD=
  plugin_liblength_plugin_la_DEPENDENCIES=
  plugin_liblength_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=length -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for Length' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblength_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblength_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblength_plugin_la_SOURCES= plugin/length/length.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/logging_gearman/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/logging_gearman/plugin.ini:


plugin_logging_gearman_dir=${top_srcdir}/plugin/logging_gearman
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/logging_gearman/plugin.ini  plugin/logging_gearman/logging_gearman.cc
if BUILD_LOGGING_GEARMAN_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liblogging_gearman_plugin.la
  plugin_liblogging_gearman_plugin_la_LIBADD=
  plugin_liblogging_gearman_plugin_la_DEPENDENCIES=
  plugin_liblogging_gearman_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBGEARMAN} $(GCOV_LIBS)
  plugin_liblogging_gearman_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=logging_gearman -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Gearman Logging Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_gearman_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblogging_gearman_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_gearman_plugin_la_SOURCES= plugin/logging_gearman/logging_gearman.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liblogging_gearman_plugin.la
endif
EXTRA_DIST += plugin/logging_gearman/plugin.ini
if BUILD_LOGGING_GEARMAN_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liblogging_gearman_plugin.la
  plugin_liblogging_gearman_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBGEARMAN} $(GCOV_LIBS)
  plugin_liblogging_gearman_plugin_la_LIBADD=
  plugin_liblogging_gearman_plugin_la_DEPENDENCIES=
  plugin_liblogging_gearman_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=logging_gearman -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Gearman Logging Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_gearman_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblogging_gearman_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_gearman_plugin_la_SOURCES= plugin/logging_gearman/logging_gearman.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/logging_query/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/logging_query/plugin.ini:


plugin_logging_query_dir=${top_srcdir}/plugin/logging_query
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/logging_query/plugin.ini  plugin/logging_query/logging_query.cc
if BUILD_LOGGING_QUERY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liblogging_query_plugin.la
  plugin_liblogging_query_plugin_la_LIBADD=
  plugin_liblogging_query_plugin_la_DEPENDENCIES=
  plugin_liblogging_query_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblogging_query_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=logging_query -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Query Logging Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_query_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${BOOSTSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_liblogging_query_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_query_plugin_la_SOURCES= plugin/logging_query/logging_query.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liblogging_query_plugin.la
endif
EXTRA_DIST += plugin/logging_query/plugin.ini
if BUILD_LOGGING_QUERY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liblogging_query_plugin.la
  plugin_liblogging_query_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblogging_query_plugin_la_LIBADD=
  plugin_liblogging_query_plugin_la_DEPENDENCIES=
  plugin_liblogging_query_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=logging_query -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Query Logging Plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_query_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${BOOSTSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_liblogging_query_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_query_plugin_la_SOURCES= plugin/logging_query/logging_query.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/logging_stats/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/logging_stats/plugin.ini:

noinst_HEADERS +=  plugin/logging_stats/logging_stats.h plugin/logging_stats/user_commands.h plugin/logging_stats/scoreboard_slot.h plugin/logging_stats/stats_schema.h plugin/logging_stats/scoreboard.h plugin/logging_stats/cumulative_stats.h plugin/logging_stats/global_stats.h plugin/logging_stats/status_vars.h plugin/logging_stats/status_tool.h
EXTRA_DIST += plugin/logging_stats/tests

plugin_logging_stats_dir=${top_srcdir}/plugin/logging_stats
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/logging_stats/plugin.ini  plugin/logging_stats/logging_stats.cc plugin/logging_stats/user_commands.cc plugin/logging_stats/stats_schema.cc plugin/logging_stats/scoreboard_slot.cc plugin/logging_stats/scoreboard.cc plugin/logging_stats/cumulative_stats.cc plugin/logging_stats/global_stats.cc plugin/logging_stats/status_vars.cc plugin/logging_stats/status_tool.cc
if BUILD_LOGGING_STATS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/liblogging_stats_plugin.la
  plugin_liblogging_stats_plugin_la_LIBADD=
  plugin_liblogging_stats_plugin_la_DEPENDENCIES=
  plugin_liblogging_stats_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblogging_stats_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=logging_stats -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Statistics Plugin for Drizzle' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_stats_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblogging_stats_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_stats_plugin_la_SOURCES= plugin/logging_stats/logging_stats.cc plugin/logging_stats/user_commands.cc plugin/logging_stats/stats_schema.cc plugin/logging_stats/scoreboard_slot.cc plugin/logging_stats/scoreboard.cc plugin/logging_stats/cumulative_stats.cc plugin/logging_stats/global_stats.cc plugin/logging_stats/status_vars.cc plugin/logging_stats/status_tool.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/liblogging_stats_plugin.la
endif
EXTRA_DIST += plugin/logging_stats/plugin.ini
if BUILD_LOGGING_STATS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/liblogging_stats_plugin.la
  plugin_liblogging_stats_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_liblogging_stats_plugin_la_LIBADD=
  plugin_liblogging_stats_plugin_la_DEPENDENCIES=
  plugin_liblogging_stats_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=logging_stats -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Statistics Plugin for Drizzle' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_liblogging_stats_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_liblogging_stats_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_liblogging_stats_plugin_la_SOURCES= plugin/logging_stats/logging_stats.cc plugin/logging_stats/user_commands.cc plugin/logging_stats/stats_schema.cc plugin/logging_stats/scoreboard_slot.cc plugin/logging_stats/scoreboard.cc plugin/logging_stats/cumulative_stats.cc plugin/logging_stats/global_stats.cc plugin/logging_stats/status_vars.cc plugin/logging_stats/status_tool.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/math_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/math_functions/plugin.ini:

noinst_HEADERS +=  plugin/math_functions/functions.h plugin/math_functions/abs.h plugin/math_functions/acos.h plugin/math_functions/asin.h plugin/math_functions/atan.h plugin/math_functions/ceiling.h plugin/math_functions/cos.h plugin/math_functions/exp.h plugin/math_functions/floor.h plugin/math_functions/log.h plugin/math_functions/sin.h plugin/math_functions/ord.h plugin/math_functions/pow.h plugin/math_functions/ln.h plugin/math_functions/sqrt.h

plugin_math_functions_dir=${top_srcdir}/plugin/math_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/math_functions/plugin.ini  plugin/math_functions/functions.cc plugin/math_functions/abs.cc plugin/math_functions/acos.cc plugin/math_functions/asin.cc plugin/math_functions/atan.cc plugin/math_functions/ceiling.cc plugin/math_functions/cos.cc plugin/math_functions/exp.cc plugin/math_functions/floor.cc plugin/math_functions/log.cc plugin/math_functions/sin.cc plugin/math_functions/ord.cc plugin/math_functions/pow.cc plugin/math_functions/ln.cc plugin/math_functions/sqrt.cc
if BUILD_MATH_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmath_functions_plugin.la
  plugin_libmath_functions_plugin_la_LIBADD=
  plugin_libmath_functions_plugin_la_DEPENDENCIES=
  plugin_libmath_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmath_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=math_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Math Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmath_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmath_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmath_functions_plugin_la_SOURCES= plugin/math_functions/functions.cc plugin/math_functions/abs.cc plugin/math_functions/acos.cc plugin/math_functions/asin.cc plugin/math_functions/atan.cc plugin/math_functions/ceiling.cc plugin/math_functions/cos.cc plugin/math_functions/exp.cc plugin/math_functions/floor.cc plugin/math_functions/log.cc plugin/math_functions/sin.cc plugin/math_functions/ord.cc plugin/math_functions/pow.cc plugin/math_functions/ln.cc plugin/math_functions/sqrt.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmath_functions_plugin.la
endif
EXTRA_DIST += plugin/math_functions/plugin.ini
if BUILD_MATH_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmath_functions_plugin.la
  plugin_libmath_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmath_functions_plugin_la_LIBADD=
  plugin_libmath_functions_plugin_la_DEPENDENCIES=
  plugin_libmath_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=math_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Math Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmath_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmath_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmath_functions_plugin_la_SOURCES= plugin/math_functions/functions.cc plugin/math_functions/abs.cc plugin/math_functions/acos.cc plugin/math_functions/asin.cc plugin/math_functions/atan.cc plugin/math_functions/ceiling.cc plugin/math_functions/cos.cc plugin/math_functions/exp.cc plugin/math_functions/floor.cc plugin/math_functions/log.cc plugin/math_functions/sin.cc plugin/math_functions/ord.cc plugin/math_functions/pow.cc plugin/math_functions/ln.cc plugin/math_functions/sqrt.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/md5/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/md5/plugin.ini:

EXTRA_DIST += plugin/md5/tests

plugin_md5_dir=${top_srcdir}/plugin/md5
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/md5/plugin.ini  plugin/md5/md5.cc
if BUILD_MD5_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmd5_plugin.la
  plugin_libmd5_plugin_la_LIBADD=
  plugin_libmd5_plugin_la_DEPENDENCIES=
  plugin_libmd5_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBGCRYPT} $(GCOV_LIBS)
  plugin_libmd5_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=md5 -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for MD5' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmd5_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmd5_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmd5_plugin_la_SOURCES= plugin/md5/md5.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmd5_plugin.la
endif
EXTRA_DIST += plugin/md5/plugin.ini
if BUILD_MD5_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmd5_plugin.la
  plugin_libmd5_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBGCRYPT} $(GCOV_LIBS)
  plugin_libmd5_plugin_la_LIBADD=
  plugin_libmd5_plugin_la_DEPENDENCIES=
  plugin_libmd5_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=md5 -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UDF Plugin for MD5' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmd5_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmd5_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmd5_plugin_la_SOURCES= plugin/md5/md5.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/memcached_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/memcached_functions/plugin.ini:

EXTRA_DIST += plugin/memcached_functions/start_mc.sh.in
noinst_HEADERS +=  plugin/memcached_functions/memcached_functions.h plugin/memcached_functions/memc_get.h plugin/memcached_functions/memc_get_by_key.h plugin/memcached_functions/memc_set.h plugin/memcached_functions/memc_set_by_key.h plugin/memcached_functions/memc_add.h plugin/memcached_functions/memc_add_by_key.h plugin/memcached_functions/memc_replace.h plugin/memcached_functions/memc_replace_by_key.h plugin/memcached_functions/memc_delete.h plugin/memcached_functions/memc_delete_by_key.h plugin/memcached_functions/memc_append.h plugin/memcached_functions/memc_append_by_key.h plugin/memcached_functions/memc_prepend.h plugin/memcached_functions/memc_prepend_by_key.h plugin/memcached_functions/memc_cas.h plugin/memcached_functions/memc_cas_by_key.h plugin/memcached_functions/memc_misc.h plugin/memcached_functions/memc_stats.h plugin/memcached_functions/memc_servers_set.h plugin/memcached_functions/memc_behavior_set.h plugin/memcached_functions/memc_behavior_get.h plugin/memcached_functions/memc_increment.h plugin/memcached_functions/memc_decrement.h
EXTRA_DIST += plugin/memcached_functions/tests

plugin_memcached_functions_dir=${top_srcdir}/plugin/memcached_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/memcached_functions/plugin.ini  plugin/memcached_functions/memcached_functions.cc plugin/memcached_functions/memc_get.cc plugin/memcached_functions/memc_get_by_key.cc plugin/memcached_functions/memc_set.cc plugin/memcached_functions/memc_set_by_key.cc plugin/memcached_functions/memc_add.cc plugin/memcached_functions/memc_add_by_key.cc plugin/memcached_functions/memc_replace.cc plugin/memcached_functions/memc_replace_by_key.cc plugin/memcached_functions/memc_delete.cc plugin/memcached_functions/memc_delete_by_key.cc plugin/memcached_functions/memc_append.cc plugin/memcached_functions/memc_append_by_key.cc plugin/memcached_functions/memc_prepend.cc plugin/memcached_functions/memc_prepend_by_key.cc plugin/memcached_functions/memc_cas.cc plugin/memcached_functions/memc_cas_by_key.cc plugin/memcached_functions/memc_misc.cc plugin/memcached_functions/memc_servers_set.cc plugin/memcached_functions/memc_behavior_set.cc plugin/memcached_functions/memc_behavior_get.cc plugin/memcached_functions/memc_increment.cc plugin/memcached_functions/memc_decrement.cc plugin/memcached_functions/memc_stats.cc
if BUILD_MEMCACHED_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmemcached_functions_plugin.la
  plugin_libmemcached_functions_plugin_la_LIBADD=
  plugin_libmemcached_functions_plugin_la_DEPENDENCIES=
  plugin_libmemcached_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=memcached_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memcached Client UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_functions_plugin_la_SOURCES= plugin/memcached_functions/memcached_functions.cc plugin/memcached_functions/memc_get.cc plugin/memcached_functions/memc_get_by_key.cc plugin/memcached_functions/memc_set.cc plugin/memcached_functions/memc_set_by_key.cc plugin/memcached_functions/memc_add.cc plugin/memcached_functions/memc_add_by_key.cc plugin/memcached_functions/memc_replace.cc plugin/memcached_functions/memc_replace_by_key.cc plugin/memcached_functions/memc_delete.cc plugin/memcached_functions/memc_delete_by_key.cc plugin/memcached_functions/memc_append.cc plugin/memcached_functions/memc_append_by_key.cc plugin/memcached_functions/memc_prepend.cc plugin/memcached_functions/memc_prepend_by_key.cc plugin/memcached_functions/memc_cas.cc plugin/memcached_functions/memc_cas_by_key.cc plugin/memcached_functions/memc_misc.cc plugin/memcached_functions/memc_servers_set.cc plugin/memcached_functions/memc_behavior_set.cc plugin/memcached_functions/memc_behavior_get.cc plugin/memcached_functions/memc_increment.cc plugin/memcached_functions/memc_decrement.cc plugin/memcached_functions/memc_stats.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmemcached_functions_plugin.la
endif
EXTRA_DIST += plugin/memcached_functions/plugin.ini
if BUILD_MEMCACHED_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmemcached_functions_plugin.la
  plugin_libmemcached_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_functions_plugin_la_LIBADD=
  plugin_libmemcached_functions_plugin_la_DEPENDENCIES=
  plugin_libmemcached_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=memcached_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memcached Client UDFs' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_functions_plugin_la_SOURCES= plugin/memcached_functions/memcached_functions.cc plugin/memcached_functions/memc_get.cc plugin/memcached_functions/memc_get_by_key.cc plugin/memcached_functions/memc_set.cc plugin/memcached_functions/memc_set_by_key.cc plugin/memcached_functions/memc_add.cc plugin/memcached_functions/memc_add_by_key.cc plugin/memcached_functions/memc_replace.cc plugin/memcached_functions/memc_replace_by_key.cc plugin/memcached_functions/memc_delete.cc plugin/memcached_functions/memc_delete_by_key.cc plugin/memcached_functions/memc_append.cc plugin/memcached_functions/memc_append_by_key.cc plugin/memcached_functions/memc_prepend.cc plugin/memcached_functions/memc_prepend_by_key.cc plugin/memcached_functions/memc_cas.cc plugin/memcached_functions/memc_cas_by_key.cc plugin/memcached_functions/memc_misc.cc plugin/memcached_functions/memc_servers_set.cc plugin/memcached_functions/memc_behavior_set.cc plugin/memcached_functions/memc_behavior_get.cc plugin/memcached_functions/memc_increment.cc plugin/memcached_functions/memc_decrement.cc plugin/memcached_functions/memc_stats.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/memcached_query_cache/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/memcached_query_cache/plugin.ini:

EXTRA_DIST += plugin/memcached_query_cache/start_mc.sh
noinst_HEADERS +=  plugin/memcached_query_cache/memcached_qc.h plugin/memcached_query_cache/query_cache_service.h plugin/memcached_query_cache/query_cache_udf_tools.h plugin/memcached_query_cache/data_dictionary_schema.h plugin/memcached_query_cache/invalidator.h
EXTRA_DIST += plugin/memcached_query_cache/tests

plugin_memcached_query_cache_dir=${top_srcdir}/plugin/memcached_query_cache
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/memcached_query_cache/plugin.ini  plugin/memcached_query_cache/memcached_qc.cc plugin/memcached_query_cache/query_cache_service.cc plugin/memcached_query_cache/query_cache_udf_tools.cc plugin/memcached_query_cache/data_dictionary_schema.cc plugin/memcached_query_cache/invalidator.cc
if BUILD_MEMCACHED_QUERY_CACHE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmemcached_query_cache_plugin.la
  plugin_libmemcached_query_cache_plugin_la_LIBADD=
  plugin_libmemcached_query_cache_plugin_la_DEPENDENCIES=
  plugin_libmemcached_query_cache_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_query_cache_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=memcached_query_cache -DPANDORA_MODULE_AUTHOR='Djellel Eddine Difallah' -DPANDORA_MODULE_TITLE='Query Cache' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_query_cache_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_query_cache_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_query_cache_plugin_la_SOURCES= plugin/memcached_query_cache/memcached_qc.cc plugin/memcached_query_cache/query_cache_service.cc plugin/memcached_query_cache/query_cache_udf_tools.cc plugin/memcached_query_cache/data_dictionary_schema.cc plugin/memcached_query_cache/invalidator.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmemcached_query_cache_plugin.la
endif
EXTRA_DIST += plugin/memcached_query_cache/plugin.ini
if BUILD_MEMCACHED_QUERY_CACHE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmemcached_query_cache_plugin.la
  plugin_libmemcached_query_cache_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_query_cache_plugin_la_LIBADD=
  plugin_libmemcached_query_cache_plugin_la_DEPENDENCIES=
  plugin_libmemcached_query_cache_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=memcached_query_cache -DPANDORA_MODULE_AUTHOR='Djellel Eddine Difallah' -DPANDORA_MODULE_TITLE='Query Cache' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_query_cache_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_query_cache_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_query_cache_plugin_la_SOURCES= plugin/memcached_query_cache/memcached_qc.cc plugin/memcached_query_cache/query_cache_service.cc plugin/memcached_query_cache/query_cache_udf_tools.cc plugin/memcached_query_cache/data_dictionary_schema.cc plugin/memcached_query_cache/invalidator.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/memcached_stats/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/memcached_stats/plugin.ini:

noinst_HEADERS +=  plugin/memcached_stats/stats_table.h plugin/memcached_stats/analysis_table.h
EXTRA_DIST += plugin/memcached_stats/tests

plugin_memcached_stats_dir=${top_srcdir}/plugin/memcached_stats
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/memcached_stats/plugin.ini  plugin/memcached_stats/memcached_stats.cc plugin/memcached_stats/stats_table.cc plugin/memcached_stats/analysis_table.cc
if BUILD_MEMCACHED_STATS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmemcached_stats_plugin.la
  plugin_libmemcached_stats_plugin_la_LIBADD=
  plugin_libmemcached_stats_plugin_la_DEPENDENCIES=
  plugin_libmemcached_stats_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_stats_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=memcached_stats -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memcached Stats in DATA_DICTIONARY tables' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_stats_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_stats_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_stats_plugin_la_SOURCES= plugin/memcached_stats/memcached_stats.cc plugin/memcached_stats/stats_table.cc plugin/memcached_stats/analysis_table.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmemcached_stats_plugin.la
endif
EXTRA_DIST += plugin/memcached_stats/plugin.ini
if BUILD_MEMCACHED_STATS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmemcached_stats_plugin.la
  plugin_libmemcached_stats_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBMEMCACHED} $(GCOV_LIBS)
  plugin_libmemcached_stats_plugin_la_LIBADD=
  plugin_libmemcached_stats_plugin_la_DEPENDENCIES=
  plugin_libmemcached_stats_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=memcached_stats -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memcached Stats in DATA_DICTIONARY tables' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemcached_stats_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemcached_stats_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemcached_stats_plugin_la_SOURCES= plugin/memcached_stats/memcached_stats.cc plugin/memcached_stats/stats_table.cc plugin/memcached_stats/analysis_table.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/memory/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/memory/plugin.ini:

EXTRA_DIST += plugin/memory/tests

plugin_memory_dir=${top_srcdir}/plugin/memory
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/memory/plugin.ini  plugin/memory/ha_heap.cc
if BUILD_MEMORY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmemory_plugin.la
  plugin_libmemory_plugin_la_LIBADD=plugin/memory/libheap.la
  plugin_libmemory_plugin_la_DEPENDENCIES=plugin/memory/libheap.la
  plugin_libmemory_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmemory_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=memory -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memory Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemory_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemory_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemory_plugin_la_SOURCES= plugin/memory/ha_heap.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmemory_plugin.la
endif
EXTRA_DIST += plugin/memory/plugin.ini
if BUILD_MEMORY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmemory_plugin.la
  plugin_libmemory_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmemory_plugin_la_LIBADD=plugin/memory/libheap.la
  plugin_libmemory_plugin_la_DEPENDENCIES=plugin/memory/libheap.la
  plugin_libmemory_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=memory -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Memory Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmemory_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmemory_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmemory_plugin_la_SOURCES= plugin/memory/ha_heap.cc
  check_PROGRAMS += 
endif
include plugin/memory/plugin.am

EXTRA_DIST += plugin/multi_thread/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/multi_thread/plugin.ini:

noinst_HEADERS +=  plugin/multi_thread/multi_thread.h

plugin_multi_thread_dir=${top_srcdir}/plugin/multi_thread
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/multi_thread/plugin.ini  plugin/multi_thread/multi_thread.cc
if BUILD_MULTI_THREAD_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmulti_thread_plugin.la
  plugin_libmulti_thread_plugin_la_LIBADD=
  plugin_libmulti_thread_plugin_la_DEPENDENCIES=
  plugin_libmulti_thread_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmulti_thread_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=multi_thread -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Multi-Thread Scheduler' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmulti_thread_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmulti_thread_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmulti_thread_plugin_la_SOURCES= plugin/multi_thread/multi_thread.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmulti_thread_plugin.la
endif
EXTRA_DIST += plugin/multi_thread/plugin.ini
if BUILD_MULTI_THREAD_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmulti_thread_plugin.la
  plugin_libmulti_thread_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmulti_thread_plugin_la_LIBADD=
  plugin_libmulti_thread_plugin_la_DEPENDENCIES=
  plugin_libmulti_thread_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=multi_thread -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Multi-Thread Scheduler' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmulti_thread_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmulti_thread_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmulti_thread_plugin_la_SOURCES= plugin/multi_thread/multi_thread.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/myisam/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/myisam/plugin.ini:

EXTRA_DIST += plugin/myisam/tests

plugin_myisam_dir=${top_srcdir}/plugin/myisam
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/myisam/plugin.ini  plugin/myisam/ha_myisam.cc
if BUILD_MYISAM_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmyisam_plugin.la
  plugin_libmyisam_plugin_la_LIBADD=plugin/myisam/libmyisam.la drizzled/internal/libinternal.la
  plugin_libmyisam_plugin_la_DEPENDENCIES=plugin/myisam/libmyisam.la drizzled/internal/libinternal.la
  plugin_libmyisam_plugin_la_LDFLAGS=$(AM_LDFLAGS) $(LIBZ) $(LIBINTL) $(GCOV_LIBS)
  plugin_libmyisam_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=myisam -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='MyISAM Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmyisam_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmyisam_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmyisam_plugin_la_SOURCES= plugin/myisam/ha_myisam.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmyisam_plugin.la
endif
EXTRA_DIST += plugin/myisam/plugin.ini
if BUILD_MYISAM_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmyisam_plugin.la
  plugin_libmyisam_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) $(LIBZ) $(LIBINTL) $(GCOV_LIBS)
  plugin_libmyisam_plugin_la_LIBADD=plugin/myisam/libmyisam.la drizzled/internal/libinternal.la
  plugin_libmyisam_plugin_la_DEPENDENCIES=plugin/myisam/libmyisam.la drizzled/internal/libinternal.la
  plugin_libmyisam_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=myisam -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='MyISAM Storage Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmyisam_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmyisam_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmyisam_plugin_la_SOURCES= plugin/myisam/ha_myisam.cc
  check_PROGRAMS += 
endif
include plugin/myisam/plugin.am

EXTRA_DIST += plugin/mysql_protocol/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/mysql_protocol/plugin.ini:

noinst_HEADERS +=  plugin/mysql_protocol/mysql_protocol.h plugin/mysql_protocol/errmsg.h plugin/mysql_protocol/net_serv.h plugin/mysql_protocol/options.h plugin/mysql_protocol/vio.h plugin/mysql_protocol/mysql_password.h
EXTRA_DIST += plugin/mysql_protocol/tests
EXTRA_DIST += ${top_srcdir}/plugin/mysql_protocol/docs/*.rst

plugin_mysql_protocol_dir=${top_srcdir}/plugin/mysql_protocol
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/mysql_protocol/plugin.ini  plugin/mysql_protocol/mysql_protocol.cc plugin/mysql_protocol/net_serv.cc plugin/mysql_protocol/vio.cc plugin/mysql_protocol/mysql_password.cc
if BUILD_MYSQL_PROTOCOL_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmysql_protocol_plugin.la
  plugin_libmysql_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libmysql_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libmysql_protocol_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmysql_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=mysql_protocol -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='MySQL Protocol Module' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmysql_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmysql_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmysql_protocol_plugin_la_SOURCES= plugin/mysql_protocol/mysql_protocol.cc plugin/mysql_protocol/net_serv.cc plugin/mysql_protocol/vio.cc plugin/mysql_protocol/mysql_password.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmysql_protocol_plugin.la
endif
EXTRA_DIST += plugin/mysql_protocol/plugin.ini
if BUILD_MYSQL_PROTOCOL_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmysql_protocol_plugin.la
  plugin_libmysql_protocol_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmysql_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libmysql_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libmysql_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=mysql_protocol -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='MySQL Protocol Module' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmysql_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmysql_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmysql_protocol_plugin_la_SOURCES= plugin/mysql_protocol/mysql_protocol.cc plugin/mysql_protocol/net_serv.cc plugin/mysql_protocol/vio.cc plugin/mysql_protocol/mysql_password.cc
  check_PROGRAMS += 
endif
include plugin/mysql_protocol/plugin.am

EXTRA_DIST+=${top_srcdir}/docs/plugins/mysql_protocol/*.rst

EXTRA_DIST += plugin/mysql_unix_socket_protocol/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/mysql_unix_socket_protocol/plugin.ini:

noinst_HEADERS +=  plugin/mysql_unix_socket_protocol/protocol.h
EXTRA_DIST += ${top_srcdir}/plugin/mysql_unix_socket_protocol/docs/*.rst

plugin_mysql_unix_socket_protocol_dir=${top_srcdir}/plugin/mysql_unix_socket_protocol
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/mysql_unix_socket_protocol/plugin.ini  plugin/mysql_unix_socket_protocol/protocol.cc
if BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libmysql_unix_socket_protocol_plugin.la
  plugin_libmysql_unix_socket_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libmysql_unix_socket_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libmysql_unix_socket_protocol_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmysql_unix_socket_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=mysql_unix_socket_protocol -DPANDORA_MODULE_AUTHOR='Brian Aker' -DPANDORA_MODULE_TITLE='MySQL Unix Socket Protocol Module' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmysql_unix_socket_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmysql_unix_socket_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmysql_unix_socket_protocol_plugin_la_SOURCES= plugin/mysql_unix_socket_protocol/protocol.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libmysql_unix_socket_protocol_plugin.la
endif
EXTRA_DIST += plugin/mysql_unix_socket_protocol/plugin.ini
if BUILD_MYSQL_UNIX_SOCKET_PROTOCOL_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libmysql_unix_socket_protocol_plugin.la
  plugin_libmysql_unix_socket_protocol_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libmysql_unix_socket_protocol_plugin_la_LIBADD=drizzled/algorithm/libhash.la
  plugin_libmysql_unix_socket_protocol_plugin_la_DEPENDENCIES=drizzled/algorithm/libhash.la
  plugin_libmysql_unix_socket_protocol_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=mysql_unix_socket_protocol -DPANDORA_MODULE_AUTHOR='Brian Aker' -DPANDORA_MODULE_TITLE='MySQL Unix Socket Protocol Module' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libmysql_unix_socket_protocol_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libmysql_unix_socket_protocol_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libmysql_unix_socket_protocol_plugin_la_SOURCES= plugin/mysql_unix_socket_protocol/protocol.cc
  check_PROGRAMS += 
endif

EXTRA_DIST+=${top_srcdir}/docs/plugins/mysql_unix_socket_protocol/*.rst

EXTRA_DIST += plugin/pbms/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/pbms/plugin.ini:

EXTRA_DIST += plugin/pbms/AUTHORS plugin/pbms/COPYING plugin/pbms/ChangeLog plugin/pbms/README plugin/pbms/TODO plugin/pbms/src/api_ms.cc plugin/pbms/src/metadata_ms.cc plugin/pbms/src/cslib/CSSys_win.cc
noinst_HEADERS +=  plugin/pbms/src/backup_ms.h plugin/pbms/src/cloud_ms.h plugin/pbms/src/compactor_ms.h plugin/pbms/src/connection_handler_ms.h plugin/pbms/src/cslib/CSConfig.h plugin/pbms/src/cslib/CSDefs.h plugin/pbms/src/cslib/CSDirectory.h plugin/pbms/src/cslib/CSEncode.h plugin/pbms/src/cslib/CSException.h plugin/pbms/src/cslib/CSFile.h plugin/pbms/src/cslib/CSGlobal.h plugin/pbms/src/cslib/CSHTTPStream.h plugin/pbms/src/cslib/CSLog.h plugin/pbms/src/cslib/CSMd5.h plugin/pbms/src/cslib/CSMemory.h plugin/pbms/src/cslib/CSMutex.h plugin/pbms/src/cslib/CSObject.h plugin/pbms/src/cslib/CSPath.h plugin/pbms/src/cslib/CSS3Protocol.h plugin/pbms/src/cslib/CSSha1.h plugin/pbms/src/cslib/CSSocket.h plugin/pbms/src/cslib/CSStorage.h plugin/pbms/src/cslib/CSStream.h plugin/pbms/src/cslib/CSString.h plugin/pbms/src/cslib/CSStrUtil.h plugin/pbms/src/cslib/CSThread.h plugin/pbms/src/cslib/CSTime.h plugin/pbms/src/cslib/CSUTF8.h plugin/pbms/src/cslib/CSXML.h plugin/pbms/src/cslib/CSSys.h plugin/pbms/src/database_ms.h plugin/pbms/src/defs_ms.h plugin/pbms/src/discover_ms.h plugin/pbms/src/engine_ms.h plugin/pbms/src/events_ms.h plugin/pbms/src/ha_pbms.h plugin/pbms/src/metadata_ms.h plugin/pbms/src/mysql_ms.h plugin/pbms/src/network_ms.h plugin/pbms/src/open_table_ms.h plugin/pbms/src/parameters_ms.h plugin/pbms/src/pbmsdaemon_ms.h plugin/pbms/src/pbms.h plugin/pbms/src/pbmslib.h plugin/pbms/src/repository_ms.h plugin/pbms/src/systab_backup_ms.h plugin/pbms/src/systab_cloud_ms.h plugin/pbms/src/systab_dump_ms.h plugin/pbms/src/systab_httpheader_ms.h plugin/pbms/src/systab_util_ms.h plugin/pbms/src/systab_variable_ms.h plugin/pbms/src/system_table_ms.h plugin/pbms/src/table_ms.h plugin/pbms/src/temp_log_ms.h plugin/pbms/src/transaction_ms.h plugin/pbms/src/trans_cache_ms.h plugin/pbms/src/trans_log_ms.h plugin/pbms/src/version_ms.h
EXTRA_DIST += plugin/pbms/tests

plugin_pbms_dir=${top_srcdir}/plugin/pbms
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/pbms/plugin.ini  plugin/pbms/src/plugin_ms.cc plugin/pbms/src/backup_ms.cc plugin/pbms/src/cloud_ms.cc plugin/pbms/src/compactor_ms.cc plugin/pbms/src/connection_handler_ms.cc plugin/pbms/src/database_ms.cc plugin/pbms/src/engine_ms.cc plugin/pbms/src/events_ms.cc plugin/pbms/src/mysql_ms.cc plugin/pbms/src/network_ms.cc plugin/pbms/src/open_table_ms.cc plugin/pbms/src/parameters_ms.cc plugin/pbms/src/pbmsdaemon_ms.cc plugin/pbms/src/ha_pbms.cc plugin/pbms/src/repository_ms.cc plugin/pbms/src/systab_backup_ms.cc plugin/pbms/src/systab_cloud_ms.cc plugin/pbms/src/systab_dump_ms.cc plugin/pbms/src/systab_httpheader_ms.cc plugin/pbms/src/systab_util_ms.cc plugin/pbms/src/systab_variable_ms.cc plugin/pbms/src/system_table_ms.cc plugin/pbms/src/table_ms.cc plugin/pbms/src/temp_log_ms.cc plugin/pbms/src/transaction_ms.cc plugin/pbms/src/trans_cache_ms.cc plugin/pbms/src/trans_log_ms.cc plugin/pbms/src/cslib/CSDirectory.cc plugin/pbms/src/cslib/CSEncode.cc plugin/pbms/src/cslib/CSException.cc plugin/pbms/src/cslib/CSFile.cc plugin/pbms/src/cslib/CSHTTPStream.cc plugin/pbms/src/cslib/CSLog.cc plugin/pbms/src/cslib/CSMd5.cc plugin/pbms/src/cslib/CSMemory.cc plugin/pbms/src/cslib/CSMutex.cc plugin/pbms/src/cslib/CSObject.cc plugin/pbms/src/cslib/CSPath.cc plugin/pbms/src/cslib/CSS3Protocol.cc plugin/pbms/src/cslib/CSSha1.cc plugin/pbms/src/cslib/CSSocket.cc plugin/pbms/src/cslib/CSStorage.cc plugin/pbms/src/cslib/CSStream.cc plugin/pbms/src/cslib/CSString.cc plugin/pbms/src/cslib/CSStrUtil.cc plugin/pbms/src/cslib/CSThread.cc plugin/pbms/src/cslib/CSTime.cc plugin/pbms/src/cslib/CSUTF8.cc plugin/pbms/src/cslib/CSXML.cc plugin/pbms/src/cslib/CSSys_unix.cc
if BUILD_PBMS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libpbms_plugin.la
  plugin_libpbms_plugin_la_LIBADD=
  plugin_libpbms_plugin_la_DEPENDENCIES=
  plugin_libpbms_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBCURL} $(GCOV_LIBS)
  plugin_libpbms_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=pbms -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='PrimeBase Media Stream Daemon' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libpbms_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) -DDRIZZLED -DPBMS_VERSION=0.5.14-beta -DBUILDING_DRIZZLED
  plugin_libpbms_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libpbms_plugin_la_SOURCES= plugin/pbms/src/plugin_ms.cc plugin/pbms/src/backup_ms.cc plugin/pbms/src/cloud_ms.cc plugin/pbms/src/compactor_ms.cc plugin/pbms/src/connection_handler_ms.cc plugin/pbms/src/database_ms.cc plugin/pbms/src/engine_ms.cc plugin/pbms/src/events_ms.cc plugin/pbms/src/mysql_ms.cc plugin/pbms/src/network_ms.cc plugin/pbms/src/open_table_ms.cc plugin/pbms/src/parameters_ms.cc plugin/pbms/src/pbmsdaemon_ms.cc plugin/pbms/src/ha_pbms.cc plugin/pbms/src/repository_ms.cc plugin/pbms/src/systab_backup_ms.cc plugin/pbms/src/systab_cloud_ms.cc plugin/pbms/src/systab_dump_ms.cc plugin/pbms/src/systab_httpheader_ms.cc plugin/pbms/src/systab_util_ms.cc plugin/pbms/src/systab_variable_ms.cc plugin/pbms/src/system_table_ms.cc plugin/pbms/src/table_ms.cc plugin/pbms/src/temp_log_ms.cc plugin/pbms/src/transaction_ms.cc plugin/pbms/src/trans_cache_ms.cc plugin/pbms/src/trans_log_ms.cc plugin/pbms/src/cslib/CSDirectory.cc plugin/pbms/src/cslib/CSEncode.cc plugin/pbms/src/cslib/CSException.cc plugin/pbms/src/cslib/CSFile.cc plugin/pbms/src/cslib/CSHTTPStream.cc plugin/pbms/src/cslib/CSLog.cc plugin/pbms/src/cslib/CSMd5.cc plugin/pbms/src/cslib/CSMemory.cc plugin/pbms/src/cslib/CSMutex.cc plugin/pbms/src/cslib/CSObject.cc plugin/pbms/src/cslib/CSPath.cc plugin/pbms/src/cslib/CSS3Protocol.cc plugin/pbms/src/cslib/CSSha1.cc plugin/pbms/src/cslib/CSSocket.cc plugin/pbms/src/cslib/CSStorage.cc plugin/pbms/src/cslib/CSStream.cc plugin/pbms/src/cslib/CSString.cc plugin/pbms/src/cslib/CSStrUtil.cc plugin/pbms/src/cslib/CSThread.cc plugin/pbms/src/cslib/CSTime.cc plugin/pbms/src/cslib/CSUTF8.cc plugin/pbms/src/cslib/CSXML.cc plugin/pbms/src/cslib/CSSys_unix.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libpbms_plugin.la
endif
EXTRA_DIST += plugin/pbms/plugin.ini
if BUILD_PBMS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libpbms_plugin.la
  plugin_libpbms_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBCURL} $(GCOV_LIBS)
  plugin_libpbms_plugin_la_LIBADD=
  plugin_libpbms_plugin_la_DEPENDENCIES=
  plugin_libpbms_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=pbms -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='PrimeBase Media Stream Daemon' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libpbms_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) -DDRIZZLED -DPBMS_VERSION=0.5.14-beta -DBUILDING_DRIZZLED
  plugin_libpbms_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libpbms_plugin_la_SOURCES= plugin/pbms/src/plugin_ms.cc plugin/pbms/src/backup_ms.cc plugin/pbms/src/cloud_ms.cc plugin/pbms/src/compactor_ms.cc plugin/pbms/src/connection_handler_ms.cc plugin/pbms/src/database_ms.cc plugin/pbms/src/engine_ms.cc plugin/pbms/src/events_ms.cc plugin/pbms/src/mysql_ms.cc plugin/pbms/src/network_ms.cc plugin/pbms/src/open_table_ms.cc plugin/pbms/src/parameters_ms.cc plugin/pbms/src/pbmsdaemon_ms.cc plugin/pbms/src/ha_pbms.cc plugin/pbms/src/repository_ms.cc plugin/pbms/src/systab_backup_ms.cc plugin/pbms/src/systab_cloud_ms.cc plugin/pbms/src/systab_dump_ms.cc plugin/pbms/src/systab_httpheader_ms.cc plugin/pbms/src/systab_util_ms.cc plugin/pbms/src/systab_variable_ms.cc plugin/pbms/src/system_table_ms.cc plugin/pbms/src/table_ms.cc plugin/pbms/src/temp_log_ms.cc plugin/pbms/src/transaction_ms.cc plugin/pbms/src/trans_cache_ms.cc plugin/pbms/src/trans_log_ms.cc plugin/pbms/src/cslib/CSDirectory.cc plugin/pbms/src/cslib/CSEncode.cc plugin/pbms/src/cslib/CSException.cc plugin/pbms/src/cslib/CSFile.cc plugin/pbms/src/cslib/CSHTTPStream.cc plugin/pbms/src/cslib/CSLog.cc plugin/pbms/src/cslib/CSMd5.cc plugin/pbms/src/cslib/CSMemory.cc plugin/pbms/src/cslib/CSMutex.cc plugin/pbms/src/cslib/CSObject.cc plugin/pbms/src/cslib/CSPath.cc plugin/pbms/src/cslib/CSS3Protocol.cc plugin/pbms/src/cslib/CSSha1.cc plugin/pbms/src/cslib/CSSocket.cc plugin/pbms/src/cslib/CSStorage.cc plugin/pbms/src/cslib/CSStream.cc plugin/pbms/src/cslib/CSString.cc plugin/pbms/src/cslib/CSStrUtil.cc plugin/pbms/src/cslib/CSThread.cc plugin/pbms/src/cslib/CSTime.cc plugin/pbms/src/cslib/CSUTF8.cc plugin/pbms/src/cslib/CSXML.cc plugin/pbms/src/cslib/CSSys_unix.cc
  check_PROGRAMS += 
endif
include plugin/pbms/plugin.am

EXTRA_DIST += plugin/performance_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/performance_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/performance_dictionary/dictionary.h plugin/performance_dictionary/query_usage.h plugin/performance_dictionary/session_usage_logger.h plugin/performance_dictionary/session_usage.h
EXTRA_DIST += plugin/performance_dictionary/tests

plugin_performance_dictionary_dir=${top_srcdir}/plugin/performance_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/performance_dictionary/plugin.ini  plugin/performance_dictionary/dictionary.cc plugin/performance_dictionary/query_usage.cc plugin/performance_dictionary/session_usage.cc plugin/performance_dictionary/session_usage_logger.cc
if BUILD_PERFORMANCE_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libperformance_dictionary_plugin.la
  plugin_libperformance_dictionary_plugin_la_LIBADD=
  plugin_libperformance_dictionary_plugin_la_DEPENDENCIES=
  plugin_libperformance_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libperformance_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=performance_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Performance Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libperformance_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libperformance_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libperformance_dictionary_plugin_la_SOURCES= plugin/performance_dictionary/dictionary.cc plugin/performance_dictionary/query_usage.cc plugin/performance_dictionary/session_usage.cc plugin/performance_dictionary/session_usage_logger.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libperformance_dictionary_plugin.la
endif
EXTRA_DIST += plugin/performance_dictionary/plugin.ini
if BUILD_PERFORMANCE_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libperformance_dictionary_plugin.la
  plugin_libperformance_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libperformance_dictionary_plugin_la_LIBADD=
  plugin_libperformance_dictionary_plugin_la_DEPENDENCIES=
  plugin_libperformance_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=performance_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Performance Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libperformance_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libperformance_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libperformance_dictionary_plugin_la_SOURCES= plugin/performance_dictionary/dictionary.cc plugin/performance_dictionary/query_usage.cc plugin/performance_dictionary/session_usage.cc plugin/performance_dictionary/session_usage_logger.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/protocol_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/protocol_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/protocol_dictionary/dictionary.h

plugin_protocol_dictionary_dir=${top_srcdir}/plugin/protocol_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/protocol_dictionary/plugin.ini  plugin/protocol_dictionary/dictionary.cc
if BUILD_PROTOCOL_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libprotocol_dictionary_plugin.la
  plugin_libprotocol_dictionary_plugin_la_LIBADD=
  plugin_libprotocol_dictionary_plugin_la_DEPENDENCIES=
  plugin_libprotocol_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libprotocol_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=protocol_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Protocol Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libprotocol_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libprotocol_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libprotocol_dictionary_plugin_la_SOURCES= plugin/protocol_dictionary/dictionary.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libprotocol_dictionary_plugin.la
endif
EXTRA_DIST += plugin/protocol_dictionary/plugin.ini
if BUILD_PROTOCOL_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libprotocol_dictionary_plugin.la
  plugin_libprotocol_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libprotocol_dictionary_plugin_la_LIBADD=
  plugin_libprotocol_dictionary_plugin_la_DEPENDENCIES=
  plugin_libprotocol_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=protocol_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Protocol Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libprotocol_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libprotocol_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libprotocol_dictionary_plugin_la_SOURCES= plugin/protocol_dictionary/dictionary.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/rabbitmq/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/rabbitmq/plugin.ini:

EXTRA_DIST += plugin/rabbitmq/admin.sh
noinst_HEADERS +=  plugin/rabbitmq/rabbitmq_log.h plugin/rabbitmq/rabbitmq_handler.h
EXTRA_DIST += plugin/rabbitmq/tests

plugin_rabbitmq_dir=${top_srcdir}/plugin/rabbitmq
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/rabbitmq/plugin.ini  plugin/rabbitmq/rabbitmq_log.cc plugin/rabbitmq/rabbitmq_handler.cc
if BUILD_RABBITMQ_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/librabbitmq_plugin.la
  plugin_librabbitmq_plugin_la_LIBADD=
  plugin_librabbitmq_plugin_la_DEPENDENCIES=
  plugin_librabbitmq_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBRABBITMQ} $(GCOV_LIBS)
  plugin_librabbitmq_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=rabbitmq -DPANDORA_MODULE_AUTHOR='Marcus Eriksson' -DPANDORA_MODULE_TITLE='RabbitMQ Replicator' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librabbitmq_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_librabbitmq_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librabbitmq_plugin_la_SOURCES= plugin/rabbitmq/rabbitmq_log.cc plugin/rabbitmq/rabbitmq_handler.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/librabbitmq_plugin.la
endif
EXTRA_DIST += plugin/rabbitmq/plugin.ini
if BUILD_RABBITMQ_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/librabbitmq_plugin.la
  plugin_librabbitmq_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBRABBITMQ} $(GCOV_LIBS)
  plugin_librabbitmq_plugin_la_LIBADD=
  plugin_librabbitmq_plugin_la_DEPENDENCIES=
  plugin_librabbitmq_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=rabbitmq -DPANDORA_MODULE_AUTHOR='Marcus Eriksson' -DPANDORA_MODULE_TITLE='RabbitMQ Replicator' -DPANDORA_MODULE_VERSION='0.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librabbitmq_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_librabbitmq_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librabbitmq_plugin_la_SOURCES= plugin/rabbitmq/rabbitmq_log.cc plugin/rabbitmq/rabbitmq_handler.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/rand_function/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/rand_function/plugin.ini:

EXTRA_DIST += plugin/rand_function/tests

plugin_rand_function_dir=${top_srcdir}/plugin/rand_function
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/rand_function/plugin.ini  plugin/rand_function/rand_function.cc
if BUILD_RAND_FUNCTION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/librand_function_plugin.la
  plugin_librand_function_plugin_la_LIBADD=
  plugin_librand_function_plugin_la_DEPENDENCIES=
  plugin_librand_function_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_librand_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=rand_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='RAND() function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librand_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_librand_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librand_function_plugin_la_SOURCES= plugin/rand_function/rand_function.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/librand_function_plugin.la
endif
EXTRA_DIST += plugin/rand_function/plugin.ini
if BUILD_RAND_FUNCTION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/librand_function_plugin.la
  plugin_librand_function_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_librand_function_plugin_la_LIBADD=
  plugin_librand_function_plugin_la_DEPENDENCIES=
  plugin_librand_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=rand_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='RAND() function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librand_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_librand_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librand_function_plugin_la_SOURCES= plugin/rand_function/rand_function.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/regex_policy/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/regex_policy/plugin.ini:

noinst_HEADERS +=  plugin/regex_policy/policy.h
EXTRA_DIST += plugin/regex_policy/tests

plugin_regex_policy_dir=${top_srcdir}/plugin/regex_policy
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/regex_policy/plugin.ini  plugin/regex_policy/module.cc
if BUILD_REGEX_POLICY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libregex_policy_plugin.la
  plugin_libregex_policy_plugin_la_LIBADD=
  plugin_libregex_policy_plugin_la_DEPENDENCIES=
  plugin_libregex_policy_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libregex_policy_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=regex_policy -DPANDORA_MODULE_AUTHOR='Clint Byrum <clint.byrum@canonical.com>' -DPANDORA_MODULE_TITLE='Regex Policy' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libregex_policy_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libregex_policy_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libregex_policy_plugin_la_SOURCES= plugin/regex_policy/module.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libregex_policy_plugin.la
endif
EXTRA_DIST += plugin/regex_policy/plugin.ini
if BUILD_REGEX_POLICY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libregex_policy_plugin.la
  plugin_libregex_policy_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libregex_policy_plugin_la_LIBADD=
  plugin_libregex_policy_plugin_la_DEPENDENCIES=
  plugin_libregex_policy_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=regex_policy -DPANDORA_MODULE_AUTHOR='Clint Byrum <clint.byrum@canonical.com>' -DPANDORA_MODULE_TITLE='Regex Policy' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libregex_policy_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libregex_policy_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libregex_policy_plugin_la_SOURCES= plugin/regex_policy/module.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/registry_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/registry_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/registry_dictionary/dictionary.h plugin/registry_dictionary/modules.h plugin/registry_dictionary/plugins.h
EXTRA_DIST += plugin/registry_dictionary/tests

plugin_registry_dictionary_dir=${top_srcdir}/plugin/registry_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/registry_dictionary/plugin.ini  plugin/registry_dictionary/dictionary.cc plugin/registry_dictionary/modules.cc plugin/registry_dictionary/plugins.cc
if BUILD_REGISTRY_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libregistry_dictionary_plugin.la
  plugin_libregistry_dictionary_plugin_la_LIBADD=
  plugin_libregistry_dictionary_plugin_la_DEPENDENCIES=
  plugin_libregistry_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libregistry_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=registry_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Registry Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libregistry_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libregistry_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libregistry_dictionary_plugin_la_SOURCES= plugin/registry_dictionary/dictionary.cc plugin/registry_dictionary/modules.cc plugin/registry_dictionary/plugins.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libregistry_dictionary_plugin.la
endif
EXTRA_DIST += plugin/registry_dictionary/plugin.ini
if BUILD_REGISTRY_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libregistry_dictionary_plugin.la
  plugin_libregistry_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libregistry_dictionary_plugin_la_LIBADD=
  plugin_libregistry_dictionary_plugin_la_DEPENDENCIES=
  plugin_libregistry_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=registry_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Registry Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libregistry_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libregistry_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libregistry_dictionary_plugin_la_SOURCES= plugin/registry_dictionary/dictionary.cc plugin/registry_dictionary/modules.cc plugin/registry_dictionary/plugins.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/replication_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/replication_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/replication_dictionary/streams.h
EXTRA_DIST += plugin/replication_dictionary/tests

plugin_replication_dictionary_dir=${top_srcdir}/plugin/replication_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/replication_dictionary/plugin.ini  plugin/replication_dictionary/module.cc plugin/replication_dictionary/streams.cc
if BUILD_REPLICATION_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libreplication_dictionary_plugin.la
  plugin_libreplication_dictionary_plugin_la_LIBADD=
  plugin_libreplication_dictionary_plugin_la_DEPENDENCIES=
  plugin_libreplication_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libreplication_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=replication_dictionary -DPANDORA_MODULE_AUTHOR='Jay Pipes <jaypipes@gmail.com>' -DPANDORA_MODULE_TITLE='Registry Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_BSD -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libreplication_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libreplication_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libreplication_dictionary_plugin_la_SOURCES= plugin/replication_dictionary/module.cc plugin/replication_dictionary/streams.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libreplication_dictionary_plugin.la
endif
EXTRA_DIST += plugin/replication_dictionary/plugin.ini
if BUILD_REPLICATION_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libreplication_dictionary_plugin.la
  plugin_libreplication_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libreplication_dictionary_plugin_la_LIBADD=
  plugin_libreplication_dictionary_plugin_la_DEPENDENCIES=
  plugin_libreplication_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=replication_dictionary -DPANDORA_MODULE_AUTHOR='Jay Pipes <jaypipes@gmail.com>' -DPANDORA_MODULE_TITLE='Registry Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_BSD -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libreplication_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libreplication_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libreplication_dictionary_plugin_la_SOURCES= plugin/replication_dictionary/module.cc plugin/replication_dictionary/streams.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/reverse_function/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/reverse_function/plugin.ini:


plugin_reverse_function_dir=${top_srcdir}/plugin/reverse_function
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/reverse_function/plugin.ini  plugin/reverse_function/reverse_function.cc
if BUILD_REVERSE_FUNCTION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libreverse_function_plugin.la
  plugin_libreverse_function_plugin_la_LIBADD=
  plugin_libreverse_function_plugin_la_DEPENDENCIES=
  plugin_libreverse_function_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libreverse_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=reverse_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='REVERSE function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libreverse_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libreverse_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libreverse_function_plugin_la_SOURCES= plugin/reverse_function/reverse_function.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libreverse_function_plugin.la
endif
EXTRA_DIST += plugin/reverse_function/plugin.ini
if BUILD_REVERSE_FUNCTION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libreverse_function_plugin.la
  plugin_libreverse_function_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libreverse_function_plugin_la_LIBADD=
  plugin_libreverse_function_plugin_la_DEPENDENCIES=
  plugin_libreverse_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=reverse_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='REVERSE function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libreverse_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libreverse_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libreverse_function_plugin_la_SOURCES= plugin/reverse_function/reverse_function.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/rot13/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/rot13/plugin.ini:

EXTRA_DIST += plugin/rot13/tests

plugin_rot13_dir=${top_srcdir}/plugin/rot13
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/rot13/plugin.ini  plugin/rot13/rot13.cc
if BUILD_ROT13_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/librot13_plugin.la
  plugin_librot13_plugin_la_LIBADD=
  plugin_librot13_plugin_la_DEPENDENCIES=
  plugin_librot13_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_librot13_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=rot13 -DPANDORA_MODULE_AUTHOR='Tim Penhey <tim@penhey.net>' -DPANDORA_MODULE_TITLE='ROT 13' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librot13_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_librot13_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librot13_plugin_la_SOURCES= plugin/rot13/rot13.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/librot13_plugin.la
endif
EXTRA_DIST += plugin/rot13/plugin.ini
if BUILD_ROT13_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/librot13_plugin.la
  plugin_librot13_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_librot13_plugin_la_LIBADD=
  plugin_librot13_plugin_la_DEPENDENCIES=
  plugin_librot13_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=rot13 -DPANDORA_MODULE_AUTHOR='Tim Penhey <tim@penhey.net>' -DPANDORA_MODULE_TITLE='ROT 13' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_librot13_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_librot13_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_librot13_plugin_la_SOURCES= plugin/rot13/rot13.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/schema_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/schema_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/schema_dictionary/columns.h plugin/schema_dictionary/data_dictionary.h plugin/schema_dictionary/dictionary.h plugin/schema_dictionary/index_parts.h plugin/schema_dictionary/indexes.h plugin/schema_dictionary/foreign_keys.h plugin/schema_dictionary/schemas.h plugin/schema_dictionary/table_constraints.h plugin/schema_dictionary/tables.h
EXTRA_DIST += plugin/schema_dictionary/tests

plugin_schema_dictionary_dir=${top_srcdir}/plugin/schema_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/schema_dictionary/plugin.ini  plugin/schema_dictionary/columns.cc plugin/schema_dictionary/dictionary.cc plugin/schema_dictionary/index_parts.cc plugin/schema_dictionary/indexes.cc plugin/schema_dictionary/foreign_keys.cc plugin/schema_dictionary/schemas.cc plugin/schema_dictionary/table_constraints.cc plugin/schema_dictionary/tables.cc
if BUILD_SCHEMA_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libschema_dictionary_plugin.la
  plugin_libschema_dictionary_plugin_la_LIBADD=
  plugin_libschema_dictionary_plugin_la_DEPENDENCIES=
  plugin_libschema_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libschema_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=schema_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Schema Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libschema_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libschema_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libschema_dictionary_plugin_la_SOURCES= plugin/schema_dictionary/columns.cc plugin/schema_dictionary/dictionary.cc plugin/schema_dictionary/index_parts.cc plugin/schema_dictionary/indexes.cc plugin/schema_dictionary/foreign_keys.cc plugin/schema_dictionary/schemas.cc plugin/schema_dictionary/table_constraints.cc plugin/schema_dictionary/tables.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libschema_dictionary_plugin.la
endif
EXTRA_DIST += plugin/schema_dictionary/plugin.ini
if BUILD_SCHEMA_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libschema_dictionary_plugin.la
  plugin_libschema_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libschema_dictionary_plugin_la_LIBADD=
  plugin_libschema_dictionary_plugin_la_DEPENDENCIES=
  plugin_libschema_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=schema_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Schema Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libschema_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libschema_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libschema_dictionary_plugin_la_SOURCES= plugin/schema_dictionary/columns.cc plugin/schema_dictionary/dictionary.cc plugin/schema_dictionary/index_parts.cc plugin/schema_dictionary/indexes.cc plugin/schema_dictionary/foreign_keys.cc plugin/schema_dictionary/schemas.cc plugin/schema_dictionary/table_constraints.cc plugin/schema_dictionary/tables.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/schema_engine/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/schema_engine/plugin.ini:

noinst_HEADERS +=  plugin/schema_engine/schema.h
EXTRA_DIST += plugin/schema_engine/tests

plugin_schema_engine_dir=${top_srcdir}/plugin/schema_engine
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/schema_engine/plugin.ini  plugin/schema_engine/schema.cc plugin/schema_engine/plugin.cc
if BUILD_SCHEMA_ENGINE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libschema_engine_plugin.la
  plugin_libschema_engine_plugin_la_LIBADD=
  plugin_libschema_engine_plugin_la_DEPENDENCIES=
  plugin_libschema_engine_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libschema_engine_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=schema_engine -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Schema Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libschema_engine_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libschema_engine_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libschema_engine_plugin_la_SOURCES= plugin/schema_engine/schema.cc plugin/schema_engine/plugin.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libschema_engine_plugin.la
endif
EXTRA_DIST += plugin/schema_engine/plugin.ini
if BUILD_SCHEMA_ENGINE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libschema_engine_plugin.la
  plugin_libschema_engine_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libschema_engine_plugin_la_LIBADD=
  plugin_libschema_engine_plugin_la_DEPENDENCIES=
  plugin_libschema_engine_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=schema_engine -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Schema Engine' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libschema_engine_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libschema_engine_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libschema_engine_plugin_la_SOURCES= plugin/schema_engine/schema.cc plugin/schema_engine/plugin.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/session_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/session_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/session_dictionary/dictionary.h plugin/session_dictionary/processlist.h plugin/session_dictionary/savepoints.h plugin/session_dictionary/sessions.h plugin/session_dictionary/variables.h
EXTRA_DIST += plugin/session_dictionary/tests

plugin_session_dictionary_dir=${top_srcdir}/plugin/session_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/session_dictionary/plugin.ini  plugin/session_dictionary/dictionary.cc plugin/session_dictionary/processlist.cc plugin/session_dictionary/savepoints.cc plugin/session_dictionary/sessions.cc plugin/session_dictionary/variables.cc
if BUILD_SESSION_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsession_dictionary_plugin.la
  plugin_libsession_dictionary_plugin_la_LIBADD=
  plugin_libsession_dictionary_plugin_la_DEPENDENCIES=
  plugin_libsession_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsession_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=session_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Session Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsession_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsession_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsession_dictionary_plugin_la_SOURCES= plugin/session_dictionary/dictionary.cc plugin/session_dictionary/processlist.cc plugin/session_dictionary/savepoints.cc plugin/session_dictionary/sessions.cc plugin/session_dictionary/variables.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsession_dictionary_plugin.la
endif
EXTRA_DIST += plugin/session_dictionary/plugin.ini
if BUILD_SESSION_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsession_dictionary_plugin.la
  plugin_libsession_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsession_dictionary_plugin_la_LIBADD=
  plugin_libsession_dictionary_plugin_la_DEPENDENCIES=
  plugin_libsession_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=session_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Session Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsession_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsession_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsession_dictionary_plugin_la_SOURCES= plugin/session_dictionary/dictionary.cc plugin/session_dictionary/processlist.cc plugin/session_dictionary/savepoints.cc plugin/session_dictionary/sessions.cc plugin/session_dictionary/variables.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/show_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/show_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/show_dictionary/dictionary.h plugin/show_dictionary/show.h plugin/show_dictionary/show_columns.h plugin/show_dictionary/show_create_schema.h plugin/show_dictionary/show_create_table.h plugin/show_dictionary/show_indexes.h plugin/show_dictionary/show_schemas.h plugin/show_dictionary/show_table_status.h plugin/show_dictionary/show_tables.h plugin/show_dictionary/show_temporary_tables.h
EXTRA_DIST += plugin/show_dictionary/tests

plugin_show_dictionary_dir=${top_srcdir}/plugin/show_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/show_dictionary/plugin.ini  plugin/show_dictionary/plugin.cc plugin/show_dictionary/show_columns.cc plugin/show_dictionary/show_create_schema.cc plugin/show_dictionary/show_create_table.cc plugin/show_dictionary/show_indexes.cc plugin/show_dictionary/show_schemas.cc plugin/show_dictionary/show_table_status.cc plugin/show_dictionary/show_tables.cc plugin/show_dictionary/show_temporary_tables.cc
if BUILD_SHOW_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libshow_dictionary_plugin.la
  plugin_libshow_dictionary_plugin_la_LIBADD=
  plugin_libshow_dictionary_plugin_la_DEPENDENCIES=
  plugin_libshow_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshow_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=show_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Show Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshow_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libshow_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshow_dictionary_plugin_la_SOURCES= plugin/show_dictionary/plugin.cc plugin/show_dictionary/show_columns.cc plugin/show_dictionary/show_create_schema.cc plugin/show_dictionary/show_create_table.cc plugin/show_dictionary/show_indexes.cc plugin/show_dictionary/show_schemas.cc plugin/show_dictionary/show_table_status.cc plugin/show_dictionary/show_tables.cc plugin/show_dictionary/show_temporary_tables.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libshow_dictionary_plugin.la
endif
EXTRA_DIST += plugin/show_dictionary/plugin.ini
if BUILD_SHOW_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libshow_dictionary_plugin.la
  plugin_libshow_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshow_dictionary_plugin_la_LIBADD=
  plugin_libshow_dictionary_plugin_la_DEPENDENCIES=
  plugin_libshow_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=show_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Show Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshow_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libshow_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshow_dictionary_plugin_la_SOURCES= plugin/show_dictionary/plugin.cc plugin/show_dictionary/show_columns.cc plugin/show_dictionary/show_create_schema.cc plugin/show_dictionary/show_create_table.cc plugin/show_dictionary/show_indexes.cc plugin/show_dictionary/show_schemas.cc plugin/show_dictionary/show_table_status.cc plugin/show_dictionary/show_tables.cc plugin/show_dictionary/show_temporary_tables.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/show_schema_proto/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/show_schema_proto/plugin.ini:

EXTRA_DIST += plugin/show_schema_proto/tests

plugin_show_schema_proto_dir=${top_srcdir}/plugin/show_schema_proto
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/show_schema_proto/plugin.ini  plugin/show_schema_proto/show_schema_proto.cc
if BUILD_SHOW_SCHEMA_PROTO_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libshow_schema_proto_plugin.la
  plugin_libshow_schema_proto_plugin_la_LIBADD=
  plugin_libshow_schema_proto_plugin_la_DEPENDENCIES=
  plugin_libshow_schema_proto_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshow_schema_proto_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=show_schema_proto -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='SHOW_SCHEMA_PROTO(db) Function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshow_schema_proto_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_libshow_schema_proto_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshow_schema_proto_plugin_la_SOURCES= plugin/show_schema_proto/show_schema_proto.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libshow_schema_proto_plugin.la
endif
EXTRA_DIST += plugin/show_schema_proto/plugin.ini
if BUILD_SHOW_SCHEMA_PROTO_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libshow_schema_proto_plugin.la
  plugin_libshow_schema_proto_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshow_schema_proto_plugin_la_LIBADD=
  plugin_libshow_schema_proto_plugin_la_DEPENDENCIES=
  plugin_libshow_schema_proto_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=show_schema_proto -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='SHOW_SCHEMA_PROTO(db) Function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshow_schema_proto_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_libshow_schema_proto_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshow_schema_proto_plugin_la_SOURCES= plugin/show_schema_proto/show_schema_proto.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/shutdown_function/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/shutdown_function/plugin.ini:


plugin_shutdown_function_dir=${top_srcdir}/plugin/shutdown_function
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/shutdown_function/plugin.ini  plugin/shutdown_function/shutdown.cc
if BUILD_SHUTDOWN_FUNCTION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libshutdown_function_plugin.la
  plugin_libshutdown_function_plugin_la_LIBADD=
  plugin_libshutdown_function_plugin_la_DEPENDENCIES=
  plugin_libshutdown_function_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshutdown_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=shutdown_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Shutdown function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshutdown_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libshutdown_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshutdown_function_plugin_la_SOURCES= plugin/shutdown_function/shutdown.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libshutdown_function_plugin.la
endif
EXTRA_DIST += plugin/shutdown_function/plugin.ini
if BUILD_SHUTDOWN_FUNCTION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libshutdown_function_plugin.la
  plugin_libshutdown_function_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libshutdown_function_plugin_la_LIBADD=
  plugin_libshutdown_function_plugin_la_DEPENDENCIES=
  plugin_libshutdown_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=shutdown_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Shutdown function' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libshutdown_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libshutdown_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libshutdown_function_plugin_la_SOURCES= plugin/shutdown_function/shutdown.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/signal_handler/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/signal_handler/plugin.ini:


plugin_signal_handler_dir=${top_srcdir}/plugin/signal_handler
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/signal_handler/plugin.ini  plugin/signal_handler/signal_handler.cc
if BUILD_SIGNAL_HANDLER_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsignal_handler_plugin.la
  plugin_libsignal_handler_plugin_la_LIBADD=
  plugin_libsignal_handler_plugin_la_DEPENDENCIES=
  plugin_libsignal_handler_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsignal_handler_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=signal_handler -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Default Signal Handler' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsignal_handler_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsignal_handler_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsignal_handler_plugin_la_SOURCES= plugin/signal_handler/signal_handler.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsignal_handler_plugin.la
endif
EXTRA_DIST += plugin/signal_handler/plugin.ini
if BUILD_SIGNAL_HANDLER_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsignal_handler_plugin.la
  plugin_libsignal_handler_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsignal_handler_plugin_la_LIBADD=
  plugin_libsignal_handler_plugin_la_DEPENDENCIES=
  plugin_libsignal_handler_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=signal_handler -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Default Signal Handler' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsignal_handler_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsignal_handler_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsignal_handler_plugin_la_SOURCES= plugin/signal_handler/signal_handler.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/simple_user_policy/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/simple_user_policy/plugin.ini:

noinst_HEADERS +=  plugin/simple_user_policy/policy.h
EXTRA_DIST += plugin/simple_user_policy/tests

plugin_simple_user_policy_dir=${top_srcdir}/plugin/simple_user_policy
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/simple_user_policy/plugin.ini  plugin/simple_user_policy/module.cc
if BUILD_SIMPLE_USER_POLICY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsimple_user_policy_plugin.la
  plugin_libsimple_user_policy_plugin_la_LIBADD=
  plugin_libsimple_user_policy_plugin_la_DEPENDENCIES=
  plugin_libsimple_user_policy_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsimple_user_policy_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=simple_user_policy -DPANDORA_MODULE_AUTHOR='Monty Taylor <mordred@inaugust.com>' -DPANDORA_MODULE_TITLE='Simple User Policy' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsimple_user_policy_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsimple_user_policy_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsimple_user_policy_plugin_la_SOURCES= plugin/simple_user_policy/module.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsimple_user_policy_plugin.la
endif
EXTRA_DIST += plugin/simple_user_policy/plugin.ini
if BUILD_SIMPLE_USER_POLICY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsimple_user_policy_plugin.la
  plugin_libsimple_user_policy_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsimple_user_policy_plugin_la_LIBADD=
  plugin_libsimple_user_policy_plugin_la_DEPENDENCIES=
  plugin_libsimple_user_policy_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=simple_user_policy -DPANDORA_MODULE_AUTHOR='Monty Taylor <mordred@inaugust.com>' -DPANDORA_MODULE_TITLE='Simple User Policy' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsimple_user_policy_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsimple_user_policy_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsimple_user_policy_plugin_la_SOURCES= plugin/simple_user_policy/module.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/slave/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/slave/plugin.ini:

noinst_HEADERS +=  plugin/slave/replication_slave.h plugin/slave/queue_thread.h plugin/slave/queue_consumer.h plugin/slave/queue_producer.h plugin/slave/sql_executor.h plugin/slave/replication_schema.h
EXTRA_DIST += plugin/slave/tests
EXTRA_DIST += ${top_srcdir}/plugin/slave/docs/*.rst

plugin_slave_dir=${top_srcdir}/plugin/slave
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/slave/plugin.ini  plugin/slave/module.cc plugin/slave/replication_slave.cc plugin/slave/queue_thread.cc plugin/slave/queue_consumer.cc plugin/slave/queue_producer.cc plugin/slave/sql_executor.cc plugin/slave/replication_schema.cc
if BUILD_SLAVE_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libslave_plugin.la
  plugin_libslave_plugin_la_LIBADD=${top_builddir}/libdrizzle/libdrizzle.la
  plugin_libslave_plugin_la_DEPENDENCIES=${top_builddir}/libdrizzle/libdrizzle.la
  plugin_libslave_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libslave_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=slave -DPANDORA_MODULE_AUTHOR='David Shrewsbury' -DPANDORA_MODULE_TITLE='Replication Slave' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libslave_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libslave_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libslave_plugin_la_SOURCES= plugin/slave/module.cc plugin/slave/replication_slave.cc plugin/slave/queue_thread.cc plugin/slave/queue_consumer.cc plugin/slave/queue_producer.cc plugin/slave/sql_executor.cc plugin/slave/replication_schema.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libslave_plugin.la
endif
EXTRA_DIST += plugin/slave/plugin.ini
if BUILD_SLAVE_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libslave_plugin.la
  plugin_libslave_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libslave_plugin_la_LIBADD=${top_builddir}/libdrizzle/libdrizzle.la
  plugin_libslave_plugin_la_DEPENDENCIES=${top_builddir}/libdrizzle/libdrizzle.la
  plugin_libslave_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=slave -DPANDORA_MODULE_AUTHOR='David Shrewsbury' -DPANDORA_MODULE_TITLE='Replication Slave' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libslave_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libslave_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libslave_plugin_la_SOURCES= plugin/slave/module.cc plugin/slave/replication_slave.cc plugin/slave/queue_thread.cc plugin/slave/queue_consumer.cc plugin/slave/queue_producer.cc plugin/slave/sql_executor.cc plugin/slave/replication_schema.cc
  check_PROGRAMS += 
endif

EXTRA_DIST+=${top_srcdir}/docs/plugins/slave/*.rst

EXTRA_DIST += plugin/sleep/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/sleep/plugin.ini:

EXTRA_DIST += plugin/sleep/tests

plugin_sleep_dir=${top_srcdir}/plugin/sleep
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/sleep/plugin.ini  plugin/sleep/sleep.cc
if BUILD_SLEEP_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsleep_plugin.la
  plugin_libsleep_plugin_la_LIBADD=
  plugin_libsleep_plugin_la_DEPENDENCIES=
  plugin_libsleep_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsleep_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=sleep -DPANDORA_MODULE_AUTHOR='Patrick Galbraith' -DPANDORA_MODULE_TITLE='Sleep Function' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsleep_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsleep_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsleep_plugin_la_SOURCES= plugin/sleep/sleep.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsleep_plugin.la
endif
EXTRA_DIST += plugin/sleep/plugin.ini
if BUILD_SLEEP_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsleep_plugin.la
  plugin_libsleep_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsleep_plugin_la_LIBADD=
  plugin_libsleep_plugin_la_DEPENDENCIES=
  plugin_libsleep_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=sleep -DPANDORA_MODULE_AUTHOR='Patrick Galbraith' -DPANDORA_MODULE_TITLE='Sleep Function' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsleep_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsleep_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsleep_plugin_la_SOURCES= plugin/sleep/sleep.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/status_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/status_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/status_dictionary/dictionary.h plugin/status_dictionary/variables.h plugin/status_dictionary/state_tool.h
EXTRA_DIST += plugin/status_dictionary/tests

plugin_status_dictionary_dir=${top_srcdir}/plugin/status_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/status_dictionary/plugin.ini  plugin/status_dictionary/status.cc plugin/status_dictionary/dictionary.cc
if BUILD_STATUS_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libstatus_dictionary_plugin.la
  plugin_libstatus_dictionary_plugin_la_LIBADD=
  plugin_libstatus_dictionary_plugin_la_DEPENDENCIES=
  plugin_libstatus_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstatus_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=status_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Status Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstatus_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstatus_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstatus_dictionary_plugin_la_SOURCES= plugin/status_dictionary/status.cc plugin/status_dictionary/dictionary.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libstatus_dictionary_plugin.la
endif
EXTRA_DIST += plugin/status_dictionary/plugin.ini
if BUILD_STATUS_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libstatus_dictionary_plugin.la
  plugin_libstatus_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstatus_dictionary_plugin_la_LIBADD=
  plugin_libstatus_dictionary_plugin_la_DEPENDENCIES=
  plugin_libstatus_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=status_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Status Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstatus_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstatus_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstatus_dictionary_plugin_la_SOURCES= plugin/status_dictionary/status.cc plugin/status_dictionary/dictionary.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/storage_engine_api_tester/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/storage_engine_api_tester/plugin.ini:

noinst_HEADERS +=  plugin/storage_engine_api_tester/engine_state_history.h
EXTRA_DIST += plugin/storage_engine_api_tester/tests

plugin_storage_engine_api_tester_dir=${top_srcdir}/plugin/storage_engine_api_tester
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/storage_engine_api_tester/plugin.ini  plugin/storage_engine_api_tester/storage_engine_api_tester.cc plugin/storage_engine_api_tester/engine_states.cc plugin/storage_engine_api_tester/cursor_states.cc plugin/storage_engine_api_tester/engine_state_history.cc
if BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libstorage_engine_api_tester_plugin.la
  plugin_libstorage_engine_api_tester_plugin_la_LIBADD=
  plugin_libstorage_engine_api_tester_plugin_la_DEPENDENCIES=
  plugin_libstorage_engine_api_tester_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstorage_engine_api_tester_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=storage_engine_api_tester -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Storage Engine API Tester' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstorage_engine_api_tester_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstorage_engine_api_tester_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstorage_engine_api_tester_plugin_la_SOURCES= plugin/storage_engine_api_tester/storage_engine_api_tester.cc plugin/storage_engine_api_tester/engine_states.cc plugin/storage_engine_api_tester/cursor_states.cc plugin/storage_engine_api_tester/engine_state_history.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libstorage_engine_api_tester_plugin.la
endif
EXTRA_DIST += plugin/storage_engine_api_tester/plugin.ini
if BUILD_STORAGE_ENGINE_API_TESTER_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libstorage_engine_api_tester_plugin.la
  plugin_libstorage_engine_api_tester_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstorage_engine_api_tester_plugin_la_LIBADD=
  plugin_libstorage_engine_api_tester_plugin_la_DEPENDENCIES=
  plugin_libstorage_engine_api_tester_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=storage_engine_api_tester -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Storage Engine API Tester' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstorage_engine_api_tester_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstorage_engine_api_tester_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstorage_engine_api_tester_plugin_la_SOURCES= plugin/storage_engine_api_tester/storage_engine_api_tester.cc plugin/storage_engine_api_tester/engine_states.cc plugin/storage_engine_api_tester/cursor_states.cc plugin/storage_engine_api_tester/engine_state_history.cc
  check_PROGRAMS += 
endif
include plugin/storage_engine_api_tester/plugin.am

EXTRA_DIST += plugin/string_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/string_functions/plugin.ini:

noinst_HEADERS +=  plugin/string_functions/elt.h plugin/string_functions/format.h plugin/string_functions/functions.h plugin/string_functions/quote.h plugin/string_functions/regex.h
EXTRA_DIST += plugin/string_functions/tests

plugin_string_functions_dir=${top_srcdir}/plugin/string_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/string_functions/plugin.ini  plugin/string_functions/elt.cc plugin/string_functions/format.cc plugin/string_functions/functions.cc plugin/string_functions/quote.cc plugin/string_functions/regex.cc
if BUILD_STRING_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libstring_functions_plugin.la
  plugin_libstring_functions_plugin_la_LIBADD=
  plugin_libstring_functions_plugin_la_DEPENDENCIES=
  plugin_libstring_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstring_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=string_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='String Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstring_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstring_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstring_functions_plugin_la_SOURCES= plugin/string_functions/elt.cc plugin/string_functions/format.cc plugin/string_functions/functions.cc plugin/string_functions/quote.cc plugin/string_functions/regex.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libstring_functions_plugin.la
endif
EXTRA_DIST += plugin/string_functions/plugin.ini
if BUILD_STRING_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libstring_functions_plugin.la
  plugin_libstring_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libstring_functions_plugin_la_LIBADD=
  plugin_libstring_functions_plugin_la_DEPENDENCIES=
  plugin_libstring_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=string_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='String Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libstring_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libstring_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libstring_functions_plugin_la_SOURCES= plugin/string_functions/elt.cc plugin/string_functions/format.cc plugin/string_functions/functions.cc plugin/string_functions/quote.cc plugin/string_functions/regex.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/substr_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/substr_functions/plugin.ini:


plugin_substr_functions_dir=${top_srcdir}/plugin/substr_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/substr_functions/plugin.ini  plugin/substr_functions/substr_functions.cc
if BUILD_SUBSTR_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsubstr_functions_plugin.la
  plugin_libsubstr_functions_plugin_la_LIBADD=
  plugin_libsubstr_functions_plugin_la_DEPENDENCIES=
  plugin_libsubstr_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsubstr_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=substr_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='SUBSTRING() and SUBSTRING_INDEX() functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsubstr_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsubstr_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsubstr_functions_plugin_la_SOURCES= plugin/substr_functions/substr_functions.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsubstr_functions_plugin.la
endif
EXTRA_DIST += plugin/substr_functions/plugin.ini
if BUILD_SUBSTR_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsubstr_functions_plugin.la
  plugin_libsubstr_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsubstr_functions_plugin_la_LIBADD=
  plugin_libsubstr_functions_plugin_la_DEPENDENCIES=
  plugin_libsubstr_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=substr_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='SUBSTRING() and SUBSTRING_INDEX() functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsubstr_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsubstr_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsubstr_functions_plugin_la_SOURCES= plugin/substr_functions/substr_functions.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/syslog/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/syslog/plugin.ini:

noinst_HEADERS +=  plugin/syslog/logging.h plugin/syslog/errmsg.h plugin/syslog/function.h plugin/syslog/wrap.h plugin/syslog/names.h

plugin_syslog_dir=${top_srcdir}/plugin/syslog
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/syslog/plugin.ini  plugin/syslog/module.cc plugin/syslog/logging.cc plugin/syslog/errmsg.cc plugin/syslog/function.cc plugin/syslog/wrap.cc
if BUILD_SYSLOG_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libsyslog_plugin.la
  plugin_libsyslog_plugin_la_LIBADD=
  plugin_libsyslog_plugin_la_DEPENDENCIES=
  plugin_libsyslog_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsyslog_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=syslog -DPANDORA_MODULE_AUTHOR='Mark Atwood <me@mark.atwood.name>' -DPANDORA_MODULE_TITLE='Syslog' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsyslog_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsyslog_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsyslog_plugin_la_SOURCES= plugin/syslog/module.cc plugin/syslog/logging.cc plugin/syslog/errmsg.cc plugin/syslog/function.cc plugin/syslog/wrap.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libsyslog_plugin.la
endif
EXTRA_DIST += plugin/syslog/plugin.ini
if BUILD_SYSLOG_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libsyslog_plugin.la
  plugin_libsyslog_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libsyslog_plugin_la_LIBADD=
  plugin_libsyslog_plugin_la_DEPENDENCIES=
  plugin_libsyslog_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=syslog -DPANDORA_MODULE_AUTHOR='Mark Atwood <me@mark.atwood.name>' -DPANDORA_MODULE_TITLE='Syslog' -DPANDORA_MODULE_VERSION='0.3' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libsyslog_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libsyslog_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libsyslog_plugin_la_SOURCES= plugin/syslog/module.cc plugin/syslog/logging.cc plugin/syslog/errmsg.cc plugin/syslog/function.cc plugin/syslog/wrap.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/table_cache_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/table_cache_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/table_cache_dictionary/dictionary.h plugin/table_cache_dictionary/table_cache.h plugin/table_cache_dictionary/table_definition_cache.h
EXTRA_DIST += plugin/table_cache_dictionary/tests

plugin_table_cache_dictionary_dir=${top_srcdir}/plugin/table_cache_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/table_cache_dictionary/plugin.ini  plugin/table_cache_dictionary/dictionary.cc plugin/table_cache_dictionary/table_cache.cc plugin/table_cache_dictionary/table_definition_cache.cc
if BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libtable_cache_dictionary_plugin.la
  plugin_libtable_cache_dictionary_plugin_la_LIBADD=
  plugin_libtable_cache_dictionary_plugin_la_DEPENDENCIES=
  plugin_libtable_cache_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtable_cache_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=table_cache_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Table Cached and Table Definition Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtable_cache_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtable_cache_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtable_cache_dictionary_plugin_la_SOURCES= plugin/table_cache_dictionary/dictionary.cc plugin/table_cache_dictionary/table_cache.cc plugin/table_cache_dictionary/table_definition_cache.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libtable_cache_dictionary_plugin.la
endif
EXTRA_DIST += plugin/table_cache_dictionary/plugin.ini
if BUILD_TABLE_CACHE_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libtable_cache_dictionary_plugin.la
  plugin_libtable_cache_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtable_cache_dictionary_plugin_la_LIBADD=
  plugin_libtable_cache_dictionary_plugin_la_DEPENDENCIES=
  plugin_libtable_cache_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=table_cache_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Table Cached and Table Definition Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtable_cache_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtable_cache_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtable_cache_dictionary_plugin_la_SOURCES= plugin/table_cache_dictionary/dictionary.cc plugin/table_cache_dictionary/table_cache.cc plugin/table_cache_dictionary/table_definition_cache.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/tableprototester/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/tableprototester/plugin.ini:

noinst_HEADERS +=  plugin/tableprototester/tableprototester.h
EXTRA_DIST += plugin/tableprototester/tests

plugin_tableprototester_dir=${top_srcdir}/plugin/tableprototester
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/tableprototester/plugin.ini  plugin/tableprototester/tableprototester.cc
if BUILD_TABLEPROTOTESTER_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libtableprototester_plugin.la
  plugin_libtableprototester_plugin_la_LIBADD=
  plugin_libtableprototester_plugin_la_DEPENDENCIES=
  plugin_libtableprototester_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtableprototester_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=tableprototester -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Table Proto Message Tester' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtableprototester_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtableprototester_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtableprototester_plugin_la_SOURCES= plugin/tableprototester/tableprototester.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libtableprototester_plugin.la
endif
EXTRA_DIST += plugin/tableprototester/plugin.ini
if BUILD_TABLEPROTOTESTER_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libtableprototester_plugin.la
  plugin_libtableprototester_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtableprototester_plugin_la_LIBADD=
  plugin_libtableprototester_plugin_la_DEPENDENCIES=
  plugin_libtableprototester_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=tableprototester -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Table Proto Message Tester' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtableprototester_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtableprototester_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtableprototester_plugin_la_SOURCES= plugin/tableprototester/tableprototester.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/transaction_log/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/transaction_log/plugin.ini:

noinst_HEADERS +=  plugin/transaction_log/hexdump_transaction_message.h plugin/transaction_log/print_transaction_message.h plugin/transaction_log/transaction_log.h plugin/transaction_log/transaction_log_applier.h plugin/transaction_log/transaction_log_entry.h plugin/transaction_log/transaction_log_index.h plugin/transaction_log/transaction_log_reader.h plugin/transaction_log/data_dictionary_schema.h plugin/transaction_log/write_buffer.h
EXTRA_DIST += plugin/transaction_log/tests
EXTRA_DIST += ${top_srcdir}/plugin/transaction_log/docs/*.rst

plugin_transaction_log_dir=${top_srcdir}/plugin/transaction_log
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/transaction_log/plugin.ini  plugin/transaction_log/hexdump_transaction_message.cc plugin/transaction_log/module.cc plugin/transaction_log/print_transaction_message.cc plugin/transaction_log/transaction_log.cc plugin/transaction_log/transaction_log_applier.cc plugin/transaction_log/transaction_log_entry.cc plugin/transaction_log/transaction_log_index.cc plugin/transaction_log/transaction_log_reader.cc plugin/transaction_log/data_dictionary_schema.cc plugin/transaction_log/write_buffer.cc
if BUILD_TRANSACTION_LOG_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libtransaction_log_plugin.la
  plugin_libtransaction_log_plugin_la_LIBADD=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libtransaction_log_plugin_la_DEPENDENCIES=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libtransaction_log_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtransaction_log_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=transaction_log -DPANDORA_MODULE_AUTHOR='Jay Pipes' -DPANDORA_MODULE_TITLE='Transaction Log' -DPANDORA_MODULE_VERSION='0.1.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtransaction_log_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_libtransaction_log_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtransaction_log_plugin_la_SOURCES= plugin/transaction_log/hexdump_transaction_message.cc plugin/transaction_log/module.cc plugin/transaction_log/print_transaction_message.cc plugin/transaction_log/transaction_log.cc plugin/transaction_log/transaction_log_applier.cc plugin/transaction_log/transaction_log_entry.cc plugin/transaction_log/transaction_log_index.cc plugin/transaction_log/transaction_log_reader.cc plugin/transaction_log/data_dictionary_schema.cc plugin/transaction_log/write_buffer.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libtransaction_log_plugin.la
endif
EXTRA_DIST += plugin/transaction_log/plugin.ini
if BUILD_TRANSACTION_LOG_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libtransaction_log_plugin.la
  plugin_libtransaction_log_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtransaction_log_plugin_la_LIBADD=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libtransaction_log_plugin_la_DEPENDENCIES=${top_builddir}/drizzled/algorithm/libhash.la
  plugin_libtransaction_log_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=transaction_log -DPANDORA_MODULE_AUTHOR='Jay Pipes' -DPANDORA_MODULE_TITLE='Transaction Log' -DPANDORA_MODULE_VERSION='0.1.1' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtransaction_log_plugin_la_CXXFLAGS=$(AM_CXXFLAGS) ${PROTOSKIP_WARNINGS} -DBUILDING_DRIZZLED
  plugin_libtransaction_log_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtransaction_log_plugin_la_SOURCES= plugin/transaction_log/hexdump_transaction_message.cc plugin/transaction_log/module.cc plugin/transaction_log/print_transaction_message.cc plugin/transaction_log/transaction_log.cc plugin/transaction_log/transaction_log_applier.cc plugin/transaction_log/transaction_log_entry.cc plugin/transaction_log/transaction_log_index.cc plugin/transaction_log/transaction_log_reader.cc plugin/transaction_log/data_dictionary_schema.cc plugin/transaction_log/write_buffer.cc
  check_PROGRAMS += 
endif
include plugin/transaction_log/plugin.am

EXTRA_DIST+=${top_srcdir}/docs/plugins/transaction_log/*.rst

EXTRA_DIST += plugin/trigger_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/trigger_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/trigger_dictionary/table.h
EXTRA_DIST += plugin/trigger_dictionary/tests

plugin_trigger_dictionary_dir=${top_srcdir}/plugin/trigger_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/trigger_dictionary/plugin.ini  plugin/trigger_dictionary/module.cc plugin/trigger_dictionary/table.cc
if BUILD_TRIGGER_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libtrigger_dictionary_plugin.la
  plugin_libtrigger_dictionary_plugin_la_LIBADD=
  plugin_libtrigger_dictionary_plugin_la_DEPENDENCIES=
  plugin_libtrigger_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtrigger_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=trigger_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Trigger Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtrigger_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtrigger_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtrigger_dictionary_plugin_la_SOURCES= plugin/trigger_dictionary/module.cc plugin/trigger_dictionary/table.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libtrigger_dictionary_plugin.la
endif
EXTRA_DIST += plugin/trigger_dictionary/plugin.ini
if BUILD_TRIGGER_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libtrigger_dictionary_plugin.la
  plugin_libtrigger_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libtrigger_dictionary_plugin_la_LIBADD=
  plugin_libtrigger_dictionary_plugin_la_DEPENDENCIES=
  plugin_libtrigger_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=trigger_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Trigger Dictionary' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libtrigger_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libtrigger_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libtrigger_dictionary_plugin_la_SOURCES= plugin/trigger_dictionary/module.cc plugin/trigger_dictionary/table.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/user_locks/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/user_locks/plugin.ini:

noinst_HEADERS +=  plugin/user_locks/barrier.h plugin/user_locks/barrier_dictionary.h plugin/user_locks/barrier_storage.h plugin/user_locks/barriers.h plugin/user_locks/create_barrier.h plugin/user_locks/get_lock.h plugin/user_locks/get_locks.h plugin/user_locks/is_free_lock.h plugin/user_locks/is_used_lock.h plugin/user_locks/key.h plugin/user_locks/lock_storage.h plugin/user_locks/lock.h plugin/user_locks/locks.h plugin/user_locks/module.h plugin/user_locks/observer.h plugin/user_locks/release_barrier.h plugin/user_locks/release_lock.h plugin/user_locks/release_locks.h plugin/user_locks/release_wait.h plugin/user_locks/signal.h plugin/user_locks/user_locks_dictionary.h plugin/user_locks/wait.h plugin/user_locks/wait_for_lock.h plugin/user_locks/wait_until.h
EXTRA_DIST += plugin/user_locks/tests

plugin_user_locks_dir=${top_srcdir}/plugin/user_locks
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/user_locks/plugin.ini  plugin/user_locks/barrier_dictionary.cc plugin/user_locks/barriers.cc plugin/user_locks/create_barrier.cc plugin/user_locks/get_lock.cc plugin/user_locks/get_locks.cc plugin/user_locks/is_free_lock.cc plugin/user_locks/is_used_lock.cc plugin/user_locks/key.cc plugin/user_locks/locks.cc plugin/user_locks/module.cc plugin/user_locks/release_barrier.cc plugin/user_locks/release_lock.cc plugin/user_locks/release_locks.cc plugin/user_locks/release_wait.cc plugin/user_locks/signal.cc plugin/user_locks/user_locks_dictionary.cc plugin/user_locks/wait.cc plugin/user_locks/wait_for_lock.cc plugin/user_locks/wait_until.cc
if BUILD_USER_LOCKS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libuser_locks_plugin.la
  plugin_libuser_locks_plugin_la_LIBADD=
  plugin_libuser_locks_plugin_la_DEPENDENCIES=
  plugin_libuser_locks_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libuser_locks_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=user_locks -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='User Locks.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libuser_locks_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libuser_locks_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libuser_locks_plugin_la_SOURCES= plugin/user_locks/barrier_dictionary.cc plugin/user_locks/barriers.cc plugin/user_locks/create_barrier.cc plugin/user_locks/get_lock.cc plugin/user_locks/get_locks.cc plugin/user_locks/is_free_lock.cc plugin/user_locks/is_used_lock.cc plugin/user_locks/key.cc plugin/user_locks/locks.cc plugin/user_locks/module.cc plugin/user_locks/release_barrier.cc plugin/user_locks/release_lock.cc plugin/user_locks/release_locks.cc plugin/user_locks/release_wait.cc plugin/user_locks/signal.cc plugin/user_locks/user_locks_dictionary.cc plugin/user_locks/wait.cc plugin/user_locks/wait_for_lock.cc plugin/user_locks/wait_until.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libuser_locks_plugin.la
endif
EXTRA_DIST += plugin/user_locks/plugin.ini
if BUILD_USER_LOCKS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libuser_locks_plugin.la
  plugin_libuser_locks_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libuser_locks_plugin_la_LIBADD=
  plugin_libuser_locks_plugin_la_DEPENDENCIES=
  plugin_libuser_locks_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=user_locks -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='User Locks.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libuser_locks_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libuser_locks_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libuser_locks_plugin_la_SOURCES= plugin/user_locks/barrier_dictionary.cc plugin/user_locks/barriers.cc plugin/user_locks/create_barrier.cc plugin/user_locks/get_lock.cc plugin/user_locks/get_locks.cc plugin/user_locks/is_free_lock.cc plugin/user_locks/is_used_lock.cc plugin/user_locks/key.cc plugin/user_locks/locks.cc plugin/user_locks/module.cc plugin/user_locks/release_barrier.cc plugin/user_locks/release_lock.cc plugin/user_locks/release_locks.cc plugin/user_locks/release_wait.cc plugin/user_locks/signal.cc plugin/user_locks/user_locks_dictionary.cc plugin/user_locks/wait.cc plugin/user_locks/wait_for_lock.cc plugin/user_locks/wait_until.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/utility_dictionary/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/utility_dictionary/plugin.ini:

noinst_HEADERS +=  plugin/utility_dictionary/counter.h plugin/utility_dictionary/dictionary.h plugin/utility_dictionary/environmental.h plugin/utility_dictionary/random_number.h plugin/utility_dictionary/random_string.h
EXTRA_DIST += plugin/utility_dictionary/tests

plugin_utility_dictionary_dir=${top_srcdir}/plugin/utility_dictionary
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/utility_dictionary/plugin.ini  plugin/utility_dictionary/counter.cc plugin/utility_dictionary/dictionary.cc plugin/utility_dictionary/environmental.cc plugin/utility_dictionary/random_number.cc plugin/utility_dictionary/random_string.cc
if BUILD_UTILITY_DICTIONARY_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libutility_dictionary_plugin.la
  plugin_libutility_dictionary_plugin_la_LIBADD=
  plugin_libutility_dictionary_plugin_la_DEPENDENCIES=
  plugin_libutility_dictionary_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libutility_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=utility_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Utility data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libutility_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libutility_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libutility_dictionary_plugin_la_SOURCES= plugin/utility_dictionary/counter.cc plugin/utility_dictionary/dictionary.cc plugin/utility_dictionary/environmental.cc plugin/utility_dictionary/random_number.cc plugin/utility_dictionary/random_string.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libutility_dictionary_plugin.la
endif
EXTRA_DIST += plugin/utility_dictionary/plugin.ini
if BUILD_UTILITY_DICTIONARY_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libutility_dictionary_plugin.la
  plugin_libutility_dictionary_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libutility_dictionary_plugin_la_LIBADD=
  plugin_libutility_dictionary_plugin_la_DEPENDENCIES=
  plugin_libutility_dictionary_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=utility_dictionary -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Utility data dictionary tables.' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libutility_dictionary_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libutility_dictionary_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libutility_dictionary_plugin_la_SOURCES= plugin/utility_dictionary/counter.cc plugin/utility_dictionary/dictionary.cc plugin/utility_dictionary/environmental.cc plugin/utility_dictionary/random_number.cc plugin/utility_dictionary/random_string.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/utility_functions/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/utility_functions/plugin.ini:

noinst_HEADERS +=  plugin/utility_functions/assert.h plugin/utility_functions/bit_count.h plugin/utility_functions/catalog.h plugin/utility_functions/execute.h plugin/utility_functions/functions.h plugin/utility_functions/global_read_lock.h plugin/utility_functions/kill.h plugin/utility_functions/result_type.h plugin/utility_functions/schema.h plugin/utility_functions/typeof.h plugin/utility_functions/user.h
EXTRA_DIST += plugin/utility_functions/tests

plugin_utility_functions_dir=${top_srcdir}/plugin/utility_functions
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/utility_functions/plugin.ini  plugin/utility_functions/assert.cc plugin/utility_functions/bit_count.cc plugin/utility_functions/catalog.cc plugin/utility_functions/execute.cc plugin/utility_functions/functions.cc plugin/utility_functions/global_read_lock.cc plugin/utility_functions/kill.cc plugin/utility_functions/result_type.cc plugin/utility_functions/schema.cc plugin/utility_functions/typeof.cc plugin/utility_functions/user.cc
if BUILD_UTILITY_FUNCTIONS_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libutility_functions_plugin.la
  plugin_libutility_functions_plugin_la_LIBADD=
  plugin_libutility_functions_plugin_la_DEPENDENCIES=
  plugin_libutility_functions_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libutility_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=utility_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Utility Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libutility_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libutility_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libutility_functions_plugin_la_SOURCES= plugin/utility_functions/assert.cc plugin/utility_functions/bit_count.cc plugin/utility_functions/catalog.cc plugin/utility_functions/execute.cc plugin/utility_functions/functions.cc plugin/utility_functions/global_read_lock.cc plugin/utility_functions/kill.cc plugin/utility_functions/result_type.cc plugin/utility_functions/schema.cc plugin/utility_functions/typeof.cc plugin/utility_functions/user.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libutility_functions_plugin.la
endif
EXTRA_DIST += plugin/utility_functions/plugin.ini
if BUILD_UTILITY_FUNCTIONS_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libutility_functions_plugin.la
  plugin_libutility_functions_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libutility_functions_plugin_la_LIBADD=
  plugin_libutility_functions_plugin_la_DEPENDENCIES=
  plugin_libutility_functions_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=utility_functions -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='Utility Functions' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libutility_functions_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libutility_functions_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libutility_functions_plugin_la_SOURCES= plugin/utility_functions/assert.cc plugin/utility_functions/bit_count.cc plugin/utility_functions/catalog.cc plugin/utility_functions/execute.cc plugin/utility_functions/functions.cc plugin/utility_functions/global_read_lock.cc plugin/utility_functions/kill.cc plugin/utility_functions/result_type.cc plugin/utility_functions/schema.cc plugin/utility_functions/typeof.cc plugin/utility_functions/user.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/uuid_function/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/uuid_function/plugin.ini:


plugin_uuid_function_dir=${top_srcdir}/plugin/uuid_function
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/uuid_function/plugin.ini  plugin/uuid_function/uuid_function.cc
if BUILD_UUID_FUNCTION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libuuid_function_plugin.la
  plugin_libuuid_function_plugin_la_LIBADD=
  plugin_libuuid_function_plugin_la_DEPENDENCIES=
  plugin_libuuid_function_plugin_la_LDFLAGS=$(AM_LDFLAGS) ${LTLIBUUID} $(GCOV_LIBS)
  plugin_libuuid_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=uuid_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UUID() plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libuuid_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libuuid_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libuuid_function_plugin_la_SOURCES= plugin/uuid_function/uuid_function.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libuuid_function_plugin.la
endif
EXTRA_DIST += plugin/uuid_function/plugin.ini
if BUILD_UUID_FUNCTION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libuuid_function_plugin.la
  plugin_libuuid_function_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS) ${LTLIBUUID} $(GCOV_LIBS)
  plugin_libuuid_function_plugin_la_LIBADD=
  plugin_libuuid_function_plugin_la_DEPENDENCIES=
  plugin_libuuid_function_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=uuid_function -DPANDORA_MODULE_AUTHOR='' -DPANDORA_MODULE_TITLE='UUID() plugin' -DPANDORA_MODULE_VERSION='2011.03.2238' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libuuid_function_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libuuid_function_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libuuid_function_plugin_la_SOURCES= plugin/uuid_function/uuid_function.cc
  check_PROGRAMS += 
endif

EXTRA_DIST += plugin/version/plugin.ini

# Prevent errors when a plugin dir is removed
plugin/version/plugin.ini:


plugin_version_dir=${top_srcdir}/plugin/version
# Include sources in EXTRA_DIST because we might not build this, but we
# still want the sources to wind up in a tarball
EXTRA_DIST += plugin/version/plugin.ini  plugin/version/versionudf.cc
if BUILD_VERSION_PLUGIN_STATIC
  noinst_LTLIBRARIES+=plugin/libversion_plugin.la
  plugin_libversion_plugin_la_LIBADD=
  plugin_libversion_plugin_la_DEPENDENCIES=
  plugin_libversion_plugin_la_LDFLAGS=$(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libversion_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_MODULE_NAME=version -DPANDORA_MODULE_AUTHOR='Devananda van der Veen' -DPANDORA_MODULE_TITLE='version UDF' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libversion_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libversion_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libversion_plugin_la_SOURCES= plugin/version/versionudf.cc
  check_PROGRAMS += 
  PANDORA_DYNAMIC_LDADDS+=${top_builddir}/plugin/libversion_plugin.la
endif
EXTRA_DIST += plugin/version/plugin.ini
if BUILD_VERSION_PLUGIN_SHARED
  pkgplugin_LTLIBRARIES+=plugin/libversion_plugin.la
  plugin_libversion_plugin_la_LDFLAGS=-avoid-version -rpath $(pkgplugindir) $(AM_LDFLAGS)  $(GCOV_LIBS)
  plugin_libversion_plugin_la_LIBADD=
  plugin_libversion_plugin_la_DEPENDENCIES=
  plugin_libversion_plugin_la_CPPFLAGS=$(AM_CPPFLAGS) -DPANDORA_DYNAMIC_PLUGIN -DPANDORA_MODULE_NAME=version -DPANDORA_MODULE_AUTHOR='Devananda van der Veen' -DPANDORA_MODULE_TITLE='version UDF' -DPANDORA_MODULE_VERSION='1.0' -DPANDORA_MODULE_LICENSE=PLUGIN_LICENSE_GPL -DPANDORA_MODULE_DEPENDENCIES=''  
  plugin_libversion_plugin_la_CXXFLAGS=$(AM_CXXFLAGS)  -DBUILDING_DRIZZLED
  plugin_libversion_plugin_la_CFLAGS=$(AM_CFLAGS)  
  plugin_libversion_plugin_la_SOURCES= plugin/version/versionudf.cc
  check_PROGRAMS += 
endif
