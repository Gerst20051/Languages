drop table if exists t1,t2;
drop table if exists t1aa,t2aa;
drop database if exists mysqltest;
drop database if exists mysqltest1;
create table t1 (a int not null primary key, b int not null,c int not null, key(b,c));
insert into t1 values (1,2,2),(2,2,3),(3,2,4),(4,2,4);
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
check table t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
insert into t1 values (5,5,5);
check table t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
show index from t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	show_indexes	SHOW_INDEXES	Table	Table	8	1024	2	N	4097	0	45
def	data_dictionary	show_indexes	SHOW_INDEXES	Unique	Unique	13	1	1	N	36897	0	63
def	data_dictionary	show_indexes	SHOW_INDEXES	Key_name	Key_name	8	1024	7	N	4097	0	45
def	data_dictionary	show_indexes	SHOW_INDEXES	Seq_in_index	Seq_in_index	5	21	1	N	36865	0	63
def	data_dictionary	show_indexes	SHOW_INDEXES	Column_name	Column_name	8	1024	1	N	4097	0	45
Table	Unique	Key_name	Seq_in_index	Column_name
t1	YES	PRIMARY	1	a
t1	NO	b	1	b
t1	NO	b	2	c
insert into t1 values (5,5,5);
ERROR 23000: Duplicate entry '5' for key 'PRIMARY'
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
alter table t1 engine="default";
alter table t1 engine="default";
drop table t1;
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
show variables like "server_id%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_NAME	Variable_name	8	1024	9	N	4097	0	45
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_VALUE	Value	8	4096	1	N	4097	0	45
Variable_name	Value
server_id	1
show variables like "SERVER_id%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_NAME	Variable_name	8	1024	9	N	4097	0	45
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_VALUE	Value	8	4096	1	N	4097	0	45
Variable_name	Value
server_id	1
show variables like "this_doesn't_exists%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_NAME	Variable_name	8	1024	0	N	4097	0	45
def	data_dictionary	session_variables	SESSION_VARIABLES	VARIABLE_VALUE	Value	8	4096	0	N	4097	0	45
Variable_name	Value
show table status from test like "this_doesn't_exists%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Session	Session	5	21	0	N	36865	0	63
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Schema	Schema	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Name	Name	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Type	Type	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Engine	Engine	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Version	Version	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Rows	Rows	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Avg_row_length	Avg_row_length	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Table_size	Table_size	8	1024	0	N	4097	0	45
def	data_dictionary	show_table_status	SHOW_TABLE_STATUS	Auto_increment	Auto_increment	8	1024	0	N	4097	0	45
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
show databases;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	show_schemas	SHOW_SCHEMAS	SCHEMA_NAME	Database	8	1024	18	N	4097	0	45
Database
DATA_DICTIONARY
INFORMATION_SCHEMA
mysql
test
show databases like "test%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	show_schemas	SHOW_SCHEMAS	SCHEMA_NAME	Database (test%)	8	1024	4	N	4097	0	45
Database (test%)
test
create table t1 (f1 int not null, f2 int not null, f3 int not null, f4 int not null, primary key(f1,f2,f3,f4));
insert into t1 values (1,1,1,0),(1,1,2,0),(1,1,3,0),(1,2,1,0),(1,2,2,0),(1,2,3,0),(1,3,1,0),(1,3,2,0),(1,3,3,0),(1,1,1,1),(1,1,2,1),(1,1,3,1),(1,2,1,1),(1,2,2,1),(1,2,3,1),(1,3,1,1),(1,3,2,1),(1,3,3,1);
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
analyze table t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	7	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
show index from t1;
Table	Unique	Key_name	Seq_in_index	Column_name
t1	YES	PRIMARY	1	f1
t1	YES	PRIMARY	2	f2
t1	YES	PRIMARY	3	f3
t1	YES	PRIMARY	4	f4
show index from t1;
Table	Unique	Key_name	Seq_in_index	Column_name
t1	YES	PRIMARY	1	f1
t1	YES	PRIMARY	2	f2
t1	YES	PRIMARY	3	f3
t1	YES	PRIMARY	4	f4
drop table t1;
create temporary table t1 (a int not null);
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` INT NOT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
alter table t1 rename t2;
show create table t2;
Table	Create Table
t2	CREATE TEMPORARY TABLE `t2` (
  `a` INT NOT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
drop table t2;
create table t1 (
name char(20) default 'O''Brien' comment 'O''Brien as default',
c int not null comment 'int column',
`c-b` int comment 'name with a minus',
`space 2` int comment 'name with a space'
  ) comment = 'it\'s a table' ;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `name` VARCHAR(20) COLLATE utf8_general_ci DEFAULT 'O''Brien' COMMENT 'O''Brien as default',
  `c` INT NOT NULL COMMENT 'int column',
  `c-b` INT DEFAULT NULL COMMENT 'name with a minus',
  `space 2` INT DEFAULT NULL COMMENT 'name with a space'
) ENGINE=DEFAULT COMMENT='it''s a table' COLLATE = utf8_general_ci
show columns from t1;
Field	Type	Null	Default	Default_is_NULL	On_Update
name	VARCHAR	YES	O'Brien	NO	
c	INTEGER	NO		NO	
c-b	INTEGER	YES		YES	
space 2	INTEGER	YES		YES	
drop table t1;
create table t1 (a int not null, unique aa (a));
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` INT NOT NULL,
  UNIQUE KEY `aa` (`a`)
) ENGINE=DEFAULT COLLATE = utf8_general_ci
drop table t1;
create table t1 (a int not null, primary key (a));
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` INT NOT NULL,
  PRIMARY KEY (`a`)
) ENGINE=DEFAULT COLLATE = utf8_general_ci
drop table t1;
create temporary table t1 (a int not null, b VARCHAR(10), INDEX (b) ) COMMENT="test" ENGINE=MYISAM ROW_FORMAT=fixed;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` INT NOT NULL,
  `b` VARCHAR(10) COLLATE utf8_general_ci DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM ROW_FORMAT='fixed' COMMENT='test' COLLATE = utf8_general_ci
alter table t1 ROW_FORMAT=dynamic;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` INT NOT NULL,
  `b` VARCHAR(10) COLLATE utf8_general_ci DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM ROW_FORMAT='dynamic' COMMENT='test' COLLATE = utf8_general_ci
ALTER TABLE t1 COMMENT="", ROW_FORMAT=default;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` INT NOT NULL,
  `b` VARCHAR(10) COLLATE utf8_general_ci DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM ROW_FORMAT='default' COLLATE = utf8_general_ci
drop table t1;
create table t1 (a decimal(9,2), b decimal (9,0), e double(9,2), f double(5,0), h float(3,2), i float(3,0));
show columns from t1;
Field	Type	Null	Default	Default_is_NULL	On_Update
a	DECIMAL	YES		YES	
b	DECIMAL	YES		YES	
e	DOUBLE	YES		YES	
f	DOUBLE	YES		YES	
h	DOUBLE	YES		YES	
i	DOUBLE	YES		YES	
show columns from t1;
Field	Type	Null	Default	Default_is_NULL	On_Update
a	DECIMAL	YES		YES	
b	DECIMAL	YES		YES	
e	DOUBLE	YES		YES	
f	DOUBLE	YES		YES	
h	DOUBLE	YES		YES	
i	DOUBLE	YES		YES	
drop table t1;
create temporary table t1 (
type_int int,
type_bigint bigint,
type_decimal decimal(5,2),
type_numeric numeric(5,2),
empty_char char(0),
type_char char(2),
type_varchar varchar(10),
type_timestamp timestamp not null,
type_date date,
type_datetime datetime,
type_enum enum ('red', 'green', 'blue'),
type_set enum ('red', 'green', 'blue'),
type_blob blob,
index(type_int)
) COMMENT="test" ENGINE=MYISAM ROW_FORMAT=fixed;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `type_int` INT DEFAULT NULL,
  `type_bigint` BIGINT DEFAULT NULL,
  `type_decimal` DECIMAL(5,2) DEFAULT NULL,
  `type_numeric` DECIMAL(5,2) DEFAULT NULL,
  `empty_char` VARCHAR(0) COLLATE utf8_general_ci DEFAULT NULL,
  `type_char` VARCHAR(2) COLLATE utf8_general_ci DEFAULT NULL,
  `type_varchar` VARCHAR(10) COLLATE utf8_general_ci DEFAULT NULL,
  `type_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `type_date` DATE DEFAULT NULL,
  `type_datetime` DATETIME DEFAULT NULL,
  `type_enum` ENUM('red','green','blue') DEFAULT NULL,
  `type_set` ENUM('red','green','blue') DEFAULT NULL,
  `type_blob` BLOB,
  KEY `type_int` (`type_int`)
) ENGINE=MyISAM ROW_FORMAT='fixed' COMMENT='test' COLLATE = utf8_general_ci
insert into t1 (type_timestamp) values ("2003-02-07 10:00:01");
select * from t1;
type_int	type_bigint	type_decimal	type_numeric	empty_char	type_char	type_varchar	type_timestamp	type_date	type_datetime	type_enum	type_set	type_blob
NULL	NULL	NULL	NULL	NULL	NULL	NULL	2003-02-07 10:00:01	NULL	NULL	NULL	NULL	NULL
drop table t1;
create table t1 (a int not null);
create table t2 select max(a) from t1;
show columns from t2;
Field	Type	Null	Default	Default_is_NULL	On_Update
max(a)	INTEGER	YES		YES	
drop table t1,t2;
create table t1 (c decimal, d double, f float, r real);
show columns from t1;
Field	Type	Null	Default	Default_is_NULL	On_Update
c	DECIMAL	YES		YES	
d	DOUBLE	YES		YES	
f	DOUBLE	YES		YES	
r	DOUBLE	YES		YES	
drop table t1;
create table t1 (c decimal(3,3), d double(3,3), f float(3,3));
show columns from t1;
Field	Type	Null	Default	Default_is_NULL	On_Update
c	DECIMAL	YES		YES	
d	DOUBLE	YES		YES	
f	DOUBLE	YES		YES	
drop table t1;
CREATE TABLE ```ab``cd``` (i INT);
SHOW CREATE TABLE ```ab``cd```;
Table	Create Table
`ab`cd`	CREATE TABLE ```ab``cd``` (
  `i` INT DEFAULT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
DROP TABLE ```ab``cd```;
CREATE TABLE ```ab````cd``` (i INT);
SHOW CREATE TABLE ```ab````cd```;
Table	Create Table
`ab``cd`	CREATE TABLE ```ab````cd``` (
  `i` INT DEFAULT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
DROP TABLE ```ab````cd```;
CREATE TABLE ```a` (i INT);
SHOW CREATE TABLE ```a`;
Table	Create Table
`a	CREATE TABLE ```a` (
  `i` INT DEFAULT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
DROP TABLE ```a`;
CREATE TABLE `a.1` (i INT);
SHOW CREATE TABLE `a.1`;
Table	Create Table
a.1	CREATE TABLE `a.1` (
  `i` INT DEFAULT NULL
) ENGINE=DEFAULT COLLATE = utf8_general_ci
DROP TABLE `a.1`;
select @@max_heap_table_size;
@@max_heap_table_size
1048576
CREATE TEMPORARY TABLE t1 (
a int default NULL,
KEY a USING BTREE (a)
) ENGINE=MEMORY;
CREATE TEMPORARY TABLE t2 (
b int default NULL,
index(b)
) ENGINE=MEMORY;
CREATE TEMPORARY TABLE t3 (
a int default NULL,
b int default NULL,
KEY a USING BTREE (a),
index(b)
) ENGINE=MEMORY;
insert into t1 values (1),(2);
insert into t2 values (1),(2);
insert into t3 values (1,1),(2,2);
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
insert into t1 values (3),(4);
insert into t2 values (3),(4);
insert into t3 values (3,3),(4,4);
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
delete from t1 where a=3;
delete from t2 where b=3;
delete from t3 where a=3;
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
truncate table t1;
truncate table t2;
truncate table t3;
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
delete from t1 where a=5;
delete from t2 where b=5;
delete from t3 where a=5;
show table status;
Session	Schema	Name	Type	Engine	Version	Rows	Avg_row_length	Table_size	Auto_increment
#	test	t1	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t2	TEMPORARY	MEMORY	#	#	#	#	#
#	test	t3	TEMPORARY	MEMORY	#	#	#	#	#
drop table t1, t2, t3;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MEMORY COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING HASH (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`) USING HASH
) ENGINE=MEMORY COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MEMORY COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MyISAM COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MyISAM COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MyISAM COLLATE = utf8_general_ci
ALTER TABLE t1 ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MEMORY COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MyISAM COLLATE = utf8_general_ci
ALTER TABLE t1 ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` INT DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MEMORY COLLATE = utf8_general_ci
DROP TABLE t1;
CREATE TABLE t1(
field1 text NOT NULL,
PRIMARY KEY(field1(180))
);
show index from t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def	data_dictionary	show_indexes	SHOW_INDEXES	Table	Table	8	1024	2	N	4097	0	45
def	data_dictionary	show_indexes	SHOW_INDEXES	Unique	Unique	13	1	1	N	36897	0	63
def	data_dictionary	show_indexes	SHOW_INDEXES	Key_name	Key_name	8	1024	7	N	4097	0	45
def	data_dictionary	show_indexes	SHOW_INDEXES	Seq_in_index	Seq_in_index	5	21	1	N	36865	0	63
def	data_dictionary	show_indexes	SHOW_INDEXES	Column_name	Column_name	8	1024	6	N	4097	0	45
Table	Unique	Key_name	Seq_in_index	Column_name
t1	YES	PRIMARY	1	field1
drop table t1;
create table t1 (
c1 int NOT NULL,
c2 int NOT NULL,
PRIMARY KEY USING HASH (c1),
INDEX USING BTREE(c2)
);
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c1` INT NOT NULL,
  `c2` INT NOT NULL,
  PRIMARY KEY (`c1`) USING HASH,
  KEY `c2` (`c2`) USING BTREE
) ENGINE=DEFAULT COLLATE = utf8_general_ci
DROP TABLE t1;
SHOW TABLES FROM non_existing_database;
ERROR 42000: Unknown schema 'non_existing_database'
End of 4.1 tests
SHOW TABLES FROM no_such_database;
ERROR 42000: Unknown schema 'no_such_database'
SHOW COLUMNS FROM no_such_table;
ERROR 42S02: Unknown table 'test.no_such_table'
show variables like 'myisam_recover_options';
Variable_name	Value
End of 5.0 tests
create database `mysqlttest\1`;
create table `mysqlttest\1`.`a\b` (a int);
show tables from `mysqlttest\1`;
Tables_in_mysqlttest\1
a\b
show fields from `mysqlttest\1`.`a\b`;
Field	Type	Null	Default	Default_is_NULL	On_Update
a	INTEGER	YES		YES	
show columns from `a\b` from `mysqlttest\1`;
Field	Type	Null	Default	Default_is_NULL	On_Update
a	INTEGER	YES		YES	
show keys from `mysqlttest\1`.`a\b`;
Table	Unique	Key_name	Seq_in_index	Column_name
drop table `mysqlttest\1`.`a\b`;
drop database `mysqlttest\1`;
drop table if exists `été`;
create table `été` (field1 int);
show tables;
Tables_in_test
été
drop table `été`;
show columns from `#mysql50#????????`;
Got one of the listed errors
show innodb status;
ERROR HY000: Engine status is now stored in the data_dictionary tables, please use these instead.
End of 5.1 tests
