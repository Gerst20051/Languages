drop table if exists t1,t2,t3;
CREATE TABLE t1 (
id int DEFAULT '0' NOT NULL,
idservice int,
clee varchar(20) NOT NULL,
flag varchar(1),
KEY id (id),
PRIMARY KEY (clee)
);
INSERT INTO t1 VALUES (2,4,'6067169d','Y');
INSERT INTO t1 VALUES (2,5,'606716d1','Y');
INSERT INTO t1 VALUES (2,1,'606717c1','Y');
INSERT INTO t1 VALUES (3,1,'6067178d','Y');
INSERT INTO t1 VALUES (2,6,'60671515','Y');
INSERT INTO t1 VALUES (2,7,'60671569','Y');
INSERT INTO t1 VALUES (2,3,'dd','Y');
CREATE TABLE t2 (
id int NOT NULL auto_increment,
description varchar(40) NOT NULL,
idform varchar(40),
ordre int DEFAULT '0' NOT NULL,
image varchar(60),
PRIMARY KEY (id),
KEY id (id,ordre)
);
INSERT INTO t2 VALUES (1,'Emettre un appel d''offres','en_construction.html',10,'emettre.gif');
INSERT INTO t2 VALUES (2,'Emettre des soumissions','en_construction.html',20,'emettre.gif');
INSERT INTO t2 VALUES (7,'Liste des t2','t2_liste_form.phtml',51060,'link.gif');
INSERT INTO t2 VALUES (8,'Consulter les soumissions','consulter_soumissions.phtml',200,'link.gif');
INSERT INTO t2 VALUES (9,'Ajouter un type de materiel','typeMateriel_ajoute_form.phtml',51000,'link.gif');
INSERT INTO t2 VALUES (10,'Lister/modifier un type de materiel','typeMateriel_liste_form.phtml',51010,'link.gif');
INSERT INTO t2 VALUES (3,'Créer une fiche de client','clients_ajoute_form.phtml',40000,'link.gif');
INSERT INTO t2 VALUES (4,'Modifier des clients','en_construction.html',40010,'link.gif');
INSERT INTO t2 VALUES (5,'Effacer des clients','en_construction.html',40020,'link.gif');
INSERT INTO t2 VALUES (6,'Ajouter un service','t2_ajoute_form.phtml',51050,'link.gif');
select t1.id,t1.idservice,t2.ordre,t2.description  from t1, t2 where t1.id = 2   and t1.idservice = t2.id  order by t2.ordre;
id	idservice	ordre	description
2	1	10	Emettre un appel d'offres
2	3	40000	Créer une fiche de client
2	4	40010	Modifier des clients
2	5	40020	Effacer des clients
2	6	51050	Ajouter un service
2	7	51060	Liste des t2
drop table t1,t2;
create table t1 (first char(10),last char(10));
insert into t1 values ("Michael","Widenius");
insert into t1 values ("Allan","Larsson");
insert into t1 values ("David","Axmark");
select concat(first," ",last) as name from t1 order by name;
name
Allan Larsson
David Axmark
Michael Widenius
select concat(last," ",first) as name from t1 order by name;
name
Axmark David
Larsson Allan
Widenius Michael
drop table t1;
create table t1 (i int);
insert into t1 values(1),(2),(1),(2),(1),(2),(3);
select distinct i from t1;
i
1
2
3
select distinct i from t1 order by rand(5);
i
1
3
2
select distinct i from t1 order by i desc;
i
3
2
1
select distinct i from t1 order by 1-i;
i
3
2
1
select distinct i from t1 order by mod(i,2),i;
i
2
1
3
drop table t1;
create table t1 ( pk     int primary key, name   varchar(255) not null, number varchar(255) not null);
insert into t1 values (1, 'Gamma',     '123'), (2, 'Gamma Ext', '123a'), (3, 'Alpha',     '001'), (4, 'Beta',      '200c');
select distinct t1.name as 'Building Name',t1.number as 'Building Number' from t1 order by t1.name asc;
Building Name	Building Number
Alpha	001
Beta	200c
Gamma	123
Gamma Ext	123a
drop table t1;
create table t1 (id int not null,col1 int not null,col2 int not null,index(col1));
insert into t1 values(1,2,2),(2,2,1),(3,1,2),(4,1,1),(5,1,4),(6,2,3),(7,3,1),(8,2,4);
select * from t1 order by col1,col2;
id	col1	col2
4	1	1
3	1	2
5	1	4
2	2	1
1	2	2
6	2	3
8	2	4
7	3	1
select col1 from t1 order by id;
col1
2
2
1
1
1
2
3
2
select col1 as id from t1 order by id;
id
1
1
1
2
2
2
2
3
select concat(col1) as id from t1 order by id;
id
1
1
1
2
2
2
2
3
drop table t1;
CREATE TABLE t1 (id int auto_increment primary key,aika varchar(40),aikakentta  timestamp);
insert into t1 (aika) values ('Keskiviikko');
insert into t1 (aika) values ('Tiistai');
insert into t1 (aika) values ('Maanantai');
insert into t1 (aika) values ('Sunnuntai');
SELECT FIELD(SUBSTRING(t1.aika,1,2),'Ma','Ti','Ke','To','Pe','La','Su') AS test FROM t1 ORDER by test;
test
1
2
3
7
drop table t1;
CREATE TABLE t1
(
a          int       NOT NULL,
b          int       NOT NULL,
c          int       NOT NULL,
UNIQUE(a),
INDEX(b),
INDEX(c)
);
CREATE TABLE t2
(
c          int       NOT NULL,
i          int       NOT NULL,
INDEX(c)
);
CREATE TABLE t3
(
c          int       NOT NULL,
v          varchar(64),
INDEX(c)
);
INSERT INTO t1 VALUES (1,1,1);
INSERT INTO t1 VALUES (2,1,2);
INSERT INTO t1 VALUES (3,2,1);
INSERT INTO t1 VALUES (4,2,2);
INSERT INTO t2 VALUES (1,50);
INSERT INTO t2 VALUES (2,25);
INSERT INTO t3 VALUES (1,'123 Park Place');
INSERT INTO t3 VALUES (2,'453 Boardwalk');
SELECT    a,b,if(b = 1,i,if(b = 2,v,''))
FROM      t1
LEFT JOIN t2 USING(c)
LEFT JOIN t3 ON t3.c = t1.c;
a	b	if(b = 1,i,if(b = 2,v,''))
1	1	50
2	1	25
3	2	123 Park Place
4	2	453 Boardwalk
SELECT    a,b,if(b = 1,i,if(b = 2,v,''))
FROM      t1
LEFT JOIN t2 ON t1.c = t2.c
LEFT JOIN t3 ON t3.c = t1.c;
a	b	if(b = 1,i,if(b = 2,v,''))
1	1	50
2	1	25
3	2	123 Park Place
4	2	453 Boardwalk
SELECT    a,b,if(b = 1,i,if(b = 2,v,''))
FROM      t1
LEFT JOIN t2 USING(c)
LEFT JOIN t3 ON t3.c = t1.c
ORDER BY a;
a	b	if(b = 1,i,if(b = 2,v,''))
1	1	50
2	1	25
3	2	123 Park Place
4	2	453 Boardwalk
SELECT    a,b,if(b = 1,i,if(b = 2,v,''))
FROM      t1
LEFT JOIN t2 ON t1.c = t2.c
LEFT JOIN t3 ON t3.c = t1.c
ORDER BY a;
a	b	if(b = 1,i,if(b = 2,v,''))
1	1	50
2	1	25
3	2	123 Park Place
4	2	453 Boardwalk
drop table t1,t2,t3;
create table t1 (ID int not null primary key, TransactionID int not null);
insert into t1 (ID, TransactionID) values  (1,  87), (2,  89), (3,  92), (4,  94), (5,  486), (6,  490), (7,  753), (9,  828), (10, 832), (11, 834), (12, 840);
create table t2 (ID int not null primary key, GroupID int not null);
insert into t2 (ID, GroupID) values (87,  87), (89,  89), (92,  92), (94,  94), (486, 486), (490, 490),(753, 753), (828, 828), (832, 832), (834, 834), (840, 840);
create table t3 (ID int not null primary key, DateOfAction date not null);
insert into t3 (ID, DateOfAction) values  (87,  '1999-07-19'), (89,  '1999-07-19'), (92,  '1999-07-19'), (94,  '1999-07-19'), (486, '1999-07-18'), (490, '2000-03-27'), (753, '2000-03-28'), (828, '1999-07-27'), (832, '1999-07-27'),(834, '1999-07-27'), (840, '1999-07-27');
select t3.DateOfAction, t1.TransactionID from t1 join t2 join t3 where t2.ID = t1.TransactionID and t3.ID = t2.GroupID order by t3.DateOfAction, t1.TransactionID;
DateOfAction	TransactionID
1999-07-18	486
1999-07-19	87
1999-07-19	89
1999-07-19	92
1999-07-19	94
1999-07-27	828
1999-07-27	832
1999-07-27	834
1999-07-27	840
2000-03-27	490
2000-03-28	753
select t3.DateOfAction, t1.TransactionID from t1 join t2 join t3 where t2.ID = t1.TransactionID and t3.ID = t2.GroupID order by t1.TransactionID,t3.DateOfAction;
DateOfAction	TransactionID
1999-07-19	87
1999-07-19	89
1999-07-19	92
1999-07-19	94
1999-07-18	486
2000-03-27	490
2000-03-28	753
1999-07-27	828
1999-07-27	832
1999-07-27	834
1999-07-27	840
drop table t1,t2,t3;
CREATE TEMPORARY TABLE t1 (
member_id int NOT NULL auto_increment,
inschrijf_datum varchar(20) NOT NULL default '',
lastchange_datum varchar(20) NOT NULL default '',
nickname varchar(20) NOT NULL default '',
password varchar(8) NOT NULL default '',
voornaam varchar(30) NOT NULL default '',
tussenvoegsels varchar(10) NOT NULL default '',
achternaam varchar(50) NOT NULL default '',
straat varchar(100) NOT NULL default '',
postcode varchar(10) NOT NULL default '',
wijk varchar(40) NOT NULL default '',
plaats varchar(50) NOT NULL default '',
telefoon varchar(10) NOT NULL default '',
geboortedatum date,
geslacht varchar(5) NOT NULL default '',
email varchar(80) NOT NULL default '',
uin varchar(15) NOT NULL default '',
homepage varchar(100) NOT NULL default '',
internet varchar(15) NOT NULL default '',
scherk varchar(30) NOT NULL default '',
favo_boek varchar(50) NOT NULL default '',
favo_tijdschrift varchar(50) NOT NULL default '',
favo_tv varchar(50) NOT NULL default '',
favo_eten varchar(50) NOT NULL default '',
favo_muziek varchar(30) NOT NULL default '',
info text NOT NULL default '',
ipnr varchar(30) NOT NULL default '',
PRIMARY KEY  (member_id)
) ENGINE=MyISAM;
insert into t1 (member_id) values (1),(2),(3);
select member_id, nickname, voornaam FROM t1
ORDER by lastchange_datum DESC LIMIT 2;
member_id	nickname	voornaam
1		
2		
drop table t1;
create table t1 (a int not null, b int, c varchar(10), key (a, b, c));
insert into t1 values (1, NULL, NULL), (1, NULL, 'b'), (1, 1, NULL), (1, 1, 'b'), (1, 1, 'b'), (2, 1, 'a'), (2, 1, 'b'), (2, 2, 'a'), (2, 2, 'b'), (2, 3, 'c'),(1,3,'b');
explain select * from t1 where (a = 1 and b is null and c = 'b') or (a > 2) order by a desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	a	a	52	NULL	11	Using where; Using index
select * from t1 where (a = 1 and b is null and c = 'b') or (a > 2) order by a desc;
a	b	c
1	NULL	b
explain select * from t1 where a >= 1 and a < 3 order by a desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	4	NULL	10	Using where; Using index
select * from t1 where a >= 1 and a < 3 order by a desc;
a	b	c
2	3	c
2	2	b
2	2	a
2	1	b
2	1	a
1	3	b
1	1	b
1	1	b
1	1	NULL
1	NULL	b
1	NULL	NULL
explain select * from t1 where a = 1 order by a desc, b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	a	a	4	const	6	Using where; Using index
select * from t1 where a = 1 order by a desc, b desc;
a	b	c
1	3	b
1	1	b
1	1	b
1	1	NULL
1	NULL	b
1	NULL	NULL
explain select * from t1 where a = 1 and b is null order by a desc, b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	a	a	9	const,const	2	Using where; Using index; Using filesort
select * from t1 where a = 1 and b is null order by a desc, b desc;
a	b	c
1	NULL	NULL
1	NULL	b
explain select * from t1 where a >= 1 and a < 3 and b >0 order by a desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	9	NULL	8	Using where; Using index
explain select * from t1 where a = 2 and b >0 order by a desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	9	NULL	5	Using where; Using index
explain select * from t1 where a = 2 and b is null order by a desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	a	a	9	const,const	1	Using where; Using index; Using filesort
explain select * from t1 where a = 2 and (b is null or b > 0) order by a
desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	9	NULL	6	Using where; Using index
explain select * from t1 where a = 2 and b > 0 order by a desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	9	NULL	5	Using where; Using index
explain select * from t1 where a = 2 and b < 2 order by a desc,b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	9	NULL	1	Using where; Using index
explain select * from t1 where a = 1 order by b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	a	a	4	const	6	Using where; Using index
select * from t1 where a = 1 order by b desc;
a	b	c
1	3	b
1	1	b
1	1	b
1	1	NULL
1	NULL	b
1	NULL	NULL
delete from t1 WHERE b IS NULL OR c IS NULL;
alter table t1 modify b bigint not null, modify c varchar(100) not null;
explain select * from t1 order by a, b, c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	a	414	NULL	8	Using index
select * from t1 order by a, b, c;
a	b	c
1	1	b
1	1	b
1	3	b
2	1	a
2	1	b
2	2	a
2	2	b
2	3	c
explain select * from t1 order by a desc, b desc, c desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	a	414	NULL	8	Using index
select * from t1 order by a desc, b desc, c desc;
a	b	c
2	3	c
2	2	b
2	2	a
2	1	b
2	1	a
1	3	b
1	1	b
1	1	b
explain select * from t1 where (a = 1 and b = 1 and c = 'b') or (a > 2) order by a desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	414	NULL	3	Using where; Using index
select * from t1 where (a = 1 and b = 1 and c = 'b') or (a > 2) order by a desc;
a	b	c
1	1	b
1	1	b
explain select * from t1 where a < 2 and b <= 1 order by a desc, b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	4	NULL	3	Using where; Using index
select * from t1 where a < 2 and b <= 1 order by a desc, b desc;
a	b	c
1	1	b
1	1	b
select count(*) from t1 where a < 5 and b > 0;
count(*)
8
select * from t1 where a < 5 and b > 0 order by a desc,b desc;
a	b	c
2	3	c
2	2	b
2	2	a
2	1	b
2	1	a
1	3	b
1	1	b
1	1	b
explain select * from t1 where a between 1 and 3 and b <= 1 order by a desc, b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	a	a	414	NULL	8	Using where; Using index
select * from t1 where a between 1 and 3 and b <= 1 order by a desc, b desc;
a	b	c
2	1	b
2	1	a
1	1	b
1	1	b
explain select * from t1 where a between 0 and 1 order by a desc, b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	a	a	4	NULL	3	Using where; Using index
select * from t1 where a between 0 and 1 order by a desc, b desc;
a	b	c
1	3	b
1	1	b
1	1	b
drop table t1;
CREATE TEMPORARY TABLE t1 (
gid int NOT NULL auto_increment,
cid int NOT NULL default '0',
PRIMARY KEY  (gid),
KEY component_id (cid)
) ENGINE=MyISAM;
INSERT INTO t1 VALUES (103853,108),(103867,108),(103962,108),(104505,108),(104619,108),(104620,108);
ALTER TABLE t1 add skr int default 42 not null;
CREATE TEMPORARY TABLE t2 (
gid int NOT NULL default '0',
uid int NOT NULL default '1',
sid int NOT NULL default '1',
PRIMARY KEY  (gid),
KEY uid (uid),
KEY status_id (sid)
) ENGINE=MyISAM;
INSERT INTO t2 VALUES (103853,250,5),(103867,27,5),(103962,27,5),(104505,117,5),(104619,75,5),(104620,15,5);
CREATE TEMPORARY TABLE t3 (
uid int NOT NULL auto_increment,
PRIMARY KEY  (uid)
) ENGINE=MyISAM;
INSERT INTO t3 VALUES (1),(15),(27),(75),(117),(250);
ALTER TABLE t3 add skr int default 42 not null;
select t1.gid, t2.sid, t3.uid from t2, t1, t3 where t2.gid = t1.gid and t2.uid = t3.uid order by t3.uid, t1.gid;
gid	sid	uid
104620	5	15
103867	5	27
103962	5	27
104619	5	75
104505	5	117
103853	5	250
select t1.gid, t2.sid, t3.uid from t3, t2, t1 where t2.gid = t1.gid and t2.uid = t3.uid order by t3.uid, t1.gid;
gid	sid	uid
104620	5	15
103867	5	27
103962	5	27
104619	5	75
104505	5	117
103853	5	250
select t1.gid, t2.sid, t3.uid from t3, t2, t1 where t2.gid = t1.gid and t2.uid = t3.uid order by t1.gid, t3.uid;
gid	sid	uid
103853	5	250
103867	5	27
103962	5	27
104505	5	117
104619	5	75
104620	5	15
SELECT t1.gid, t3.uid from t1, t3 where t1.gid = t3.uid order by t1.gid,t3.skr;
gid	uid
SELECT t1.gid, t2.sid, t3.uid from t2, t1, t3 where t2.gid = t1.gid and t2.uid = t3.uid order by t3.uid, t1.gid;
gid	sid	uid
104620	5	15
103867	5	27
103962	5	27
104619	5	75
104505	5	117
103853	5	250
SELECT t1.gid, t3.uid from t1, t3 where t1.gid = t3.uid order by t3.skr,t1.gid;
gid	uid
SELECT t1.gid, t3.uid from t1, t3 where t1.skr = t3.uid order by t1.gid,t3.skr;
gid	uid
drop table t1,t2,t3;
CREATE TABLE t1 (
`titre` char(80) NOT NULL default '',
`numeropost` int NOT NULL auto_increment,
`date` datetime,
`auteur` char(35) NOT NULL default '',
`icone` int NOT NULL default '0',
`lastauteur` char(35) NOT NULL default '',
`nbrep` int NOT NULL default '0',
`dest` char(35) NOT NULL default '',
`lu` int NOT NULL default '0',
`vue` int NOT NULL default '0',
`ludest` int NOT NULL default '0',
`ouvert` int NOT NULL default '1',
PRIMARY KEY  (`numeropost`),
KEY `date` (`date`),
KEY `dest` (`dest`,`ludest`),
KEY `auteur` (`auteur`,`lu`),
KEY `auteur_2` (`auteur`,`date`),
KEY `dest_2` (`dest`,`date`)
);
CREATE TABLE t2 (
`numeropost` int NOT NULL default '0',
`pseudo` char(35) NOT NULL default '',
PRIMARY KEY  (`numeropost`,`pseudo`),
KEY `pseudo` (`pseudo`)
);
INSERT INTO t1 (titre,auteur,dest) VALUES ('test','joce','bug');
INSERT INTO t2 (numeropost,pseudo) VALUES (1,'joce'),(1,'bug');
SELECT titre,t1.numeropost,auteur,icone,nbrep,0,date,vue,ouvert,lastauteur,dest FROM t2 LEFT JOIN t1 USING(numeropost) WHERE t2.pseudo='joce' ORDER BY date DESC LIMIT 0,30;
titre	numeropost	auteur	icone	nbrep	0	date	vue	ouvert	lastauteur	dest
test	1	joce	0	0	0	NULL	0	1		bug
SELECT titre,numeropost,auteur,icone,nbrep,0,date,vue,ouvert,lastauteur,dest FROM t2 LEFT JOIN t1 USING(numeropost) WHERE t2.pseudo='joce' ORDER BY date DESC LIMIT 0,30;
titre	numeropost	auteur	icone	nbrep	0	date	vue	ouvert	lastauteur	dest
test	1	joce	0	0	0	NULL	0	1		bug
SELECT titre,t1.numeropost,auteur,icone,nbrep,'0',date,vue,ouvert,lastauteur,dest FROM t2 LEFT JOIN t1 USING(numeropost) WHERE t2.pseudo='joce' ORDER BY date DESC LIMIT 0,30;
titre	numeropost	auteur	icone	nbrep	0	date	vue	ouvert	lastauteur	dest
test	1	joce	0	0	0	NULL	0	1		bug
SELECT titre,numeropost,auteur,icone,nbrep,'0',date,vue,ouvert,lastauteur,dest FROM t2 LEFT JOIN t1 USING(numeropost) WHERE t2.pseudo='joce' ORDER BY date DESC LIMIT 0,30;
titre	numeropost	auteur	icone	nbrep	0	date	vue	ouvert	lastauteur	dest
test	1	joce	0	0	0	NULL	0	1		bug
drop table t1,t2;
CREATE TABLE t1 (a int, b int);
INSERT INTO t1 VALUES (1, 2);
INSERT INTO t1 VALUES (3, 4);
INSERT INTO t1 VALUES (5, NULL);
SELECT * FROM t1 ORDER BY b;
a	b
5	NULL
1	2
3	4
SELECT * FROM t1 ORDER BY b DESC;
a	b
3	4
1	2
5	NULL
SELECT * FROM t1 ORDER BY (a + b);
a	b
5	NULL
1	2
3	4
SELECT * FROM t1 ORDER BY (a + b) DESC;
a	b
3	4
1	2
5	NULL
DROP TABLE t1;
create table t1(id int not null auto_increment primary key, t char(12));
select id,t from t1 force index (primary) order by id;
id	t
1	1000
2	999
3	998
4	997
5	996
6	995
7	994
8	993
9	992
10	991
11	990
12	989
13	988
14	987
15	986
16	985
17	984
18	983
19	982
20	981
21	980
22	979
23	978
24	977
25	976
26	975
27	974
28	973
29	972
30	971
31	970
32	969
33	968
34	967
35	966
36	965
37	964
38	963
39	962
40	961
41	960
42	959
43	958
44	957
45	956
46	955
47	954
48	953
49	952
50	951
51	950
52	949
53	948
54	947
55	946
56	945
57	944
58	943
59	942
60	941
61	940
62	939
63	938
64	937
65	936
66	935
67	934
68	933
69	932
70	931
71	930
72	929
73	928
74	927
75	926
76	925
77	924
78	923
79	922
80	921
81	920
82	919
83	918
84	917
85	916
86	915
87	914
88	913
89	912
90	911
91	910
92	909
93	908
94	907
95	906
96	905
97	904
98	903
99	902
100	901
101	900
102	899
103	898
104	897
105	896
106	895
107	894
108	893
109	892
110	891
111	890
112	889
113	888
114	887
115	886
116	885
117	884
118	883
119	882
120	881
121	880
122	879
123	878
124	877
125	876
126	875
127	874
128	873
129	872
130	871
131	870
132	869
133	868
134	867
135	866
136	865
137	864
138	863
139	862
140	861
141	860
142	859
143	858
144	857
145	856
146	855
147	854
148	853
149	852
150	851
151	850
152	849
153	848
154	847
155	846
156	845
157	844
158	843
159	842
160	841
161	840
162	839
163	838
164	837
165	836
166	835
167	834
168	833
169	832
170	831
171	830
172	829
173	828
174	827
175	826
176	825
177	824
178	823
179	822
180	821
181	820
182	819
183	818
184	817
185	816
186	815
187	814
188	813
189	812
190	811
191	810
192	809
193	808
194	807
195	806
196	805
197	804
198	803
199	802
200	801
201	800
202	799
203	798
204	797
205	796
206	795
207	794
208	793
209	792
210	791
211	790
212	789
213	788
214	787
215	786
216	785
217	784
218	783
219	782
220	781
221	780
222	779
223	778
224	777
225	776
226	775
227	774
228	773
229	772
230	771
231	770
232	769
233	768
234	767
235	766
236	765
237	764
238	763
239	762
240	761
241	760
242	759
243	758
244	757
245	756
246	755
247	754
248	753
249	752
250	751
251	750
252	749
253	748
254	747
255	746
256	745
257	744
258	743
259	742
260	741
261	740
262	739
263	738
264	737
265	736
266	735
267	734
268	733
269	732
270	731
271	730
272	729
273	728
274	727
275	726
276	725
277	724
278	723
279	722
280	721
281	720
282	719
283	718
284	717
285	716
286	715
287	714
288	713
289	712
290	711
291	710
292	709
293	708
294	707
295	706
296	705
297	704
298	703
299	702
300	701
301	700
302	699
303	698
304	697
305	696
306	695
307	694
308	693
309	692
310	691
311	690
312	689
313	688
314	687
315	686
316	685
317	684
318	683
319	682
320	681
321	680
322	679
323	678
324	677
325	676
326	675
327	674
328	673
329	672
330	671
331	670
332	669
333	668
334	667
335	666
336	665
337	664
338	663
339	662
340	661
341	660
342	659
343	658
344	657
345	656
346	655
347	654
348	653
349	652
350	651
351	650
352	649
353	648
354	647
355	646
356	645
357	644
358	643
359	642
360	641
361	640
362	639
363	638
364	637
365	636
366	635
367	634
368	633
369	632
370	631
371	630
372	629
373	628
374	627
375	626
376	625
377	624
378	623
379	622
380	621
381	620
382	619
383	618
384	617
385	616
386	615
387	614
388	613
389	612
390	611
391	610
392	609
393	608
394	607
395	606
396	605
397	604
398	603
399	602
400	601
401	600
402	599
403	598
404	597
405	596
406	595
407	594
408	593
409	592
410	591
411	590
412	589
413	588
414	587
415	586
416	585
417	584
418	583
419	582
420	581
421	580
422	579
423	578
424	577
425	576
426	575
427	574
428	573
429	572
430	571
431	570
432	569
433	568
434	567
435	566
436	565
437	564
438	563
439	562
440	561
441	560
442	559
443	558
444	557
445	556
446	555
447	554
448	553
449	552
450	551
451	550
452	549
453	548
454	547
455	546
456	545
457	544
458	543
459	542
460	541
461	540
462	539
463	538
464	537
465	536
466	535
467	534
468	533
469	532
470	531
471	530
472	529
473	528
474	527
475	526
476	525
477	524
478	523
479	522
480	521
481	520
482	519
483	518
484	517
485	516
486	515
487	514
488	513
489	512
490	511
491	510
492	509
493	508
494	507
495	506
496	505
497	504
498	503
499	502
500	501
501	500
502	499
503	498
504	497
505	496
506	495
507	494
508	493
509	492
510	491
511	490
512	489
513	488
514	487
515	486
516	485
517	484
518	483
519	482
520	481
521	480
522	479
523	478
524	477
525	476
526	475
527	474
528	473
529	472
530	471
531	470
532	469
533	468
534	467
535	466
536	465
537	464
538	463
539	462
540	461
541	460
542	459
543	458
544	457
545	456
546	455
547	454
548	453
549	452
550	451
551	450
552	449
553	448
554	447
555	446
556	445
557	444
558	443
559	442
560	441
561	440
562	439
563	438
564	437
565	436
566	435
567	434
568	433
569	432
570	431
571	430
572	429
573	428
574	427
575	426
576	425
577	424
578	423
579	422
580	421
581	420
582	419
583	418
584	417
585	416
586	415
587	414
588	413
589	412
590	411
591	410
592	409
593	408
594	407
595	406
596	405
597	404
598	403
599	402
600	401
601	400
602	399
603	398
604	397
605	396
606	395
607	394
608	393
609	392
610	391
611	390
612	389
613	388
614	387
615	386
616	385
617	384
618	383
619	382
620	381
621	380
622	379
623	378
624	377
625	376
626	375
627	374
628	373
629	372
630	371
631	370
632	369
633	368
634	367
635	366
636	365
637	364
638	363
639	362
640	361
641	360
642	359
643	358
644	357
645	356
646	355
647	354
648	353
649	352
650	351
651	350
652	349
653	348
654	347
655	346
656	345
657	344
658	343
659	342
660	341
661	340
662	339
663	338
664	337
665	336
666	335
667	334
668	333
669	332
670	331
671	330
672	329
673	328
674	327
675	326
676	325
677	324
678	323
679	322
680	321
681	320
682	319
683	318
684	317
685	316
686	315
687	314
688	313
689	312
690	311
691	310
692	309
693	308
694	307
695	306
696	305
697	304
698	303
699	302
700	301
701	300
702	299
703	298
704	297
705	296
706	295
707	294
708	293
709	292
710	291
711	290
712	289
713	288
714	287
715	286
716	285
717	284
718	283
719	282
720	281
721	280
722	279
723	278
724	277
725	276
726	275
727	274
728	273
729	272
730	271
731	270
732	269
733	268
734	267
735	266
736	265
737	264
738	263
739	262
740	261
741	260
742	259
743	258
744	257
745	256
746	255
747	254
748	253
749	252
750	251
751	250
752	249
753	248
754	247
755	246
756	245
757	244
758	243
759	242
760	241
761	240
762	239
763	238
764	237
765	236
766	235
767	234
768	233
769	232
770	231
771	230
772	229
773	228
774	227
775	226
776	225
777	224
778	223
779	222
780	221
781	220
782	219
783	218
784	217
785	216
786	215
787	214
788	213
789	212
790	211
791	210
792	209
793	208
794	207
795	206
796	205
797	204
798	203
799	202
800	201
801	200
802	199
803	198
804	197
805	196
806	195
807	194
808	193
809	192
810	191
811	190
812	189
813	188
814	187
815	186
816	185
817	184
818	183
819	182
820	181
821	180
822	179
823	178
824	177
825	176
826	175
827	174
828	173
829	172
830	171
831	170
832	169
833	168
834	167
835	166
836	165
837	164
838	163
839	162
840	161
841	160
842	159
843	158
844	157
845	156
846	155
847	154
848	153
849	152
850	151
851	150
852	149
853	148
854	147
855	146
856	145
857	144
858	143
859	142
860	141
861	140
862	139
863	138
864	137
865	136
866	135
867	134
868	133
869	132
870	131
871	130
872	129
873	128
874	127
875	126
876	125
877	124
878	123
879	122
880	121
881	120
882	119
883	118
884	117
885	116
886	115
887	114
888	113
889	112
890	111
891	110
892	109
893	108
894	107
895	106
896	105
897	104
898	103
899	102
900	101
901	100
902	99
903	98
904	97
905	96
906	95
907	94
908	93
909	92
910	91
911	90
912	89
913	88
914	87
915	86
916	85
917	84
918	83
919	82
920	81
921	80
922	79
923	78
924	77
925	76
926	75
927	74
928	73
929	72
930	71
931	70
932	69
933	68
934	67
935	66
936	65
937	64
938	63
939	62
940	61
941	60
942	59
943	58
944	57
945	56
946	55
947	54
948	53
949	52
950	51
951	50
952	49
953	48
954	47
955	46
956	45
957	44
958	43
959	42
960	41
961	40
962	39
963	38
964	37
965	36
966	35
967	34
968	33
969	32
970	31
971	30
972	29
973	28
974	27
975	26
976	25
977	24
978	23
979	22
980	21
981	20
982	19
983	18
984	17
985	16
986	15
987	14
988	13
989	12
990	11
991	10
992	9
993	8
994	7
995	6
996	5
997	4
998	3
999	2
1000	1
drop table t1;
CREATE TABLE t1 (
FieldKey varchar(36) NOT NULL default '',
LongVal bigint default NULL,
StringVal text,
KEY FieldKey (FieldKey),
KEY LongField (FieldKey,LongVal),
KEY StringField (FieldKey,StringVal(32))
);
INSERT INTO t1 VALUES ('0',3,'0'),('0',2,'1'),('0',1,'2'),('1',2,'1'),('1',1,'3'), ('1',0,'2'),('2',3,'0'),('2',2,'1'),('2',1,'2'),('2',3,'0'),('2',2,'1'),('2',1,'2'),('3',2,'1'),('3',1,'2'),('3','3','3');
SELECT * FROM t1 WHERE FieldKey = '1' ORDER BY LongVal;
FieldKey	LongVal	StringVal
1	0	2
1	1	3
1	2	1
SELECT * FROM t1 WHERE FieldKey > '2' ORDER BY LongVal;
FieldKey	LongVal	StringVal
3	1	2
3	2	1
3	3	3
SELECT * FROM t1 WHERE FieldKey > '2' ORDER BY FieldKey, LongVal;
FieldKey	LongVal	StringVal
3	1	2
3	2	1
3	3	3
DROP TABLE t1;
CREATE TABLE t1 (a INT, b INT);
SET @id=0;
UPDATE t1 SET a=0 ORDER BY (a=@id), b;
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (  id int NOT NULL default '0',  menu int NOT NULL default '0',  KEY id (id),  KEY menu (menu)) ENGINE=MyISAM;
INSERT INTO t1 VALUES (11384, 2),(11392, 2);
SELECT id FROM t1 WHERE id <11984 AND menu =2 ORDER BY id DESC LIMIT 1 ;
id
11392
drop table t1;
create table t1(a int, b int, index(b));
insert into t1 values (2, 1), (1, 1), (4, NULL), (3, NULL), (6, 2), (5, 2);
explain select * from t1 where b=1 or b is null order by a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	b	NULL	NULL	NULL	6	Using where; Using filesort
select * from t1 where b=1 or b is null order by a;
a	b
1	1
2	1
3	NULL
4	NULL
explain select * from t1 where b=2 or b is null order by a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	b	NULL	NULL	NULL	6	Using where; Using filesort
select * from t1 where b=2 or b is null order by a;
a	b
3	NULL
4	NULL
5	2
6	2
drop table t1;
create table t1 (a int not null auto_increment, b int not null, c int not null, d int not null,
key(a,b,d), key(c,b,a));
create table t2 like t1;
insert into t1 values (NULL, 1, 2, 0), (NULL, 2, 1, 1), (NULL, 3, 4, 2), (NULL, 4, 3, 3);
insert into t2 select null, b, c, d from t1;
insert into t1 select null, b, c, d from t2;
insert into t2 select null, b, c, d from t1;
insert into t1 select null, b, c, d from t2;
insert into t2 select null, b, c, d from t1;
insert into t1 select null, b, c, d from t2;
insert into t2 select null, b, c, d from t1;
insert into t1 select null, b, c, d from t2;
insert into t2 select null, b, c, d from t1;
insert into t1 select null, b, c, d from t2;
alter table t1 engine="default";
set @row=10;
insert into t1 select 1, b, c + (@row:=@row - 1) * 10, d - @row from t2 limit 10;
select * from t1 where a=1 and b in (1) order by c, b, a;
a	b	c	d
1	1	2	0
1	1	12	-1
1	1	52	-5
1	1	92	-9
select * from t1 where a=1 and b in (1);
a	b	c	d
1	1	92	-9
1	1	52	-5
1	1	12	-1
1	1	2	0
drop table t1, t2;
create table t1 (col1 int, col int);
create table t2 (col2 int, col int);
insert into t1 values (1,1),(2,2),(3,3);
insert into t2 values (1,3),(2,2),(3,1);
select t1.* , t2.col as t2_col from t1 left join t2 on (t1.col1=t2.col2)
order by col;
col1	col	t2_col
1	1	3
2	2	2
3	3	1
select col1 as col, col from t1 order by col;
ERROR 23000: Column 'col' in order clause is ambiguous
select t1.col as c1, t2.col as c2 from t1, t2 where t1.col1=t2.col2
order by col;
ERROR 23000: Column 'col' in order clause is ambiguous
select t1.col as c1, t2.col as c2 from t1, t2 where t1.col1=t2.col2
order by col;
ERROR 23000: Column 'col' in order clause is ambiguous
select col1 from t1, t2 where t1.col1=t2.col2 order by col;
ERROR 23000: Column 'col' in order clause is ambiguous
select t1.col as t1_col, t2.col2 from t1, t2 where t1.col1=t2.col2
order by col;
ERROR 23000: Column 'col' in order clause is ambiguous
select t1.col as t1_col, t2.col from t1, t2 where t1.col1=t2.col2
order by col;
t1_col	col
3	1
2	2
1	3
select col2 as c, col as c from t2 order by col;
c	c
3	1
2	2
1	3
select col2 as col, col as col2 from t2 order by col;
col	col2
1	3
2	2
3	1
select t2.col2, t2.col, t2.col from t2 order by col;
col2	col	col
3	1	1
2	2	2
1	3	3
select t2.col2 as col from t2 order by t2.col;
col
3
2
1
select t2.col2 as col, t2.col from t2 order by t2.col;
col	col
3	1
2	2
1	3
select t2.col2, t2.col, t2.col from t2 order by t2.col;
col2	col	col
3	1	1
2	2	2
1	3	3
drop table t1, t2;
create table t1 (a char(25));
insert into t1 set a = repeat('x', 20);
insert into t1 set a = concat(repeat('x', 19), 'z');
insert into t1 set a = concat(repeat('x', 19), 'ab');
insert into t1 set a = concat(repeat('x', 19), 'aa');
set max_sort_length=20;
select a from t1 order by a;
a
xxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxz
xxxxxxxxxxxxxxxxxxxab
xxxxxxxxxxxxxxxxxxxaa
drop table t1;
create temporary table t1 (
`sid` decimal(8,0) default null,
`wnid` varchar(11) not null default '',
key `wnid14` (`wnid`(4)),
key `wnid` (`wnid`)
) engine=myisam;
insert into t1 (`sid`, `wnid`) values
('10100','01019000000'),('37986','01019000000'),('37987','01019010000'),
('39560','01019090000'),('37989','01019000000'),('37990','01019011000'),
('37991','01019011000'),('37992','01019019000'),('37993','01019030000'),
('37994','01019090000'),('475','02070000000'),('25253','02071100000'),
('25255','02071100000'),('25256','02071110000'),('25258','02071130000'),
('25259','02071190000'),('25260','02071200000'),('25261','02071210000'),
('25262','02071290000'),('25263','02071300000'),('25264','02071310000'),
('25265','02071310000'),('25266','02071320000'),('25267','02071320000'),
('25269','02071330000'),('25270','02071340000'),('25271','02071350000'),
('25272','02071360000'),('25273','02071370000'),('25281','02071391000'),
('25282','02071391000'),('25283','02071399000'),('25284','02071400000'),
('25285','02071410000'),('25286','02071410000'),('25287','02071420000'),
('25288','02071420000'),('25291','02071430000'),('25290','02071440000'),
('25292','02071450000'),('25293','02071460000'),('25294','02071470000'),
('25295','02071491000'),('25296','02071491000'),('25297','02071499000');
explain select * from t1 where wnid like '0101%' order by wnid;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	wnid14,wnid	wnid	46	NULL	10	Using where
select * from t1 where wnid like '0101%' order by wnid;
sid	wnid
10100	01019000000
37986	01019000000
37989	01019000000
37987	01019010000
37990	01019011000
37991	01019011000
37992	01019019000
37993	01019030000
39560	01019090000
37994	01019090000
drop table t1;
CREATE TABLE t1 (a int);
INSERT INTO t1 VALUES (2), (1), (1), (2), (1);
SELECT a FROM t1 ORDER BY a;
a
1
1
1
2
2
(SELECT a FROM t1) ORDER BY a;
a
1
1
1
2
2
DROP TABLE t1;
CREATE TABLE t1 (a int, b int);
INSERT INTO t1 VALUES (1,30), (2,20), (1,10), (2,30), (1,20), (2,10);
(SELECT b,a FROM t1 ORDER BY a,b) ORDER BY b,a;
b	a
10	1
10	2
20	1
20	2
30	1
30	2
(SELECT b FROM t1 ORDER BY b DESC) ORDER BY b ASC;
b
10
10
20
20
30
30
(SELECT b,a FROM t1 ORDER BY b,a) ORDER BY a,b;
b	a
10	1
20	1
30	1
10	2
20	2
30	2
(SELECT b,a FROM t1 ORDER by b,a LIMIT 3) ORDER by a,b;
b	a
10	1
20	1
10	2
DROP TABLE t1;
CREATE TABLE t1 (a INT);
INSERT INTO t1 VALUES (1),(2);
SELECT a + 1 AS num FROM t1 ORDER BY 30 - num;
num
3
2
SELECT CONCAT('test', a) AS str FROM t1 ORDER BY UPPER(str);
str
test1
test2
SELECT a + 1 AS num FROM t1 GROUP BY 30 - num;
num
3
2
SELECT a + 1 AS num FROM t1 HAVING 30 - num;
num
2
3
SELECT a + 1 AS num, num + 1 FROM t1;
ERROR 42S22: Unknown column 'num' in 'field list'
SELECT a + 1 AS num, (select num + 2 FROM t1 LIMIT 1) FROM t1;
num	(select num + 2 FROM t1 LIMIT 1)
2	4
3	5
SELECT a.a + 1 AS num FROM t1 a JOIN t1 b ON num = b.a;
ERROR 42S22: Unknown column 'num' in 'on clause'
DROP TABLE t1;
CREATE TABLE bug25126 (
val int NOT NULL AUTO_INCREMENT PRIMARY KEY
);
UPDATE bug25126 SET MissingCol = MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'field list'
UPDATE bug25126 SET val = val ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET val = val ORDER BY val;
UPDATE bug25126 SET val = 1 ORDER BY val;
UPDATE bug25126 SET val = 1 ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET val = 1 ORDER BY val, MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET val = MissingCol ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET MissingCol = 1 ORDER BY val, MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET MissingCol = 1 ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET MissingCol = val ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
UPDATE bug25126 SET MissingCol = MissingCol ORDER BY MissingCol;
ERROR 42S22: Unknown column 'MissingCol' in 'order clause'
DROP TABLE bug25126;
CREATE TABLE t1 (a int);
SELECT p.a AS val, q.a AS val1 FROM t1 p CROSS JOIN t1 q ORDER BY val > 1;
val	val1
SELECT p.a AS val, q.a AS val FROM t1 p CROSS JOIN t1 q ORDER BY val;
ERROR 23000: Column 'val' in order clause is ambiguous
SELECT p.a AS val, q.a AS val FROM t1 p CROSS JOIN t1 q ORDER BY val > 1;
ERROR 23000: Column 'val' in order clause is ambiguous
DROP TABLE t1;
CREATE TABLE t1 (a int);
INSERT INTO t1 VALUES (3), (2), (4), (1);
SELECT a, IF(a IN (2,3), a, a+10) FROM t1
ORDER BY IF(a IN (2,3), a, a+10);
a	IF(a IN (2,3), a, a+10)
2	2
3	3
1	11
4	14
SELECT a, IF(a NOT IN (2,3), a, a+10) FROM t1 
ORDER BY IF(a NOT IN (2,3), a, a+10);
a	IF(a NOT IN (2,3), a, a+10)
1	1
4	4
2	12
3	13
SELECT a, IF(a IN (2,3), a, a+10) FROM t1 
ORDER BY IF(a NOT IN (2,3), a, a+10);
a	IF(a IN (2,3), a, a+10)
1	11
4	14
2	2
3	3
SELECT a, IF(a BETWEEN 2 AND 3, a, a+10) FROM t1
ORDER BY IF(a BETWEEN 2 AND 3, a, a+10);
a	IF(a BETWEEN 2 AND 3, a, a+10)
2	2
3	3
1	11
4	14
SELECT a, IF(a NOT BETWEEN 2 AND 3, a, a+10) FROM t1 
ORDER BY IF(a NOT BETWEEN 2 AND 3, a, a+10);
a	IF(a NOT BETWEEN 2 AND 3, a, a+10)
1	1
4	4
2	12
3	13
SELECT a, IF(a BETWEEN 2 AND 3, a, a+10) FROM t1 
ORDER BY IF(a NOT BETWEEN 2 AND 3, a, a+10);
a	IF(a BETWEEN 2 AND 3, a, a+10)
1	11
4	14
2	2
3	3
SELECT IF(a IN (1,2), a, '') as x1, IF(a NOT IN (1,2), a, '') as x2
FROM t1 GROUP BY x1, x2;
x1	x2
	3
	4
1	
2	
SELECT IF(a IN (1,2), a, '') as x1, IF(a NOT IN (1,2), a, '') as x2
FROM t1 GROUP BY x1, IF(a NOT IN (1,2), a, '');
x1	x2
	3
	4
1	
2	
SELECT a, a IN (1,2) FROM t1 ORDER BY a IN (1,2);
a	a IN (1,2)
3	0
4	0
2	1
1	1
SELECT a FROM t1 ORDER BY a IN (1,2);
a
3
4
2
1
SELECT a+10 FROM t1 ORDER BY a IN (1,2);
a+10
13
14
12
11
SELECT a, IF(a IN (1,2), a, a+10) FROM t1
ORDER BY IF(a IN (3,4), a, a+10);
a	IF(a IN (1,2), a, a+10)
3	13
4	14
1	1
2	2
DROP TABLE t1;
create table t1 (a int not null, b  int not null, c int not null);
insert t1 values (1,1,1),(1,1,2),(1,2,1);
select a, b from t1 group by a, b order by sum(c);
a	b
1	2
1	1
drop table t1;
CREATE TABLE t1 (a int, b int, PRIMARY KEY  (a));
INSERT INTO t1 VALUES (1,1), (2,2), (3,3);
explain SELECT t1.b as a, t2.b as c FROM 
t1 LEFT JOIN t1 t2 ON (t1.a = t2.a AND t2.a = 2) 
ORDER BY c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	3	Using temporary; Using filesort
1	SIMPLE	t2	const	PRIMARY	PRIMARY	4	const	1	
SELECT t2.b as c FROM 
t1 LEFT JOIN t1 t2 ON (t1.a = t2.a AND t2.a = 2) 
ORDER BY c;
c
NULL
NULL
2
explain SELECT t1.b as a, t2.b as c FROM 
t1 JOIN t1 t2 ON (t1.a = t2.a AND t2.a = 2)  
ORDER BY c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	4	const	1	
1	SIMPLE	t2	const	PRIMARY	PRIMARY	4	const	1	
CREATE TABLE t2 LIKE t1;
INSERT INTO t2 SELECT * from t1;
CREATE TABLE t3 LIKE t1;
INSERT INTO t3 SELECT * from t1;
CREATE TABLE t4 LIKE t1;
INSERT INTO t4 SELECT * from t1;
INSERT INTO t1 values (0,0),(4,4);
SELECT t2.b FROM t1 LEFT JOIN (t2, t3 LEFT JOIN t4 ON t3.a=t4.a)
ON (t1.a=t2.a AND t1.b=t3.b) order by t2.b;
b
NULL
NULL
1
2
3
DROP TABLE t1,t2,t3,t4;
create table t1 (a int, b int, c int);
insert into t1 values (1,2,3), (9,8,3), (19,4,3), (1,4,9);
select a,(sum(b)/sum(c)) as ratio from t1 group by a order by sum(b)/sum(c) asc;
a	ratio
1	0.5000
19	1.3333
9	2.6667
drop table t1;
CREATE TABLE t1 (a INT, b INT, PRIMARY KEY (a), UNIQUE KEY b (b));
INSERT INTO t1 VALUES (1,1),(2,2);
CREATE TABLE t2 (a INT, b INT, KEY a (a,b));
INSERT INTO t2 VALUES (1,1),(1,2),(2,1),(2,2);
SELECT 1 FROM t1,t2 WHERE t1.b=2 AND t1.a=t2.a ORDER BY t2.b;
1
1
1
DROP TABLE t1,t2;
CREATE TABLE t1 (
a INT,
b INT,
PRIMARY KEY (a),
KEY ab(a, b)
);
INSERT INTO t1 VALUES (1,1),(2,2),(3,3),(4,4);
INSERT INTO t1 SELECT a + 4, b + 4 FROM t1;
INSERT INTO t1 SELECT a + 8, b + 8 FROM t1;
INSERT INTO t1 SELECT a +16, b +16 FROM t1;
INSERT INTO t1 SELECT a +32, b +32 FROM t1;
INSERT INTO t1 SELECT a +64, b +64 FROM t1;
SELECT a FROM t1 IGNORE INDEX FOR GROUP BY (a, ab) GROUP BY a;
ERROR 42000: Key 'a' doesn't exist in table 't1'
SELECT a FROM t1 IGNORE INDEX FOR GROUP BY (primary, ab) GROUP BY a;
a
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
SELECT @tmp_tables_after = @tmp_tables_before ;
@tmp_tables_after = @tmp_tables_before
NULL
SELECT a FROM t1 IGNORE INDEX FOR ORDER BY (a, ab) ORDER BY a;
ERROR 42000: Key 'a' doesn't exist in table 't1'
SELECT a FROM t1 IGNORE INDEX FOR ORDER BY (primary, ab) ORDER BY a;
a
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
SELECT @tmp_tables_after = @tmp_tables_before;
@tmp_tables_after = @tmp_tables_before
NULL
DROP TABLE t1;
#
# Bug#31590: Wrong error message on sort buffer being too small.
#
create table t1(a int, b text);
insert into t1 values (1,2),(3,2);
set session sort_buffer_size= 30000;
Warnings:
Error	1292	Truncated incorrect sort_buffer_size value: '30000'
set session max_sort_length= 2180;
select * from t1 order by b;
a	b
1	2
3	2
drop table t1;
CREATE TABLE t2 (a varchar(32), b int, c float, d double, 
UNIQUE KEY a (a,b,c), KEY b (b), KEY c (c));
CREATE TABLE t1 (a varchar(32), b char(3), UNIQUE KEY a (a,b), KEY b (b));
CREATE TABLE t3 (a varchar(32), b char(3), UNIQUE KEY a (a,b));
INSERT INTO t3 SELECT * FROM t1;
SELECT d FROM t1, t2
WHERE t2.b=14 AND t2.a=t1.a AND 5.1<t2.c AND t1.b='DE'
ORDER BY t2.c LIMIT 1;
d
52.5
SELECT d FROM t3 AS t1, t2 AS t2 
WHERE t2.b=14 AND t2.a=t1.a AND 5.1<t2.c AND t1.b='DE'
ORDER BY t2.c LIMIT 1;
d
52.5
DROP TABLE t1,t2,t3;
