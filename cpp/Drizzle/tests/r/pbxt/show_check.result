drop table if exists t1,t2;
drop table if exists t1aa,t2aa;
drop database if exists mysqltest;
drop database if exists mysqltest1;
create table t1 (a int not null primary key, b int not null,c int not null, key(b,c));
insert into t1 values (1,2,2),(2,2,3),(3,2,4),(4,2,4);
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
check table t1 fast;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
check table t1 fast;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
check table t1 changed;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
insert into t1 values (5,5,5);
check table t1 changed;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
check table t1 medium;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
check table t1 extended;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	5	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
show index from t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			STATISTICS	TABLE_NAME	Table	8	256	2	N	1	0	45
def			STATISTICS	NON_UNIQUE	Non_unique	5	1	1	N	32769	0	63
def			STATISTICS	INDEX_NAME	Key_name	8	256	7	N	1	0	45
def			STATISTICS	SEQ_IN_INDEX	Seq_in_index	5	2	1	N	32769	0	63
def			STATISTICS	COLUMN_NAME	Column_name	8	256	1	N	1	0	45
def			STATISTICS	COLLATION	Collation	8	4	1	Y	0	0	45
def			STATISTICS	CARDINALITY	Cardinality	5	21	1	Y	32768	0	63
def			STATISTICS	SUB_PART	Sub_part	5	3	0	Y	32768	0	63
def			STATISTICS	PACKED	Packed	8	40	0	Y	0	0	45
def			STATISTICS	NULLABLE	Null	8	12	0	N	1	0	45
def			STATISTICS	INDEX_TYPE	Index_type	8	64	5	N	1	0	45
def			STATISTICS	COMMENT	Comment	8	64	0	Y	0	0	45
def			STATISTICS	INDEX_COMMENT	Index_Comment	8	4096	0	N	1	0	45
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_Comment
t1	0	PRIMARY	1	a	A	5	NULL	NULL		BTREE		
t1	1	b	1	b	A	5	NULL	NULL		BTREE		
t1	1	b	2	c	A	5	NULL	NULL		BTREE		
insert into t1 values (5,5,5);
ERROR 23000: Duplicate entry '5' for key 'PRIMARY'
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
optimize table t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	8	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
optimize table t1;
Table	Op	Msg_type	Msg_text
test.t1	optimize	status	OK
drop table t1;
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
show variables like "server_id%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			VARIABLES	VARIABLE_NAME	Variable_name	8	256	9	N	1	0	45
def			VARIABLES	VARIABLE_VALUE	Value	8	65200	1	Y	0	0	45
Variable_name	Value
server_id	1
show variables like "SERVER_id%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			VARIABLES	VARIABLE_NAME	Variable_name	8	256	9	N	1	0	45
def			VARIABLES	VARIABLE_VALUE	Value	8	65200	1	Y	0	0	45
Variable_name	Value
server_id	1
show variables like "this_doesn't_exists%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			VARIABLES	VARIABLE_NAME	Variable_name	8	256	0	N	1	0	45
def			VARIABLES	VARIABLE_VALUE	Value	8	65200	0	Y	0	0	45
Variable_name	Value
show table status from test like "this_doesn't_exists%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			TABLES	TABLE_NAME	Name	8	256	0	N	1	0	45
def			TABLES	ENGINE	Engine	8	256	0	Y	0	0	45
def			TABLES	VERSION	Version	5	21	0	Y	32768	0	63
def			TABLES	ROW_FORMAT	Row_format	8	40	0	Y	0	0	45
def			TABLES	TABLE_ROWS	Rows	5	21	0	Y	32768	0	63
def			TABLES	AVG_ROW_LENGTH	Avg_row_length	5	21	0	Y	32768	0	63
def			TABLES	DATA_LENGTH	Data_length	5	21	0	Y	32768	0	63
def			TABLES	MAX_DATA_LENGTH	Max_data_length	5	21	0	Y	32768	0	63
def			TABLES	INDEX_LENGTH	Index_length	5	21	0	Y	32768	0	63
def			TABLES	DATA_FREE	Data_free	5	21	0	Y	32768	0	63
def			TABLES	AUTO_INCREMENT	Auto_increment	5	21	0	Y	32768	0	63
def			TABLES	CREATE_TIME	Create_time	6	19	0	Y	128	0	63
def			TABLES	UPDATE_TIME	Update_time	6	19	0	Y	128	0	63
def			TABLES	CHECK_TIME	Check_time	6	19	0	Y	128	0	63
def			TABLES	TABLE_COLLATION	Collation	8	256	0	Y	0	0	45
def			TABLES	CHECKSUM	Checksum	5	21	0	Y	32768	0	63
def			TABLES	CREATE_OPTIONS	Create_options	8	1020	0	Y	0	0	45
def			TABLES	TABLE_COMMENT	Comment	8	8192	0	N	1	0	45
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
show databases;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			SCHEMATA	SCHEMA_NAME	Database	8	256	18	N	1	0	45
Database
information_schema
mysql
pbxt
test
show databases like "test%";
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			SCHEMATA	SCHEMA_NAME	Database (test%)	8	256	4	N	1	0	45
Database (test%)
test
create table t1 (f1 int not null, f2 int not null, f3 int not null, f4 int not null, primary key(f1,f2,f3,f4));
insert into t1 values (1,1,1,0),(1,1,2,0),(1,1,3,0),(1,2,1,0),(1,2,2,0),(1,2,3,0),(1,3,1,0),(1,3,2,0),(1,3,3,0),(1,1,1,1),(1,1,2,1),(1,1,3,1),(1,2,1,1),(1,2,2,1),(1,2,3,1),(1,3,1,1),(1,3,2,1),(1,3,3,1);
-- Here we enable metadata just to check that the collation of the
-- resultset is non-binary for string type. This should be changed
-- after Bug#29394 is implemented.
analyze table t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def					Table	8	512	7	Y	0	31	45
def					Op	8	40	7	Y	0	31	45
def					Msg_type	8	40	6	Y	0	31	45
def					Msg_text	8	1020	2	Y	0	31	45
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
show index from t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_Comment
t1	0	PRIMARY	1	f1	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	2	f2	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	3	f3	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	4	f4	A	18	NULL	NULL		BTREE		
show index from t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_Comment
t1	0	PRIMARY	1	f1	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	2	f2	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	3	f3	A	18	NULL	NULL		BTREE		
t1	0	PRIMARY	4	f4	A	18	NULL	NULL		BTREE		
drop table t1;
create temporary table t1 (a int not null);
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` int NOT NULL
) ENGINE=DEFAULT
alter table t1 rename t2;
show create table t2;
Table	Create Table
t2	CREATE TEMPORARY TABLE `t2` (
  `a` int NOT NULL
) ENGINE=DEFAULT
drop table t2;
create table t1 (
name char(20) default 'O''Brien' comment 'O''Brien as default',
c int not null comment 'int column',
`c-b` int comment 'name with a minus',
`space 2` int comment 'name with a space'
  ) comment = 'it\'s a table' ;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `name` varchar(20) DEFAULT 'O''Brien' COMMENT 'O''Brien as default',
  `c` int NOT NULL COMMENT 'int column',
  `c-b` int DEFAULT NULL COMMENT 'name with a minus',
  `space 2` int DEFAULT NULL COMMENT 'name with a space'
) ENGINE=DEFAULT COMMENT='it''s a table'
show full columns from t1;
Field	Type	Collation	Null	Key	Default	Extra	Privileges	Comment
name	varchar(20)	utf8_general_ci	YES		O'Brien			O'Brien as default
c	int	NULL	NO		NULL			int column
c-b	int	NULL	YES		NULL			name with a minus
space 2	int	NULL	YES		NULL			name with a space
drop table t1;
create table t1 (a int not null, unique aa (a));
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  UNIQUE KEY `aa` (`a`)
) ENGINE=DEFAULT
drop table t1;
create table t1 (a int not null, primary key (a));
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int NOT NULL,
  PRIMARY KEY (`a`)
) ENGINE=DEFAULT
drop table t1;
flush tables;
show open tables;
Database	Table	In_use	Name_locked
create table t1(n int);
insert into t1 values (1);
show open tables;
Database	Table	In_use	Name_locked
test	t1	0	0
drop table t1;
create temporary table t1 (a int not null, b VARCHAR(10), INDEX (b) ) COMMENT="test" ENGINE=MYISAM ROW_FORMAT=fixed;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` int NOT NULL,
  `b` varchar(10) DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM ROW_FORMAT=FIXED COMMENT='test'
alter table t1 ROW_FORMAT=dynamic;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` int NOT NULL,
  `b` varchar(10) DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM ROW_FORMAT=DYNAMIC COMMENT='test'
ALTER TABLE t1 COMMENT="" ROW_FORMAT=default;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `a` int NOT NULL,
  `b` varchar(10) DEFAULT NULL,
  KEY `b` (`b`)
) ENGINE=MyISAM
drop table t1;
create table t1 (a decimal(9,2), b decimal (9,0), e double(9,2), f double(5,0), h float(3,2), i float(3,0));
show columns from t1;
Field	Type	Null	Key	Default	Extra
a	decimal(9,2)	YES		NULL	
b	decimal(9,0)	YES		NULL	
e	double(9,2)	YES		NULL	
f	double(5,0)	YES		NULL	
h	double(3,2)	YES		NULL	
i	double(3,0)	YES		NULL	
show full columns from t1;
Field	Type	Collation	Null	Key	Default	Extra	Privileges	Comment
a	decimal(9,2)	NULL	YES		NULL			
b	decimal(9,0)	NULL	YES		NULL			
e	double(9,2)	NULL	YES		NULL			
f	double(5,0)	NULL	YES		NULL			
h	double(3,2)	NULL	YES		NULL			
i	double(3,0)	NULL	YES		NULL			
drop table t1;
create temporary table t1 (
type_int int,
type_bigint bigint,
type_decimal decimal(5,2),
type_numeric numeric(5,2),
empty_char char(0),
type_char char(2),
type_varchar varchar(10),
type_timestamp timestamp not null,
type_date date,
type_datetime datetime,
type_enum enum ('red', 'green', 'blue'),
type_set enum ('red', 'green', 'blue'),
type_blob blob,
index(type_int)
) COMMENT="test" ENGINE=MYISAM ROW_FORMAT=fixed;
show create table t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `type_int` int DEFAULT NULL,
  `type_bigint` bigint DEFAULT NULL,
  `type_decimal` decimal(5,2) DEFAULT NULL,
  `type_numeric` decimal(5,2) DEFAULT NULL,
  `empty_char` varchar(0) DEFAULT NULL,
  `type_char` varchar(2) DEFAULT NULL,
  `type_varchar` varchar(10) DEFAULT NULL,
  `type_timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `type_date` date DEFAULT NULL,
  `type_datetime` datetime DEFAULT NULL,
  `type_enum` enum('red','green','blue') DEFAULT NULL,
  `type_set` enum('red','green','blue') DEFAULT NULL,
  `type_blob` blob,
  KEY `type_int` (`type_int`)
) ENGINE=MyISAM ROW_FORMAT=FIXED COMMENT='test'
insert into t1 (type_timestamp) values ("2003-02-07 10:00:01");
select * from t1;
type_int	type_bigint	type_decimal	type_numeric	empty_char	type_char	type_varchar	type_timestamp	type_date	type_datetime	type_enum	type_set	type_blob
NULL	NULL	NULL	NULL	NULL	NULL	NULL	2003-02-07 10:00:01	NULL	NULL	NULL	NULL	NULL
drop table t1;
create table t1 (a int not null);
create table t2 select max(a) from t1;
show columns from t2;
Field	Type	Null	Key	Default	Extra
max(a)	int	YES		NULL	
drop table t1,t2;
create table t1 (c decimal, d double, f float, r real);
show columns from t1;
Field	Type	Null	Key	Default	Extra
c	decimal(10,0)	YES		NULL	
d	double	YES		NULL	
f	double	YES		NULL	
r	double	YES		NULL	
drop table t1;
create table t1 (c decimal(3,3), d double(3,3), f float(3,3));
show columns from t1;
Field	Type	Null	Key	Default	Extra
c	decimal(3,3)	YES		NULL	
d	double(3,3)	YES		NULL	
f	double(3,3)	YES		NULL	
drop table t1;
CREATE TABLE ```ab``cd``` (i INT);
SHOW CREATE TABLE ```ab``cd```;
Table	Create Table
`ab`cd`	CREATE TABLE ```ab``cd``` (
  `i` int DEFAULT NULL
) ENGINE=DEFAULT
DROP TABLE ```ab``cd```;
CREATE TABLE ```ab````cd``` (i INT);
SHOW CREATE TABLE ```ab````cd```;
Table	Create Table
`ab``cd`	CREATE TABLE ```ab````cd``` (
  `i` int DEFAULT NULL
) ENGINE=DEFAULT
DROP TABLE ```ab````cd```;
CREATE TABLE ```a` (i INT);
SHOW CREATE TABLE ```a`;
Table	Create Table
`a	CREATE TABLE ```a` (
  `i` int DEFAULT NULL
) ENGINE=DEFAULT
DROP TABLE ```a`;
CREATE TABLE `a.1` (i INT);
SHOW CREATE TABLE `a.1`;
Table	Create Table
a.1	CREATE TABLE `a.1` (
  `i` int DEFAULT NULL
) ENGINE=DEFAULT
DROP TABLE `a.1`;
select @@max_heap_table_size;
@@max_heap_table_size
1048576
CREATE TEMPORARY TABLE t1 (
a int default NULL,
KEY a USING BTREE (a)
) ENGINE=HEAP;
CREATE TEMPORARY TABLE t2 (
b int default NULL,
index(b)
) ENGINE=HEAP;
CREATE TEMPORARY TABLE t3 (
a int default NULL,
b int default NULL,
KEY a USING BTREE (a),
index(b)
) ENGINE=HEAP;
insert into t1 values (1),(2);
insert into t2 values (1),(2);
insert into t3 values (1,1),(2,2);
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
insert into t1 values (3),(4);
insert into t2 values (3),(4);
insert into t3 values (3,3),(4,4);
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
delete from t1 where a=3;
delete from t2 where b=3;
delete from t3 where a=3;
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
truncate table t1;
truncate table t2;
truncate table t3;
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
insert into t1 values (5);
insert into t2 values (5);
insert into t3 values (5,5);
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
delete from t1 where a=5;
delete from t2 where b=5;
delete from t3 where a=5;
show table status;
Name	Engine	Version	Row_format	Rows	Avg_row_length	Data_length	Max_data_length	Index_length	Data_free	Auto_increment	Create_time	Update_time	Check_time	Collation	Checksum	Create_options	Comment
drop table t1, t2, t3;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MEMORY
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING HASH (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`) USING HASH
) ENGINE=MEMORY
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MEMORY
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MyISAM
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MyISAM
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MyISAM
ALTER TABLE t1 ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`)
) ENGINE=MEMORY
DROP TABLE t1;
CREATE TEMPORARY TABLE t1 (i int, KEY USING BTREE (i)) ENGINE=MyISAM;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MyISAM
ALTER TABLE t1 ENGINE=MEMORY;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TEMPORARY TABLE `t1` (
  `i` int DEFAULT NULL,
  KEY `i` (`i`) USING BTREE
) ENGINE=MEMORY
DROP TABLE t1;
CREATE TABLE t1(
field1 text NOT NULL,
PRIMARY KEY(field1(180))
);
show index from t1;
Catalog	Database	Table	Table_alias	Column	Column_alias	Type	Length	Max length	Is_null	Flags	Decimals	Charsetnr
def			STATISTICS	TABLE_NAME	Table	8	256	2	N	1	0	45
def			STATISTICS	NON_UNIQUE	Non_unique	5	1	1	N	32769	0	63
def			STATISTICS	INDEX_NAME	Key_name	8	256	7	N	1	0	45
def			STATISTICS	SEQ_IN_INDEX	Seq_in_index	5	2	1	N	32769	0	63
def			STATISTICS	COLUMN_NAME	Column_name	8	256	6	N	1	0	45
def			STATISTICS	COLLATION	Collation	8	4	1	Y	0	0	45
def			STATISTICS	CARDINALITY	Cardinality	5	21	1	Y	32768	0	63
def			STATISTICS	SUB_PART	Sub_part	5	3	3	Y	32768	0	63
def			STATISTICS	PACKED	Packed	8	40	0	Y	0	0	45
def			STATISTICS	NULLABLE	Null	8	12	0	N	1	0	45
def			STATISTICS	INDEX_TYPE	Index_type	8	64	5	N	1	0	45
def			STATISTICS	COMMENT	Comment	8	64	0	Y	0	0	45
def			STATISTICS	INDEX_COMMENT	Index_Comment	8	4096	0	N	1	0	45
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_Comment
t1	0	PRIMARY	1	field1	A	0	180	NULL		BTREE		
drop table t1;
create table t1 (
c1 int NOT NULL,
c2 int NOT NULL,
PRIMARY KEY USING HASH (c1),
INDEX USING BTREE(c2)
);
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `c1` int NOT NULL,
  `c2` int NOT NULL,
  PRIMARY KEY (`c1`) USING HASH,
  KEY `c2` (`c2`) USING BTREE
) ENGINE=DEFAULT
DROP TABLE t1;

# Bug#12183: SHOW OPEN TABLES behavior doesn't match grammar.

DROP DATABASE IF EXISTS mysqltest1;
CREATE DATABASE mysqltest1;
use mysqltest1;

CREATE TABLE t1(a INT);
CREATE TABLE t2(a INT);

FLUSH TABLES;

SELECT 1 FROM t1;
1
SELECT 1 FROM t2;
1

SHOW OPEN TABLES FROM mysqltest1;
Database	Table	In_use	Name_locked
mysqltest1	t1	0	0
mysqltest1	t2	0	0

SHOW OPEN TABLES FROM mysqltest1 LIKE 'z%';
Database	Table	In_use	Name_locked

SHOW OPEN TABLES FROM mysqltest1 LIKE 't1%';
Database	Table	In_use	Name_locked
mysqltest1	t1	0	0

SHOW OPEN TABLES FROM mysqltest1 LIKE '%1%';
Database	Table	In_use	Name_locked
mysqltest1	t1	0	0

FLUSH TABLES;

DROP DATABASE mysqltest1;
use test;

SHOW TABLES FROM non_existing_database;
ERROR 42000: Unknown database 'non_existing_database'
End of 4.1 tests
SHOW TABLES FROM no_such_database;
ERROR 42000: Unknown database 'no_such_database'
SHOW COLUMNS FROM no_such_table;
ERROR 42S02: Table 'test.no_such_table' doesn't exist
show variables like 'myisam_recover_options';
Variable_name	Value
End of 5.0 tests
create database `mysqlttest\1`;
create table `mysqlttest\1`.`a\b` (a int);
show tables from `mysqlttest\1`;
Tables_in_mysqlttest\1
a\b
show fields from `mysqlttest\1`.`a\b`;
Field	Type	Null	Key	Default	Extra
a	int	YES		NULL	
show columns from `a\b` from `mysqlttest\1`;
Field	Type	Null	Key	Default	Extra
a	int	YES		NULL	
show keys from `mysqlttest\1`.`a\b`;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_Comment
drop table `mysqlttest\1`.`a\b`;
drop database `mysqlttest\1`;
show engine foobar status;
ERROR 42000: Unknown table engine 'foobar'
show engine foobar logs;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your Drizzle server version for the right syntax to use near 'logs' at line 1
show engine foobar mutex;
ERROR 42000: You have an error in your SQL syntax; check the manual that corresponds to your Drizzle server version for the right syntax to use near 'mutex' at line 1
show engine mutex status;
ERROR 42000: Unknown table engine 'mutex'
show engine csv status;
Type	Name	Status
drop table if exists `été`;
create table `été` (field1 int);
show full tables;
Tables_in_test	Table_type
été	BASE Table
drop table `été`;
show columns from `#mysql50#????????`;
Got one of the listed errors
End of 5.1 tests
