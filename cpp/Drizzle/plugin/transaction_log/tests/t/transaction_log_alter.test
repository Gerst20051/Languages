# transaction_log_alter.test
# test of various ALTER TABLE statements
# and how they are captured by the transaction log

# Ignore startup/shutdown events
--disable_query_log
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--enable_query_log

--echo Testing RENAME table - positive 
--disable_warnings
DROP TABLE IF EXISTS t1, t1_new_name;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));

ALTER TABLE t1 RENAME TO t1_new_name;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1_new_name;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing RENAME table - negative 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));

CREATE TABLE t2 LIKE t1;

--ERROR ER_TABLE_EXISTS_ERROR
ALTER TABLE t1 RENAME TO t2;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1, t2;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing RENAME table - negative
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));

CREATE TABLE t2 LIKE t1;

--ERROR ER_TABLE_EXISTS_ERROR
ALTER TABLE t1 RENAME TO t2;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1, t2;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing RENAME Table with Foreign Key constraints 
--disable_warnings
DROP TABLE IF EXISTS t1, t2, t1_new_name ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));

CREATE TABLE t2(a INT NOT NULL, b INT , PRIMARY KEY(a), KEY b_key (b), 
CONSTRAINT fk_constraint_t2 FOREIGN KEY (b) REFERENCES t1(b) ON DELETE SET NULL ON UPDATE CASCADE);

ALTER TABLE t1 RENAME to t1_new_name;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t2;

DROP TABLE t2, t1_new_name;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD COLUMN simple 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD COLUMN c CHAR(100) NOT NULL;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD COLUMN simple negative
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

--ERROR ER_DUP_FIELDNAME
ALTER TABLE t1 ADD COLUMN b CHAR(100) NOT NULL;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD COLUMN AFTER <col_name>
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD COLUMN c CHAR(100) NOT NULL AFTER a;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD COLUMN FIRST 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD COLUMN c CHAR(100) NOT NULL FIRST ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD COLUMN multiple columns 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD COLUMN c CHAR(100) NOT NULL FIRST, ADD COLUMN d BLOB AFTER a ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP COLUMN simple 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 DROP COLUMN b ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP COLUMN multiple columns 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, c BLOB, d DATE, PRIMARY KEY(a));

ALTER TABLE t1 DROP COLUMN b, DROP COLUMN d ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP COLUMN negative 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

--ERROR ER_CANT_REMOVE_ALL_FIELDS
ALTER TABLE t1 DROP COLUMN a, DROP COLUMN b ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DISABLE/ENABLE KEYS 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key (b,a));

ALTER TABLE t1 DISABLE KEYS ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

ALTER TABLE t1 ENABLE KEYS ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD / DROP INDEX
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD INDEX b_key (b,a) ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

ALTER TABLE t1 DROP INDEX b_key;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD / DROP INDEX2
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(50) NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ADD INDEX b_key (b(10),a) ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

ALTER TABLE t1 DROP INDEX b_key;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo


--echo Testing ADD INDEX negative
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key(b));

--ERROR ER_DUP_KEYNAME
ALTER TABLE t1 ADD INDEX b_key (b,a) ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP INDEX negative1 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

--ERROR ER_CANT_DROP_FIELD_OR_KEY
ALTER TABLE t1 DROP INDEX i_dont_exist ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ALTER COLUMN 
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 ALTER COLUMN b SET DEFAULT 999 ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

ALTER TABLE t1 ALTER COLUMN b DROP DEFAULT ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CHANGE COLUMN  
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a));

ALTER TABLE t1 CHANGE COLUMN b new_b_name CHAR(500) DEFAULT 'I am not an int now' FIRST ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing MODIFY COLUMN1
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, c DATE, PRIMARY KEY(a));

ALTER TABLE t1 MODIFY COLUMN b CHAR(50) DEFAULT 'I am now a CHAR field' AFTER c ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing MODIFY COLUMN2
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, c DATE, PRIMARY KEY(a));

--ERROR ER_BAD_FIELD_ERROR
ALTER TABLE t1 MODIFY COLUMN b CHAR(50) DEFAULT 'I am now a CHAR field' AFTER b ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing MODIFY COLUMN3
--disable_warnings
DROP TABLE IF EXISTS t1 ;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, c DATE, PRIMARY KEY(a));

ALTER TABLE t1 MODIFY COLUMN b INT NOT NULL ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SHOW CREATE TABLE t1;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing ADD/DROP Foreign Key constraints 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

CREATE TABLE t2(a INT NOT NULL, b INT , PRIMARY KEY(a), KEY b_key (b));

ALTER TABLE t2 ADD CONSTRAINT fk_constraint_t2 FOREIGN KEY(b) REFERENCES t1(b) ON DELETE SET NULL ON UPDATE CASCADE;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

ALTER TABLE t2 DROP FOREIGN KEY fk_constraint_t2 ;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


DROP TABLE t2;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

