# Tests of how the transaction log captures data for Drizzle data types
# The primary focus of this test is simple INSERT statements and
# how the values are/are not captured by the log

# Each data type will be tested for:
#   MIN/MAX value
#   (MIN-1)/(MAX+1) value
#   bad input
#   NULL input
#   large input where appropriate (CHAR/BLOB/ENUM)

# Ignore startup/shutdown events
--disable_query_log
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--enable_query_log


# INT tests
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
 
# NOTE!!! For Bug#598473 and Bug#594876 below, we have hacked the .result file
# with a placeholder value of **NULL** to produce a failing test
# This will need to be re-recorded when the bug is fixed

--echo ++ Begin INT tests ++ 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b INT, PRIMARY KEY(a));

--echo Testing MIN INT
INSERT INTO t1 (b) VALUES(-2147483648);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX INT
INSERT INTO t1 (b) VALUES(2147483647);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 INT
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(-2147483649);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 INT
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(2147483648);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL INT
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT INT1
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('abbazabba');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT INT2
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('a');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MULTI_INSERT INT
INSERT INTO t1 (b) VALUES(1),(1),(2),(3),(5);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc

--echo ++ End INT tests ++
--echo ++ Begin BIGINT tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b BIGINT, PRIMARY KEY(a));

--echo Testing MIN BIGINT
INSERT INTO t1 (b) VALUES(-9223372036854775808);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX BIGINT
INSERT INTO t1 (b) VALUES(9223372036854775807);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 BIGINT
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(-9223372036854775809);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 BIGINT
--echo NOTE: Bug#316221 - 2**63 incorrectly inserted into bigint
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(9223372036854775808);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL BIGINT
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT BIGINT1
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('abbazabba');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT BIGINT2
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('a');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End BIGINT tests ++
--echo ++ Begin DECIMAL simple tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b DECIMAL(5,2), PRIMARY KEY(a));

--echo Testing MIN DECIMAL simple 
INSERT INTO t1 (b) VALUES(-999.99);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX DECIMAL simple 
INSERT INTO t1 (b) VALUES(999.99);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


--echo Testing MIN-1 DECIMAL simple 
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(-1000);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 DECIMAL simple 
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(1000);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


--echo Testing NULL DECIMAL simple 
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


--echo Testing BAD INPUT DECIMAL simple 
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('abbazabba');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DECIMAL simple2 
--ERROR ER_TRUNCATED_WRONG_VALUE_FOR_FIELD
INSERT INTO t1 (b) VALUES('a');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing misc DECIMAL simple
INSERT INTO t1 (b) VALUES(100);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing misc DECIMAL simple2
--ERROR ER_WARN_DATA_TRUNCATED
INSERT INTO t1 (b) VALUES(.0898);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing misc DECIMAL simple3
INSERT INTO t1 (b) VALUES(.1);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;
# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End DECIMAL simple tests ++
--echo ++ Begin FLOAT simple tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b FLOAT(5,2), PRIMARY KEY(a));

--echo Testing MIN FLOAT simple
INSERT INTO t1 (b) VALUES(-999.99);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX FLOAT simple
INSERT INTO t1 (b) VALUES(999.99);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 FLOAT simple
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(-1000);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 FLOAT simple
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES(1000);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL FLOAT simple
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT FLOAT simple
--ERROR ER_WARN_DATA_TRUNCATED
INSERT INTO t1 (b) VALUES('abbazabba');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End FLOAT simple tests ++
--echo ++ Begin CHAR simple tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b CHAR(10), PRIMARY KEY(a));

--echo Testing MIN CHAR simple
INSERT INTO t1 (b) VALUES("");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX CHAR simple
INSERT INTO t1 (b) VALUES("zzzzzzzzzz");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 CHAR simple
--ERROR ER_DATA_TOO_LONG 
INSERT INTO t1 (b) VALUES('zzzzzzzzzzz');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL CHAR simple
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NUMERIC INPUT CHAR simple
INSERT INTO t1 (b) VALUES(1000000);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End CHAR simple tests ++
--echo ++ Begin ENUM simple tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b ENUM('1','2','3','4','5'), PRIMARY KEY(a));

--echo Testing MIN ENUM simple
INSERT INTO t1 (b) VALUES(1);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX ENUM simple
INSERT INTO t1 (b) VALUES(5);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT ENUM simple
--ERROR ER_INVALID_ENUM_VALUE
INSERT INTO t1 (b) VALUES(6);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL ENUM simple
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End ENUM simple tests ++
--echo ++ Begin DATE tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b DATE, PRIMARY KEY(a));

--echo Testing MIN DATE
INSERT INTO t1 (b) VALUES('0001-01-01');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX DATE
INSERT INTO t1 (b) VALUES('9999-12-31');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 DATE
--ERROR ER_INVALID_DATE_VALUE 
INSERT INTO t1 (b) VALUES('0000-12-31');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 DATE
--ERROR ER_INVALID_DATE_VALUE 
INSERT INTO t1 (b) VALUES('10000-01-01');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input format DATE1
INSERT INTO t1 (b) VALUES('20000101');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input formate DATE2
INSERT INTO t1 (b) VALUES('990601');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL DATE
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DATE1
--ERROR ER_INVALID_DATE_VALUE
INSERT INTO t1 (b) VALUES('abbazabba');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DATE2
--ERROR ER_INVALID_DATE_VALUE 
INSERT INTO t1 (b) VALUES('a');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End DATE tests ++
--echo ++ Begin DATETIME tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b DATETIME, PRIMARY KEY(a));

--echo Testing MIN DATETIME
INSERT INTO t1 (b) VALUES('0001-01-01 00:00:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX DATETIME
INSERT INTO t1 (b) VALUES('9999-12-31 23:59:59');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 DATETIME
--ERROR ER_INVALID_DATETIME_VALUE 
INSERT INTO t1 (b) VALUES('0000-01-01');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 DATETIME
--ERROR ER_INVALID_DATETIME_VALUE 
INSERT INTO t1 (b) VALUES('10000-01-01');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input format DATETIME1
INSERT INTO t1 (b) VALUES(20000101121559);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input formate DATETIME2
INSERT INTO t1 (b) VALUES('19990601121547');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL DATETIME
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DATETIME1
--ERROR ER_INVALID_DATETIME_VALUE
INSERT INTO t1 (b) VALUES('2000-01-01 25:00:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DATETIME2
--ERROR ER_INVALID_DATETIME_VALUE 
INSERT INTO t1 (b) VALUES('2000-01-01 12:60:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT DATETIME3
--ERROR ER_INVALID_DATETIME_VALUE 
INSERT INTO t1 (b) VALUES('2000-01-01 12:00:70');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End DATETIME tests ++
--echo ++ Begin TIMESTAMP tests ++
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b TIMESTAMP, PRIMARY KEY(a));

--echo Testing MIN TIMESTAMP
INSERT INTO t1 (b) VALUES('1970-01-01 00:00:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX TIMESTAMP
INSERT INTO t1 (b) VALUES('2038-01-19 03:14:07');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MIN-1 TIMESTAMP
--ERROR ER_INVALID_TIMESTAMP_VALUE 
INSERT INTO t1 (b) VALUES('1969-12-31 23:59:59');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX+1 TIMESTAMP
--ERROR ER_INVALID_TIMESTAMP_VALUE
INSERT INTO t1 (b) VALUES('2038-01-19 03:14:08');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input format TIMESTAMP1
INSERT INTO t1 (b) VALUES(20000101121559);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing Alternate input formate TIMESTAMP2
INSERT INTO t1 (b) VALUES(19990601121547);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL TIMESTAMP
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT TIMESTAMP1
--ERROR ER_INVALID_TIMESTAMP_VALUE 
INSERT INTO t1 (b) VALUES('2000-01-01 25:00:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT TIMESTAMP2
--ERROR ER_INVALID_TIMESTAMP_VALUE
INSERT INTO t1 (b) VALUES('2000-01-01 12:60:00');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BAD INPUT TIMESTAMP3
--ERROR ER_INVALID_TIMESTAMP_VALUE 
INSERT INTO t1 (b) VALUES('2000-01-01 12:00:65');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo ++ End TIMESTAMP tests ++
--echo ++ Begin BLOB simple tests ++
# NOTE: We aren't testing MIN/MAX here
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings
CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b BLOB, PRIMARY KEY(a));

--echo Testing BLOB simple1
INSERT INTO t1 (b) VALUES("This is a string that will go into a BLOB column.  Let's see how it works");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing BLOB simple2
INSERT INTO t1 (b) VALUES("this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string this_is_a_longish_string");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing NULL BLOB simple
INSERT INTO t1 (b) VALUES(NULL);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing INPUT BLOB simple1
INSERT INTO t1 (b) VALUES(100);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing INPUT BLOB simple2
INSERT INTO t1 (b) VALUES("");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing INPUT BLOB simple3
INSERT INTO t1 (b) VALUES('2000-01-01 12:00:70');
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo



--echo # Bug#594873 - transaction log incorrectly records NULL INSERT into an ENUM as the first permissible value
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (a INT NOT NULL, b ENUM ('1','2'), PRIMARY KEY(a));

INSERT INTO t1 VALUES (1,NULL);

--echo We check how the NULL was recorded
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc

--echo #Bug#594876 - transaction log not diffentiating NULL values and empty string for char columns
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (a INT NOT NULL, b CHAR(1000), PRIMARY KEY (a));
INSERT INTO t1 VALUES (1,NULL);

# Check the transaction_log contents:

--echo We check how the NULL was recorded in the log 
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc

INSERT INTO t1 VALUES (2,"");

--echo We check how the empty string was recorded in the log 
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc

--echo **** BEGIN LARGE DATA TYPE TESTS ****
--echo Testing Large DECIMAL1 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b DECIMAL(65,00), PRIMARY KEY(a));
INSERT INTO t1 (b) VALUES (99999999999999999999999999999999999999999999999999999999999999999);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Testing MAX DECIMAL + 1
--ERROR ER_WARN_DATA_OUT_OF_RANGE
INSERT INTO t1 (b) VALUES (999999999999999999999999999999999999999999999999999999999999999990);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SELECT * FROM t1;
DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc


--echo Testing Large DECIMAL2 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b DECIMAL(65,30), PRIMARY KEY(a));
INSERT INTO t1 (b) VALUES (999999999999999);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

INSERT INTO t1 (b) VALUES (99999999999999999999999999999999999.999999999999999999999999999999);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo Too long value
--ERROR ER_WARN_DATA_TRUNCATED
INSERT INTO t1 (b) VALUES (99999999999999999999999999999999999.9999999999999999999999999999991);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

SELECT * FROM t1;
DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc

--echo Testing Large VARCHAR1 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (a INT NOT NULL AUTO_INCREMENT, b VARCHAR(1024), PRIMARY KEY(a));
INSERT INTO t1 (b) VALUES (999999999999999);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

INSERT INTO t1 (b) VALUES ("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

INSERT INTO t1 (b) VALUES ("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"),("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"),("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"),("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"),("zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz");
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc


