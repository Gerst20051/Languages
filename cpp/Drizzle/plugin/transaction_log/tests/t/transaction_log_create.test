# transaction_log_create
# Test of CREATE TABLE statements and how the transaction log
# captures / represents them

# Ignore startup/shutdown events
--disable_query_log
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--enable_query_log

--echo Testing simple CREATE
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, PRIMARY KEY(a));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing multi-column CREATE
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR, c BLOB, d TEXT, e DATE NOT NULL, f BLOB NOT NULL, PRIMARY KEY(a));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE with DEFAULT VALUES
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(25) NOT NULL DEFAULT 'this_is_a_default_value', PRIMARY KEY(a));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE with multi-part key 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(25) NOT NULL DEFAULT 'this_is_a_default_value', c DATE, d TIMESTAMP, PRIMARY KEY(a,b,d));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE with partial key
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(25) NOT NULL DEFAULT 'this_is_a_default_value', c DATE, d TIMESTAMP, PRIMARY KEY(b(5)));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE with multiple keys
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(25) NOT NULL DEFAULT 'this_is_a_default_value', c DATE, d TIMESTAMP, PRIMARY KEY(b(5)), KEY composite_key(a,b(10),c));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE with UNIQUE key
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(25) NOT NULL DEFAULT 'this_is_a_default_value', c DATE, d TIMESTAMP, PRIMARY KEY(a), UNIQUE KEY unique_key(a,b(20),c));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE IF NOT EXISTS 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

--echo positive test (should pass)
CREATE TABLE IF NOT EXISTS t1(a INT NOT NULL, PRIMARY KEY(a));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

--echo negative test (should not be created / logged)
CREATE TABLE IF NOT EXISTS t1(b CHAR(100) NOT NULL, PRIMARY KEY(b));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo


DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing Foreign Key constraints 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

CREATE TABLE t2(a INT NOT NULL, b INT , PRIMARY KEY(a), KEY b_key (b), 
CONSTRAINT fk_constraint_t2 FOREIGN KEY (b) REFERENCES t1(b) ON DELETE SET NULL ON UPDATE CASCADE);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t2;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE TABLE...LIKE 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b INT NOT NULL, PRIMARY KEY(a), KEY b_key1 (b));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

CREATE TABLE t2 LIKE t1;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t2;

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing collations - column 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(1000) NOT NULL COLLATE utf8_turkish_ci, c CHAR(10), PRIMARY KEY(a), KEY b_key1 (b));
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing collations - table 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b CHAR(1000) NOT NULL , c CHAR(1) COLLATE utf8_bin, PRIMARY KEY(a)) COLLATE utf8_turkish_ci;  

--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing charset - column 
--disable_warnings
DROP TABLE IF EXISTS t1, t2;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, b BLOB NOT NULL, c CHAR(1) DEFAULT '0', PRIMARY KEY(a)); 

--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing CREATE data-type / fields
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (
  autoinc_int_field INT NOT NULL AUTO_INCREMENT
, null_int_field INT NULL
, not_null_bigint_field BIGINT NOT NULL
, null_bigint_field BIGINT NULL
, not_null_int_field INT NOT NULL
, null_varchar_field VARCHAR(100) NULL
, not_null_varchar_field VARCHAR(100) NOT NULL
, null_enum_field ENUM ('val1', 'val2') NULL
, not_null_enum_field ENUM ('val1', 'val2') NOT NULL
, null_date_field DATE NULL
, not_null_date_field DATE NOT NULL
, null_datetime_field DATETIME NULL
, not_null_datetime_field DATETIME NOT NULL
, null_blob_field BLOB NULL
, not_null_blob_field BLOB NOT NULL
, null_text_field TEXT NULL
, not_null_text_field TEXT NOT NULL
, null_timestamp_field TIMESTAMP NULL
, not_null_timestamp_field TIMESTAMP NOT NULL
, null_double_field DOUBLE NULL
, not_null_double_field DOUBLE NOT NULL
, null_decimal_field DECIMAL(10,2) NULL
, not_null_decimal_field DECIMAL(10,2) NOT NULL
, PRIMARY KEY (autoinc_int_field)
);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing index generation 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1 (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY
, key1 VARCHAR(10) NOT NULL
, key2 DOUBLE NOT NULL
, key3 BLOB NOT NULL
, UNIQUE KEY (key1)
, KEY named_key (key2)
, KEY partial_key (key3(30))
);
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

DROP TABLE t1;

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

