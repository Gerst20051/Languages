CREATE TABLE t1 (
pk INT NOT NULL AUTO_INCREMENT,
col_int1 INT,
col_int2 INT,
col_int_not_null INT NOT NULL,
PRIMARY KEY (pk));
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (1,1,1);
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (NULL,1,1);
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (2,1,3);
SET GLOBAL transaction_log_truncate_debug= true;
BEGIN;
UPDATE t1 SET col_int_not_null = col_int1 WHERE col_int2 = 1;
ERROR 23000: Column 'col_int_not_null' cannot be null
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (5,5,5);
COMMIT;

We should have a Transaction with a single insert Statement
SELECT PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS));
PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS))
transaction_context {
  server_id: 1
  TRANSACTION_ID
  START_TIMESTAMP
  END_TIMESTAMP
}
statement {
  type: INSERT
  START_TIMESTAMP
  END_TIMESTAMP
  insert_header {
    table_metadata {
      schema_name: "test"
      table_name: "t1"
    }
    field_metadata {
      type: INTEGER
      name: "pk"
    }
    field_metadata {
      type: INTEGER
      name: "col_int1"
    }
    field_metadata {
      type: INTEGER
      name: "col_int2"
    }
    field_metadata {
      type: INTEGER
      name: "col_int_not_null"
    }
  }
  insert_data {
    segment_id: 1
    end_segment: true
    record {
      insert_value: "4"
      insert_value: "5"
      insert_value: "5"
      insert_value: "5"
      is_null: false
      is_null: false
      is_null: false
      is_null: false
    }
  }
}
segment_id: 1
end_segment: true

BEGIN;
UPDATE t1 SET col_int1 = (col_int1 + 1) WHERE col_int2 = 1;
UPDATE t1 SET col_int_not_null = col_int1 WHERE col_int2 = 1;
ERROR 23000: Column 'col_int_not_null' cannot be null
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (6,6,6);
COMMIT;

We should have a Transaction with 1 update and 1 insert Statement
SELECT PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS));
PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS))
transaction_context {
  server_id: 1
  TRANSACTION_ID
  START_TIMESTAMP
  END_TIMESTAMP
}
statement {
  type: UPDATE
  START_TIMESTAMP
  END_TIMESTAMP
  update_header {
    table_metadata {
      schema_name: "test"
      table_name: "t1"
    }
    key_field_metadata {
      type: INTEGER
      name: "pk"
    }
    set_field_metadata {
      type: INTEGER
      name: "col_int1"
    }
  }
  update_data {
    segment_id: 1
    end_segment: true
    record {
      key_value: "1"
      after_value: "2"
      is_null: false
    }
    record {
      key_value: "3"
      after_value: "3"
      is_null: false
    }
  }
}
statement {
  type: INSERT
  START_TIMESTAMP
  END_TIMESTAMP
  insert_header {
    table_metadata {
      schema_name: "test"
      table_name: "t1"
    }
    field_metadata {
      type: INTEGER
      name: "pk"
    }
    field_metadata {
      type: INTEGER
      name: "col_int1"
    }
    field_metadata {
      type: INTEGER
      name: "col_int2"
    }
    field_metadata {
      type: INTEGER
      name: "col_int_not_null"
    }
  }
  insert_data {
    segment_id: 1
    end_segment: true
    record {
      insert_value: "5"
      insert_value: "6"
      insert_value: "6"
      insert_value: "6"
      is_null: false
      is_null: false
      is_null: false
      is_null: false
    }
  }
}
segment_id: 1
end_segment: true

CREATE TABLE t2 (pk INT NOT NULL AUTO_INCREMENT PRIMARY KEY, a INT);
INSERT INTO t2 (a) VALUES (1),(2), (NULL);
BEGIN;
INSERT INTO t1 (col_int_not_null) SELECT a FROM t2;
ERROR 23000: Column 'col_int_not_null' cannot be null
INSERT INTO t1 (col_int1, col_int2, col_int_not_null) VALUES (7,7,7);
COMMIT;

We should have a Transaction with 1 insert Statement
SELECT PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS));
PRINT_TRANSACTION_MESSAGE('transaction.log',(select max(entry_offset) from DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS))
transaction_context {
  server_id: 1
  TRANSACTION_ID
  START_TIMESTAMP
  END_TIMESTAMP
}
statement {
  type: INSERT
  START_TIMESTAMP
  END_TIMESTAMP
  insert_header {
    table_metadata {
      schema_name: "test"
      table_name: "t1"
    }
    field_metadata {
      type: INTEGER
      name: "pk"
    }
    field_metadata {
      type: INTEGER
      name: "col_int1"
    }
    field_metadata {
      type: INTEGER
      name: "col_int2"
    }
    field_metadata {
      type: INTEGER
      name: "col_int_not_null"
    }
  }
  insert_data {
    segment_id: 1
    end_segment: true
    record {
      insert_value: "8"
      insert_value: "7"
      insert_value: "7"
      insert_value: "7"
      is_null: false
      is_null: false
      is_null: false
      is_null: false
    }
  }
}
segment_id: 1
end_segment: true

DROP TABLE t1;
DROP TABLE t2;
SET GLOBAL transaction_log_truncate_debug= true;
