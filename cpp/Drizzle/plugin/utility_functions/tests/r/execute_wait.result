CREATE TABLE t1 (A VARCHAR(150));
SET @execute= "SELECT WAIT('barrier')";
INSERT INTO t1 VALUES ("CREATE TABLE A (A INT)"), ("CREATE TABLE B (A INT)"), ("CREATE TABLE C (A INT)");
SELECT A FROM t1 ORDER BY A;
A
CREATE TABLE A (A INT)
CREATE TABLE B (A INT)
CREATE TABLE C (A INT)
SELECT EXECUTE(A) WAIT, 1 FROM t1;
EXECUTE(A) WAIT	1
1	1
1	1
1	1
SELECT TABLE_NAME FROM DATA_DICTIONARY.TABLES WHERE TABLE_SCHEMA=SCHEMA() ORDER BY TABLE_NAME;
TABLE_NAME
t1
SELECT IF((COUNT(TABLE_NAME) = 3), "YES", "NO") FROM DATA_DICTIONARY.TABLES WHERE TABLE_NAME IN ("A", "B", "C") AND TABLE_SCHEMA=SCHEMA();
IF((COUNT(TABLE_NAME) = 3), "YES", "NO")
NO
DROP TABLE t1;
CREATE TABLE t1 (A VARCHAR(150));
SET @execute= "SELECT WAIT('barrier')";
INSERT INTO t1 VALUES ("COMMIT; CREATE TABLE A (A INT)"), ("COMMIT; CREATE TABLE B (A INT)"), ("CREATE TABLE C (A INT)");
SELECT A FROM t1 ORDER BY A;
A
COMMIT; CREATE TABLE A (A INT)
COMMIT; CREATE TABLE B (A INT)
CREATE TABLE C (A INT)
SELECT EXECUTE(A) WAIT, 1 FROM t1;
EXECUTE(A) WAIT	1
1	1
1	1
1	1
SELECT TABLE_NAME FROM DATA_DICTIONARY.TABLES WHERE TABLE_SCHEMA=SCHEMA() ORDER BY TABLE_NAME;
TABLE_NAME
A
B
t1
SELECT IF((COUNT(TABLE_NAME) = 2), "YES", "NO") FROM DATA_DICTIONARY.TABLES WHERE TABLE_NAME IN ("A", "B", "C") AND TABLE_SCHEMA=SCHEMA();
IF((COUNT(TABLE_NAME) = 2), "YES", "NO")
YES
DROP TABLE A, B, t1;
