# Testcase for Bug #53592 - "crash replacing duplicates into
# table after fast alter table added unique key". The fix is to make
# sure index number lookup should go through "index translation table".

# DRIZZLE NOTE: WE DON'T HAVE FAST INDEX CREATION TOGGLE.
# I.E. THIS TEST IS WRONG

# Use FIC for index creation
--echo set old_alter_table=0;

create table bug53592(a int) engine=innodb row_format=compact;

alter table bug53592 add column b text;

alter table bug53592 add column c blob not null;

# Create a non-unique nonclustered index
create index bug53592_b on bug53592(b(81));

# Create a unique index, this unique index should have smaller
# index number than bug53592_b, since unique index ranks higher
# than regular index does
create unique index bug53592_c on bug53592(c(1));

# This will trigger a dup key error and will require fetching
# the index number through a index structure for the error reporting.
# To get the correct index number, the code should go through index
# translation table. Otherwise, it will get the wrong index
# number and later trigger a server crash.
replace into bug53592 values (NULL,NULL,''),(NULL,NULL,'');

check table bug53592;

drop table bug53592;

# Running the same set of test when "old_alter_table" is turned on
--echo set old_alter_table=1;

create table bug53592(a int) engine=innodb row_format=compact;

alter table bug53592 add column b text ;

alter table bug53592 add column c blob not null;

# Create a non-unique nonclustered index
create index bug53592_b on bug53592(b(81));

# Create a unique index
create unique index bug53592_c on bug53592(c(1));

# This will trigger a dup key error and will require fetching
# the index number through a index structure for the error reporting.
# To get the correct index number, the code should go through index
# translation table. Otherwise, it will get the wrong index
# number and later trigger a server crash.
replace into bug53592 values (NULL,NULL,''),(NULL,NULL,'');

check table bug53592;

drop table bug53592;
