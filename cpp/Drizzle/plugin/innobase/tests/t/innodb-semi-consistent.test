-- source include/have_innodb.inc

--disable_warnings
drop table if exists t1;
--enable_warnings

SET @orig_lock_wait_timeout= @@innodb_lock_wait_timeout; 
SET GLOBAL innodb_lock_wait_timeout=2;

# basic tests of semi-consistent reads
connect (a,localhost,root,,);
connect (b,localhost,root,,);
connection a;
set session transaction isolation level read committed;
create table t1(a int not null) engine=innodb;
insert into t1 values (1),(2),(3),(4),(5),(6),(7);
set autocommit=0;
# we have locks_unsafe_for_binlog on by default. this should work.
select * from t1 where a=3 lock in share mode;
connection b;
set session transaction isolation level read committed;
set autocommit=0;
update t1 set a=10 where a=5;
connection a;
commit;
connection b;
update t1 set a=10 where a=5;
connection a;
-- error ER_LOCK_WAIT_TIMEOUT
select * from t1 where a=2 for update;
# this should lock the records (1),(2)
select * from t1 where a=2 limit 1 for update;
connection b;
update t1 set a=11 where a=6;
-- error ER_LOCK_WAIT_TIMEOUT
update t1 set a=12 where a=2;
update t1 set a=13 where a=1;
connection a;
commit;
connection b;
update t1 set a=14 where a=1;
commit;
connection a;
select * from t1;
commit;
drop table t1;
connection default;
disconnect a;
disconnect b;


SET GLOBAL innodb_lock_wait_timeout=@orig_lock_wait_timeout ;

