=head1 NAME

memc_set

=head1 UDF 

Libmemcached User Defined Function for MySQL 

=head1 SYNOPSIS

=head1 DESCRIPTION

memc_set('<key>', '<value>') is a UDF used to set an individual value from the memcached
server from within MySQL. You must pass in a key and data value. The key
you use to set the value with will be the key you use to subsequently 
retrieve that data with (memc_get('<key>'))

memc_add() adds an object to the server. If the object is found on the
server an error occurs, otherwise the value is stored.

memc_prepend() places a segment of data before the last piece of data 
stored. Currently expiration and key are not used in the server.

memc_append() places a segment of data at the end of the last piece of 
data stored. Currently expiration and key are not used in the server.

memc_cas() overwrites data in the server as long as the "cas" value is 
still the same in the server.  At the point that this note was written
cas is still buggy in memached.

memc_set_by_key(), memc_add_by_key(), mem_replace_by_key(), memc_prepend_by_key(),
memc_append_by_key_by_key(), memc_cas_by_key() methods all behave in a 
similar method as the non key methods. The difference is that they use
their master_key parameter to map objects to particular servers.

If you are looking for performance, memc_set() with non-blocking IO is 
the fastest way to store data on the server.

=head1 RETURN

NULL

=head1 USAGE 

memc_set('keyfoo', 'somevalue hahah');
memc_set_by_key('master key', 'keyfoo', 'somevalue hahah');
memc_add('keyfoo', 'somevalue hahah');
memc_add_by_key('master key', 'keyfoo', 'somevalue hahah');
memc_replace('keyfoo', 'replaced value');
memc_replace_by_key('master key', 'keyfoo', 'replaced value');

=head1 HOME

To find out more information please check:
L<http://hg.tangent.org/memcached_functions_mysql>
L<http://tangent.org/552/libmemcached.html>

=head1 INSTALL

CREATE FUNCTION memc_set RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_set_by_key RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_cas RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_cas_by_key RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_add RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_add_by_key RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_replace RETURNS INT SONAME "libmemcached_functions_mysql.so";
CREATE FUNCTION memc_replace_by_key RETURNS INT SONAME "libmemcached_functions_mysql.so";

=head1 AUTHOR

Patrick Galbraith, E<lt>patg@patg.netE<gt>
Brian Aker, E<lt>brian@tangent.orgE<gt>

=head1 SEE ALSO

memc_set(), memc_delete()...

=cut

